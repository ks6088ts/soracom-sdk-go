/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SubscriptionContainerStatusCountryMappingValue struct for SubscriptionContainerStatusCountryMappingValue
type SubscriptionContainerStatusCountryMappingValue struct {
	MappingRecord *SubscriptionContainerStatusCountryMappingValueMappingRecord `json:"mappingRecord,omitempty"`
	PlmnCode *string `json:"plmnCode,omitempty"`
}

// NewSubscriptionContainerStatusCountryMappingValue instantiates a new SubscriptionContainerStatusCountryMappingValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionContainerStatusCountryMappingValue() *SubscriptionContainerStatusCountryMappingValue {
	this := SubscriptionContainerStatusCountryMappingValue{}
	return &this
}

// NewSubscriptionContainerStatusCountryMappingValueWithDefaults instantiates a new SubscriptionContainerStatusCountryMappingValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionContainerStatusCountryMappingValueWithDefaults() *SubscriptionContainerStatusCountryMappingValue {
	this := SubscriptionContainerStatusCountryMappingValue{}
	return &this
}

// GetMappingRecord returns the MappingRecord field value if set, zero value otherwise.
func (o *SubscriptionContainerStatusCountryMappingValue) GetMappingRecord() SubscriptionContainerStatusCountryMappingValueMappingRecord {
	if o == nil || o.MappingRecord == nil {
		var ret SubscriptionContainerStatusCountryMappingValueMappingRecord
		return ret
	}
	return *o.MappingRecord
}

// GetMappingRecordOk returns a tuple with the MappingRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionContainerStatusCountryMappingValue) GetMappingRecordOk() (*SubscriptionContainerStatusCountryMappingValueMappingRecord, bool) {
	if o == nil || o.MappingRecord == nil {
		return nil, false
	}
	return o.MappingRecord, true
}

// HasMappingRecord returns a boolean if a field has been set.
func (o *SubscriptionContainerStatusCountryMappingValue) HasMappingRecord() bool {
	if o != nil && o.MappingRecord != nil {
		return true
	}

	return false
}

// SetMappingRecord gets a reference to the given SubscriptionContainerStatusCountryMappingValueMappingRecord and assigns it to the MappingRecord field.
func (o *SubscriptionContainerStatusCountryMappingValue) SetMappingRecord(v SubscriptionContainerStatusCountryMappingValueMappingRecord) {
	o.MappingRecord = &v
}

// GetPlmnCode returns the PlmnCode field value if set, zero value otherwise.
func (o *SubscriptionContainerStatusCountryMappingValue) GetPlmnCode() string {
	if o == nil || o.PlmnCode == nil {
		var ret string
		return ret
	}
	return *o.PlmnCode
}

// GetPlmnCodeOk returns a tuple with the PlmnCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionContainerStatusCountryMappingValue) GetPlmnCodeOk() (*string, bool) {
	if o == nil || o.PlmnCode == nil {
		return nil, false
	}
	return o.PlmnCode, true
}

// HasPlmnCode returns a boolean if a field has been set.
func (o *SubscriptionContainerStatusCountryMappingValue) HasPlmnCode() bool {
	if o != nil && o.PlmnCode != nil {
		return true
	}

	return false
}

// SetPlmnCode gets a reference to the given string and assigns it to the PlmnCode field.
func (o *SubscriptionContainerStatusCountryMappingValue) SetPlmnCode(v string) {
	o.PlmnCode = &v
}

func (o SubscriptionContainerStatusCountryMappingValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MappingRecord != nil {
		toSerialize["mappingRecord"] = o.MappingRecord
	}
	if o.PlmnCode != nil {
		toSerialize["plmnCode"] = o.PlmnCode
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionContainerStatusCountryMappingValue struct {
	value *SubscriptionContainerStatusCountryMappingValue
	isSet bool
}

func (v NullableSubscriptionContainerStatusCountryMappingValue) Get() *SubscriptionContainerStatusCountryMappingValue {
	return v.value
}

func (v *NullableSubscriptionContainerStatusCountryMappingValue) Set(val *SubscriptionContainerStatusCountryMappingValue) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionContainerStatusCountryMappingValue) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionContainerStatusCountryMappingValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionContainerStatusCountryMappingValue(val *SubscriptionContainerStatusCountryMappingValue) *NullableSubscriptionContainerStatusCountryMappingValue {
	return &NullableSubscriptionContainerStatusCountryMappingValue{value: val, isSet: true}
}

func (v NullableSubscriptionContainerStatusCountryMappingValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionContainerStatusCountryMappingValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


