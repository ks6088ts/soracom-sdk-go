/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// VolumeDiscountModel Long term discount
type VolumeDiscountModel struct {
	// 契約月数
	ContractTermMonth *int32 `json:"contractTermMonth,omitempty"`
	// 通貨
	Currency *string `json:"currency,omitempty"`
	// 適用終了日
	EndDate *string `json:"endDate,omitempty"`
	// 初期費用
	InitialCost *float64 `json:"initialCost,omitempty"`
	// 数量
	Quantity *int32 `json:"quantity,omitempty"`
	// 適用開始日
	StartDate *string `json:"startDate,omitempty"`
	// 税込初期費用
	TaxIncludedInitialCost *float64 `json:"taxIncludedInitialCost,omitempty"`
	// 税込単価
	TaxIncludedUnitPrice *float64 `json:"taxIncludedUnitPrice,omitempty"`
	// 単価
	UnitPrice *float64 `json:"unitPrice,omitempty"`
	// お支払い方法
	VolumeDiscountPaymentType *string `json:"volumeDiscountPaymentType,omitempty"`
	// 料金計算方法
	VolumeDiscountType *string `json:"volumeDiscountType,omitempty"`
}

// NewVolumeDiscountModel instantiates a new VolumeDiscountModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeDiscountModel() *VolumeDiscountModel {
	this := VolumeDiscountModel{}
	var contractTermMonth int32 = 12
	this.ContractTermMonth = &contractTermMonth
	return &this
}

// NewVolumeDiscountModelWithDefaults instantiates a new VolumeDiscountModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeDiscountModelWithDefaults() *VolumeDiscountModel {
	this := VolumeDiscountModel{}
	var contractTermMonth int32 = 12
	this.ContractTermMonth = &contractTermMonth
	return &this
}

// GetContractTermMonth returns the ContractTermMonth field value if set, zero value otherwise.
func (o *VolumeDiscountModel) GetContractTermMonth() int32 {
	if o == nil || o.ContractTermMonth == nil {
		var ret int32
		return ret
	}
	return *o.ContractTermMonth
}

// GetContractTermMonthOk returns a tuple with the ContractTermMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDiscountModel) GetContractTermMonthOk() (*int32, bool) {
	if o == nil || o.ContractTermMonth == nil {
		return nil, false
	}
	return o.ContractTermMonth, true
}

// HasContractTermMonth returns a boolean if a field has been set.
func (o *VolumeDiscountModel) HasContractTermMonth() bool {
	if o != nil && o.ContractTermMonth != nil {
		return true
	}

	return false
}

// SetContractTermMonth gets a reference to the given int32 and assigns it to the ContractTermMonth field.
func (o *VolumeDiscountModel) SetContractTermMonth(v int32) {
	o.ContractTermMonth = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *VolumeDiscountModel) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDiscountModel) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *VolumeDiscountModel) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *VolumeDiscountModel) SetCurrency(v string) {
	o.Currency = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *VolumeDiscountModel) GetEndDate() string {
	if o == nil || o.EndDate == nil {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDiscountModel) GetEndDateOk() (*string, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *VolumeDiscountModel) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *VolumeDiscountModel) SetEndDate(v string) {
	o.EndDate = &v
}

// GetInitialCost returns the InitialCost field value if set, zero value otherwise.
func (o *VolumeDiscountModel) GetInitialCost() float64 {
	if o == nil || o.InitialCost == nil {
		var ret float64
		return ret
	}
	return *o.InitialCost
}

// GetInitialCostOk returns a tuple with the InitialCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDiscountModel) GetInitialCostOk() (*float64, bool) {
	if o == nil || o.InitialCost == nil {
		return nil, false
	}
	return o.InitialCost, true
}

// HasInitialCost returns a boolean if a field has been set.
func (o *VolumeDiscountModel) HasInitialCost() bool {
	if o != nil && o.InitialCost != nil {
		return true
	}

	return false
}

// SetInitialCost gets a reference to the given float64 and assigns it to the InitialCost field.
func (o *VolumeDiscountModel) SetInitialCost(v float64) {
	o.InitialCost = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *VolumeDiscountModel) GetQuantity() int32 {
	if o == nil || o.Quantity == nil {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDiscountModel) GetQuantityOk() (*int32, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *VolumeDiscountModel) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *VolumeDiscountModel) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *VolumeDiscountModel) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDiscountModel) GetStartDateOk() (*string, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *VolumeDiscountModel) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *VolumeDiscountModel) SetStartDate(v string) {
	o.StartDate = &v
}

// GetTaxIncludedInitialCost returns the TaxIncludedInitialCost field value if set, zero value otherwise.
func (o *VolumeDiscountModel) GetTaxIncludedInitialCost() float64 {
	if o == nil || o.TaxIncludedInitialCost == nil {
		var ret float64
		return ret
	}
	return *o.TaxIncludedInitialCost
}

// GetTaxIncludedInitialCostOk returns a tuple with the TaxIncludedInitialCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDiscountModel) GetTaxIncludedInitialCostOk() (*float64, bool) {
	if o == nil || o.TaxIncludedInitialCost == nil {
		return nil, false
	}
	return o.TaxIncludedInitialCost, true
}

// HasTaxIncludedInitialCost returns a boolean if a field has been set.
func (o *VolumeDiscountModel) HasTaxIncludedInitialCost() bool {
	if o != nil && o.TaxIncludedInitialCost != nil {
		return true
	}

	return false
}

// SetTaxIncludedInitialCost gets a reference to the given float64 and assigns it to the TaxIncludedInitialCost field.
func (o *VolumeDiscountModel) SetTaxIncludedInitialCost(v float64) {
	o.TaxIncludedInitialCost = &v
}

// GetTaxIncludedUnitPrice returns the TaxIncludedUnitPrice field value if set, zero value otherwise.
func (o *VolumeDiscountModel) GetTaxIncludedUnitPrice() float64 {
	if o == nil || o.TaxIncludedUnitPrice == nil {
		var ret float64
		return ret
	}
	return *o.TaxIncludedUnitPrice
}

// GetTaxIncludedUnitPriceOk returns a tuple with the TaxIncludedUnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDiscountModel) GetTaxIncludedUnitPriceOk() (*float64, bool) {
	if o == nil || o.TaxIncludedUnitPrice == nil {
		return nil, false
	}
	return o.TaxIncludedUnitPrice, true
}

// HasTaxIncludedUnitPrice returns a boolean if a field has been set.
func (o *VolumeDiscountModel) HasTaxIncludedUnitPrice() bool {
	if o != nil && o.TaxIncludedUnitPrice != nil {
		return true
	}

	return false
}

// SetTaxIncludedUnitPrice gets a reference to the given float64 and assigns it to the TaxIncludedUnitPrice field.
func (o *VolumeDiscountModel) SetTaxIncludedUnitPrice(v float64) {
	o.TaxIncludedUnitPrice = &v
}

// GetUnitPrice returns the UnitPrice field value if set, zero value otherwise.
func (o *VolumeDiscountModel) GetUnitPrice() float64 {
	if o == nil || o.UnitPrice == nil {
		var ret float64
		return ret
	}
	return *o.UnitPrice
}

// GetUnitPriceOk returns a tuple with the UnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDiscountModel) GetUnitPriceOk() (*float64, bool) {
	if o == nil || o.UnitPrice == nil {
		return nil, false
	}
	return o.UnitPrice, true
}

// HasUnitPrice returns a boolean if a field has been set.
func (o *VolumeDiscountModel) HasUnitPrice() bool {
	if o != nil && o.UnitPrice != nil {
		return true
	}

	return false
}

// SetUnitPrice gets a reference to the given float64 and assigns it to the UnitPrice field.
func (o *VolumeDiscountModel) SetUnitPrice(v float64) {
	o.UnitPrice = &v
}

// GetVolumeDiscountPaymentType returns the VolumeDiscountPaymentType field value if set, zero value otherwise.
func (o *VolumeDiscountModel) GetVolumeDiscountPaymentType() string {
	if o == nil || o.VolumeDiscountPaymentType == nil {
		var ret string
		return ret
	}
	return *o.VolumeDiscountPaymentType
}

// GetVolumeDiscountPaymentTypeOk returns a tuple with the VolumeDiscountPaymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDiscountModel) GetVolumeDiscountPaymentTypeOk() (*string, bool) {
	if o == nil || o.VolumeDiscountPaymentType == nil {
		return nil, false
	}
	return o.VolumeDiscountPaymentType, true
}

// HasVolumeDiscountPaymentType returns a boolean if a field has been set.
func (o *VolumeDiscountModel) HasVolumeDiscountPaymentType() bool {
	if o != nil && o.VolumeDiscountPaymentType != nil {
		return true
	}

	return false
}

// SetVolumeDiscountPaymentType gets a reference to the given string and assigns it to the VolumeDiscountPaymentType field.
func (o *VolumeDiscountModel) SetVolumeDiscountPaymentType(v string) {
	o.VolumeDiscountPaymentType = &v
}

// GetVolumeDiscountType returns the VolumeDiscountType field value if set, zero value otherwise.
func (o *VolumeDiscountModel) GetVolumeDiscountType() string {
	if o == nil || o.VolumeDiscountType == nil {
		var ret string
		return ret
	}
	return *o.VolumeDiscountType
}

// GetVolumeDiscountTypeOk returns a tuple with the VolumeDiscountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDiscountModel) GetVolumeDiscountTypeOk() (*string, bool) {
	if o == nil || o.VolumeDiscountType == nil {
		return nil, false
	}
	return o.VolumeDiscountType, true
}

// HasVolumeDiscountType returns a boolean if a field has been set.
func (o *VolumeDiscountModel) HasVolumeDiscountType() bool {
	if o != nil && o.VolumeDiscountType != nil {
		return true
	}

	return false
}

// SetVolumeDiscountType gets a reference to the given string and assigns it to the VolumeDiscountType field.
func (o *VolumeDiscountModel) SetVolumeDiscountType(v string) {
	o.VolumeDiscountType = &v
}

func (o VolumeDiscountModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContractTermMonth != nil {
		toSerialize["contractTermMonth"] = o.ContractTermMonth
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.InitialCost != nil {
		toSerialize["initialCost"] = o.InitialCost
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.TaxIncludedInitialCost != nil {
		toSerialize["taxIncludedInitialCost"] = o.TaxIncludedInitialCost
	}
	if o.TaxIncludedUnitPrice != nil {
		toSerialize["taxIncludedUnitPrice"] = o.TaxIncludedUnitPrice
	}
	if o.UnitPrice != nil {
		toSerialize["unitPrice"] = o.UnitPrice
	}
	if o.VolumeDiscountPaymentType != nil {
		toSerialize["volumeDiscountPaymentType"] = o.VolumeDiscountPaymentType
	}
	if o.VolumeDiscountType != nil {
		toSerialize["volumeDiscountType"] = o.VolumeDiscountType
	}
	return json.Marshal(toSerialize)
}

type NullableVolumeDiscountModel struct {
	value *VolumeDiscountModel
	isSet bool
}

func (v NullableVolumeDiscountModel) Get() *VolumeDiscountModel {
	return v.value
}

func (v *NullableVolumeDiscountModel) Set(val *VolumeDiscountModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeDiscountModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeDiscountModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeDiscountModel(val *VolumeDiscountModel) *NullableVolumeDiscountModel {
	return &NullableVolumeDiscountModel{value: val, isSet: true}
}

func (v NullableVolumeDiscountModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeDiscountModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


