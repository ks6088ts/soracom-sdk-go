/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// SoraCamDevice struct for SoraCamDevice
type SoraCamDevice struct {
	// ソラカメ対応カメラに適用されているライセンス。この情報は、[`SoraCam:listSoraCamDevices API`](/ja-jp/tools/api/reference/#/SoraCam/listSoraCamDevices) を使用しても取得できません。[`SoraCam:getSoraCamDevice API`](/ja-jp/tools/api/reference/#/SoraCam/getSoraCamDevice) を使用してください。 
	AppliedLicenses []SoraCamDeviceLicenseInfo `json:"appliedLicenses,omitempty"`
	Configuration *SoraCamDeviceConfiguration `json:"configuration,omitempty"`
	// ソラカメ対応カメラが現在クラウドに接続されているかどうか
	Connected *bool `json:"connected,omitempty"`
	// ソラカメ対応カメラの種類  - `Camera` 
	DeviceCategory *string `json:"deviceCategory,omitempty"`
	// ソラカメ対応カメラのデバイス ID
	DeviceId *string `json:"deviceId,omitempty"`
	// ソラカメ対応カメラの現在のファームウェアバージョン
	FirmwareVersion *string `json:"firmwareVersion,omitempty"`
	// ソラカメ対応カメラが最後にクラウドに接続した UNIX 時間 (ミリ秒)
	LastConnectedTime *int64 `json:"lastConnectedTime,omitempty"`
	// ソラカメ対応カメラの名前
	Name *string `json:"name,omitempty"`
	// ソラカメ対応カメラの製品名
	ProductDisplayName *string `json:"productDisplayName,omitempty"`
}

// NewSoraCamDevice instantiates a new SoraCamDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSoraCamDevice() *SoraCamDevice {
	this := SoraCamDevice{}
	return &this
}

// NewSoraCamDeviceWithDefaults instantiates a new SoraCamDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSoraCamDeviceWithDefaults() *SoraCamDevice {
	this := SoraCamDevice{}
	return &this
}

// GetAppliedLicenses returns the AppliedLicenses field value if set, zero value otherwise.
func (o *SoraCamDevice) GetAppliedLicenses() []SoraCamDeviceLicenseInfo {
	if o == nil || o.AppliedLicenses == nil {
		var ret []SoraCamDeviceLicenseInfo
		return ret
	}
	return o.AppliedLicenses
}

// GetAppliedLicensesOk returns a tuple with the AppliedLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamDevice) GetAppliedLicensesOk() ([]SoraCamDeviceLicenseInfo, bool) {
	if o == nil || o.AppliedLicenses == nil {
		return nil, false
	}
	return o.AppliedLicenses, true
}

// HasAppliedLicenses returns a boolean if a field has been set.
func (o *SoraCamDevice) HasAppliedLicenses() bool {
	if o != nil && o.AppliedLicenses != nil {
		return true
	}

	return false
}

// SetAppliedLicenses gets a reference to the given []SoraCamDeviceLicenseInfo and assigns it to the AppliedLicenses field.
func (o *SoraCamDevice) SetAppliedLicenses(v []SoraCamDeviceLicenseInfo) {
	o.AppliedLicenses = v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *SoraCamDevice) GetConfiguration() SoraCamDeviceConfiguration {
	if o == nil || o.Configuration == nil {
		var ret SoraCamDeviceConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamDevice) GetConfigurationOk() (*SoraCamDeviceConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *SoraCamDevice) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given SoraCamDeviceConfiguration and assigns it to the Configuration field.
func (o *SoraCamDevice) SetConfiguration(v SoraCamDeviceConfiguration) {
	o.Configuration = &v
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *SoraCamDevice) GetConnected() bool {
	if o == nil || o.Connected == nil {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamDevice) GetConnectedOk() (*bool, bool) {
	if o == nil || o.Connected == nil {
		return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *SoraCamDevice) HasConnected() bool {
	if o != nil && o.Connected != nil {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *SoraCamDevice) SetConnected(v bool) {
	o.Connected = &v
}

// GetDeviceCategory returns the DeviceCategory field value if set, zero value otherwise.
func (o *SoraCamDevice) GetDeviceCategory() string {
	if o == nil || o.DeviceCategory == nil {
		var ret string
		return ret
	}
	return *o.DeviceCategory
}

// GetDeviceCategoryOk returns a tuple with the DeviceCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamDevice) GetDeviceCategoryOk() (*string, bool) {
	if o == nil || o.DeviceCategory == nil {
		return nil, false
	}
	return o.DeviceCategory, true
}

// HasDeviceCategory returns a boolean if a field has been set.
func (o *SoraCamDevice) HasDeviceCategory() bool {
	if o != nil && o.DeviceCategory != nil {
		return true
	}

	return false
}

// SetDeviceCategory gets a reference to the given string and assigns it to the DeviceCategory field.
func (o *SoraCamDevice) SetDeviceCategory(v string) {
	o.DeviceCategory = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *SoraCamDevice) GetDeviceId() string {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamDevice) GetDeviceIdOk() (*string, bool) {
	if o == nil || o.DeviceId == nil {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *SoraCamDevice) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *SoraCamDevice) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetFirmwareVersion returns the FirmwareVersion field value if set, zero value otherwise.
func (o *SoraCamDevice) GetFirmwareVersion() string {
	if o == nil || o.FirmwareVersion == nil {
		var ret string
		return ret
	}
	return *o.FirmwareVersion
}

// GetFirmwareVersionOk returns a tuple with the FirmwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamDevice) GetFirmwareVersionOk() (*string, bool) {
	if o == nil || o.FirmwareVersion == nil {
		return nil, false
	}
	return o.FirmwareVersion, true
}

// HasFirmwareVersion returns a boolean if a field has been set.
func (o *SoraCamDevice) HasFirmwareVersion() bool {
	if o != nil && o.FirmwareVersion != nil {
		return true
	}

	return false
}

// SetFirmwareVersion gets a reference to the given string and assigns it to the FirmwareVersion field.
func (o *SoraCamDevice) SetFirmwareVersion(v string) {
	o.FirmwareVersion = &v
}

// GetLastConnectedTime returns the LastConnectedTime field value if set, zero value otherwise.
func (o *SoraCamDevice) GetLastConnectedTime() int64 {
	if o == nil || o.LastConnectedTime == nil {
		var ret int64
		return ret
	}
	return *o.LastConnectedTime
}

// GetLastConnectedTimeOk returns a tuple with the LastConnectedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamDevice) GetLastConnectedTimeOk() (*int64, bool) {
	if o == nil || o.LastConnectedTime == nil {
		return nil, false
	}
	return o.LastConnectedTime, true
}

// HasLastConnectedTime returns a boolean if a field has been set.
func (o *SoraCamDevice) HasLastConnectedTime() bool {
	if o != nil && o.LastConnectedTime != nil {
		return true
	}

	return false
}

// SetLastConnectedTime gets a reference to the given int64 and assigns it to the LastConnectedTime field.
func (o *SoraCamDevice) SetLastConnectedTime(v int64) {
	o.LastConnectedTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SoraCamDevice) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamDevice) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SoraCamDevice) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SoraCamDevice) SetName(v string) {
	o.Name = &v
}

// GetProductDisplayName returns the ProductDisplayName field value if set, zero value otherwise.
func (o *SoraCamDevice) GetProductDisplayName() string {
	if o == nil || o.ProductDisplayName == nil {
		var ret string
		return ret
	}
	return *o.ProductDisplayName
}

// GetProductDisplayNameOk returns a tuple with the ProductDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamDevice) GetProductDisplayNameOk() (*string, bool) {
	if o == nil || o.ProductDisplayName == nil {
		return nil, false
	}
	return o.ProductDisplayName, true
}

// HasProductDisplayName returns a boolean if a field has been set.
func (o *SoraCamDevice) HasProductDisplayName() bool {
	if o != nil && o.ProductDisplayName != nil {
		return true
	}

	return false
}

// SetProductDisplayName gets a reference to the given string and assigns it to the ProductDisplayName field.
func (o *SoraCamDevice) SetProductDisplayName(v string) {
	o.ProductDisplayName = &v
}

func (o SoraCamDevice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppliedLicenses != nil {
		toSerialize["appliedLicenses"] = o.AppliedLicenses
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.Connected != nil {
		toSerialize["connected"] = o.Connected
	}
	if o.DeviceCategory != nil {
		toSerialize["deviceCategory"] = o.DeviceCategory
	}
	if o.DeviceId != nil {
		toSerialize["deviceId"] = o.DeviceId
	}
	if o.FirmwareVersion != nil {
		toSerialize["firmwareVersion"] = o.FirmwareVersion
	}
	if o.LastConnectedTime != nil {
		toSerialize["lastConnectedTime"] = o.LastConnectedTime
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ProductDisplayName != nil {
		toSerialize["productDisplayName"] = o.ProductDisplayName
	}
	return json.Marshal(toSerialize)
}

type NullableSoraCamDevice struct {
	value *SoraCamDevice
	isSet bool
}

func (v NullableSoraCamDevice) Get() *SoraCamDevice {
	return v.value
}

func (v *NullableSoraCamDevice) Set(val *SoraCamDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableSoraCamDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableSoraCamDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSoraCamDevice(val *SoraCamDevice) *NullableSoraCamDevice {
	return &NullableSoraCamDevice{value: val, isSet: true}
}

func (v NullableSoraCamDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSoraCamDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


