/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// SoraCamImageExportUsage struct for SoraCamImageExportUsage
type SoraCamImageExportUsage struct {
	// 今月中にエクスポート可能な静止画の残りの枚数
	RemainingFrames *int32 `json:"remainingFrames,omitempty"`
	// 今月消費した動画の視聴可能時間をすべて静止画でエクスポートしたと仮定した場合の静止画の枚数
	UsedFrames *int32 `json:"usedFrames,omitempty"`
}

// NewSoraCamImageExportUsage instantiates a new SoraCamImageExportUsage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSoraCamImageExportUsage() *SoraCamImageExportUsage {
	this := SoraCamImageExportUsage{}
	return &this
}

// NewSoraCamImageExportUsageWithDefaults instantiates a new SoraCamImageExportUsage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSoraCamImageExportUsageWithDefaults() *SoraCamImageExportUsage {
	this := SoraCamImageExportUsage{}
	return &this
}

// GetRemainingFrames returns the RemainingFrames field value if set, zero value otherwise.
func (o *SoraCamImageExportUsage) GetRemainingFrames() int32 {
	if o == nil || o.RemainingFrames == nil {
		var ret int32
		return ret
	}
	return *o.RemainingFrames
}

// GetRemainingFramesOk returns a tuple with the RemainingFrames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamImageExportUsage) GetRemainingFramesOk() (*int32, bool) {
	if o == nil || o.RemainingFrames == nil {
		return nil, false
	}
	return o.RemainingFrames, true
}

// HasRemainingFrames returns a boolean if a field has been set.
func (o *SoraCamImageExportUsage) HasRemainingFrames() bool {
	if o != nil && o.RemainingFrames != nil {
		return true
	}

	return false
}

// SetRemainingFrames gets a reference to the given int32 and assigns it to the RemainingFrames field.
func (o *SoraCamImageExportUsage) SetRemainingFrames(v int32) {
	o.RemainingFrames = &v
}

// GetUsedFrames returns the UsedFrames field value if set, zero value otherwise.
func (o *SoraCamImageExportUsage) GetUsedFrames() int32 {
	if o == nil || o.UsedFrames == nil {
		var ret int32
		return ret
	}
	return *o.UsedFrames
}

// GetUsedFramesOk returns a tuple with the UsedFrames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamImageExportUsage) GetUsedFramesOk() (*int32, bool) {
	if o == nil || o.UsedFrames == nil {
		return nil, false
	}
	return o.UsedFrames, true
}

// HasUsedFrames returns a boolean if a field has been set.
func (o *SoraCamImageExportUsage) HasUsedFrames() bool {
	if o != nil && o.UsedFrames != nil {
		return true
	}

	return false
}

// SetUsedFrames gets a reference to the given int32 and assigns it to the UsedFrames field.
func (o *SoraCamImageExportUsage) SetUsedFrames(v int32) {
	o.UsedFrames = &v
}

func (o SoraCamImageExportUsage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RemainingFrames != nil {
		toSerialize["remainingFrames"] = o.RemainingFrames
	}
	if o.UsedFrames != nil {
		toSerialize["usedFrames"] = o.UsedFrames
	}
	return json.Marshal(toSerialize)
}

type NullableSoraCamImageExportUsage struct {
	value *SoraCamImageExportUsage
	isSet bool
}

func (v NullableSoraCamImageExportUsage) Get() *SoraCamImageExportUsage {
	return v.value
}

func (v *NullableSoraCamImageExportUsage) Set(val *SoraCamImageExportUsage) {
	v.value = val
	v.isSet = true
}

func (v NullableSoraCamImageExportUsage) IsSet() bool {
	return v.isSet
}

func (v *NullableSoraCamImageExportUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSoraCamImageExportUsage(val *SoraCamImageExportUsage) *NullableSoraCamImageExportUsage {
	return &NullableSoraCamImageExportUsage{value: val, isSet: true}
}

func (v NullableSoraCamImageExportUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSoraCamImageExportUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


