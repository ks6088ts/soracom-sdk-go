/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// ResourceSummaryItemValue struct for ResourceSummaryItemValue
type ResourceSummaryItemValue struct {
	// リソースの要約アイテムの集計値の名前  - `resourceSummaryType` が `simsPerStatus` の場合:   - `readySims`: ステータスが「準備完了 (ready)」の IoT SIM の数   - `activeSims`: ステータスが「使用中 (active)」の IoT SIM の数   - `inactiveSims`: ステータスが「休止中 (inactive)」の IoT SIM の数   - `standbySims`: ステータスが「利用開始待ち (standby)」の IoT SIM の数   - `suspendedSims`: ステータスが「利用中断中 (suspended)」の IoT SIM の数 
	Name *string `json:"name,omitempty"`
	// リソースの要約アイテムの集計値の値
	Value *float32 `json:"value,omitempty"`
}

// NewResourceSummaryItemValue instantiates a new ResourceSummaryItemValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceSummaryItemValue() *ResourceSummaryItemValue {
	this := ResourceSummaryItemValue{}
	return &this
}

// NewResourceSummaryItemValueWithDefaults instantiates a new ResourceSummaryItemValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceSummaryItemValueWithDefaults() *ResourceSummaryItemValue {
	this := ResourceSummaryItemValue{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResourceSummaryItemValue) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceSummaryItemValue) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResourceSummaryItemValue) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResourceSummaryItemValue) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ResourceSummaryItemValue) GetValue() float32 {
	if o == nil || o.Value == nil {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceSummaryItemValue) GetValueOk() (*float32, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ResourceSummaryItemValue) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *ResourceSummaryItemValue) SetValue(v float32) {
	o.Value = &v
}

func (o ResourceSummaryItemValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableResourceSummaryItemValue struct {
	value *ResourceSummaryItemValue
	isSet bool
}

func (v NullableResourceSummaryItemValue) Get() *ResourceSummaryItemValue {
	return v.value
}

func (v *NullableResourceSummaryItemValue) Set(val *ResourceSummaryItemValue) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceSummaryItemValue) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceSummaryItemValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceSummaryItemValue(val *ResourceSummaryItemValue) *NullableResourceSummaryItemValue {
	return &NullableResourceSummaryItemValue{value: val, isSet: true}
}

func (v NullableResourceSummaryItemValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceSummaryItemValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


