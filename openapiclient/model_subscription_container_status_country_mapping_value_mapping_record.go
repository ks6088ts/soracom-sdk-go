/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// SubscriptionContainerStatusCountryMappingValueMappingRecord struct for SubscriptionContainerStatusCountryMappingValueMappingRecord
type SubscriptionContainerStatusCountryMappingValueMappingRecord struct {
	ContainerId *int64 `json:"containerId,omitempty"`
	Subscription *string `json:"subscription,omitempty"`
}

// NewSubscriptionContainerStatusCountryMappingValueMappingRecord instantiates a new SubscriptionContainerStatusCountryMappingValueMappingRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionContainerStatusCountryMappingValueMappingRecord() *SubscriptionContainerStatusCountryMappingValueMappingRecord {
	this := SubscriptionContainerStatusCountryMappingValueMappingRecord{}
	return &this
}

// NewSubscriptionContainerStatusCountryMappingValueMappingRecordWithDefaults instantiates a new SubscriptionContainerStatusCountryMappingValueMappingRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionContainerStatusCountryMappingValueMappingRecordWithDefaults() *SubscriptionContainerStatusCountryMappingValueMappingRecord {
	this := SubscriptionContainerStatusCountryMappingValueMappingRecord{}
	return &this
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise.
func (o *SubscriptionContainerStatusCountryMappingValueMappingRecord) GetContainerId() int64 {
	if o == nil || o.ContainerId == nil {
		var ret int64
		return ret
	}
	return *o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionContainerStatusCountryMappingValueMappingRecord) GetContainerIdOk() (*int64, bool) {
	if o == nil || o.ContainerId == nil {
		return nil, false
	}
	return o.ContainerId, true
}

// HasContainerId returns a boolean if a field has been set.
func (o *SubscriptionContainerStatusCountryMappingValueMappingRecord) HasContainerId() bool {
	if o != nil && o.ContainerId != nil {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given int64 and assigns it to the ContainerId field.
func (o *SubscriptionContainerStatusCountryMappingValueMappingRecord) SetContainerId(v int64) {
	o.ContainerId = &v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *SubscriptionContainerStatusCountryMappingValueMappingRecord) GetSubscription() string {
	if o == nil || o.Subscription == nil {
		var ret string
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionContainerStatusCountryMappingValueMappingRecord) GetSubscriptionOk() (*string, bool) {
	if o == nil || o.Subscription == nil {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *SubscriptionContainerStatusCountryMappingValueMappingRecord) HasSubscription() bool {
	if o != nil && o.Subscription != nil {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given string and assigns it to the Subscription field.
func (o *SubscriptionContainerStatusCountryMappingValueMappingRecord) SetSubscription(v string) {
	o.Subscription = &v
}

func (o SubscriptionContainerStatusCountryMappingValueMappingRecord) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContainerId != nil {
		toSerialize["containerId"] = o.ContainerId
	}
	if o.Subscription != nil {
		toSerialize["subscription"] = o.Subscription
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionContainerStatusCountryMappingValueMappingRecord struct {
	value *SubscriptionContainerStatusCountryMappingValueMappingRecord
	isSet bool
}

func (v NullableSubscriptionContainerStatusCountryMappingValueMappingRecord) Get() *SubscriptionContainerStatusCountryMappingValueMappingRecord {
	return v.value
}

func (v *NullableSubscriptionContainerStatusCountryMappingValueMappingRecord) Set(val *SubscriptionContainerStatusCountryMappingValueMappingRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionContainerStatusCountryMappingValueMappingRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionContainerStatusCountryMappingValueMappingRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionContainerStatusCountryMappingValueMappingRecord(val *SubscriptionContainerStatusCountryMappingValueMappingRecord) *NullableSubscriptionContainerStatusCountryMappingValueMappingRecord {
	return &NullableSubscriptionContainerStatusCountryMappingValueMappingRecord{value: val, isSet: true}
}

func (v NullableSubscriptionContainerStatusCountryMappingValueMappingRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionContainerStatusCountryMappingValueMappingRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


