/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// SoraCamPlayListEntry struct for SoraCamPlayListEntry
type SoraCamPlayListEntry struct {
	// 録画映像の開始時刻 (UNIX 時間 (ミリ秒))。リアルタイム映像の場合は省略されます。
	From *int64 `json:"from,omitempty"`
	// 録画映像の終了時刻 (UNIX 時間 (ミリ秒))。リアルタイム映像の場合は省略されます。
	To *int64 `json:"to,omitempty"`
	// ストリーミング映像 (リアルタイム映像 / 録画映像) の mpd ファイルを取得するための URL  - 以下の場合は URL が返されません。   - リアルタイム映像を取得しようとした場合に、ソラカメ対応カメラの電源が入っていない。   - リアルタイム映像を取得しようとした場合に、ソラカメ対応カメラでクラウド録画が開始されていない。   - 録画映像を取得しようとした場合に、指定した `from` から `to` の間に録画映像が存在しない。 
	Url *string `json:"url,omitempty"`
}

// NewSoraCamPlayListEntry instantiates a new SoraCamPlayListEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSoraCamPlayListEntry() *SoraCamPlayListEntry {
	this := SoraCamPlayListEntry{}
	return &this
}

// NewSoraCamPlayListEntryWithDefaults instantiates a new SoraCamPlayListEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSoraCamPlayListEntryWithDefaults() *SoraCamPlayListEntry {
	this := SoraCamPlayListEntry{}
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *SoraCamPlayListEntry) GetFrom() int64 {
	if o == nil || o.From == nil {
		var ret int64
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamPlayListEntry) GetFromOk() (*int64, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *SoraCamPlayListEntry) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given int64 and assigns it to the From field.
func (o *SoraCamPlayListEntry) SetFrom(v int64) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *SoraCamPlayListEntry) GetTo() int64 {
	if o == nil || o.To == nil {
		var ret int64
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamPlayListEntry) GetToOk() (*int64, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *SoraCamPlayListEntry) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given int64 and assigns it to the To field.
func (o *SoraCamPlayListEntry) SetTo(v int64) {
	o.To = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *SoraCamPlayListEntry) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoraCamPlayListEntry) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *SoraCamPlayListEntry) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *SoraCamPlayListEntry) SetUrl(v string) {
	o.Url = &v
}

func (o SoraCamPlayListEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableSoraCamPlayListEntry struct {
	value *SoraCamPlayListEntry
	isSet bool
}

func (v NullableSoraCamPlayListEntry) Get() *SoraCamPlayListEntry {
	return v.value
}

func (v *NullableSoraCamPlayListEntry) Set(val *SoraCamPlayListEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableSoraCamPlayListEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableSoraCamPlayListEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSoraCamPlayListEntry(val *SoraCamPlayListEntry) *NullableSoraCamPlayListEntry {
	return &NullableSoraCamPlayListEntry{value: val, isSet: true}
}

func (v NullableSoraCamPlayListEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSoraCamPlayListEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


