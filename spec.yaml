openapi: 3.0.0
info:
  description: SORACOM API v1
  title: SORACOM API
  version: VERSION_PLACEHOLDER
servers:
- description: Japan coverage production API
  url: https://api.soracom.io/v1
- description: Global coverage production API
  url: https://g.api.soracom.io/v1
paths:
  /audit_logs/api:
    get:
      description: SORACOM API 呼び出しの監査ログを新しいものから順に取得する
      operationId: getApiAuditLogs
      parameters:
      - description: 'ログ取得のフィルターに用いる API 種別 (例: `/v1/auth`)'
        in: query
        name: api_kind
        required: false
        schema:
          type: string
      - description: ログ取得対象の期間の始まり (unixtime milliseconds)
        in: query
        name: from_epoch_ms
        required: false
        schema:
          type: integer
      - description: ログ取得対象の期間の終わり (unixtime milliseconds)
        in: query
        name: to_epoch_ms
        required: false
        schema:
          type: integer
      - description: 取得するログエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のログエントリのタイムスタンプ (`requestedTimeEpochMs`)。このパラメータを指定することで次のログエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/APIAuditLogEntry'
                type: array
          description: SORACOM API 呼び出し監査ログのエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: SORACOM API 呼び出しの監査ログを取得する
      tags:
      - AuditLog
      x-soracom-cli:
      - audit-logs api get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /audit_logs/napter:
    get:
      description: SORACOM Napter の監査ログを新しいものから順に取得する
      operationId: getNapterAuditLogs
      parameters:
      - description: ログ取得対象のリソースのタイプ
        in: query
        name: resource_type
        required: false
        schema:
          enum:
          - Subscriber
          type: string
      - description: ログ取得対象のリソースの ID
        in: query
        name: resource_id
        required: false
        schema:
          type: string
      - description: ログ取得対象の期間の始まり (unixtime milliseconds)
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: ログ取得対象の期間の終わり (unixtime milliseconds)
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: 取得するログエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のログエントリのタイムスタンプ。このパラメータを指定することで次のログエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NapterAuditLogEntry'
                type: array
          description: Napter 監査ログのエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Napter の監査ログを取得する
      tags:
      - AuditLog
      x-soracom-cli:
      - audit-logs napter get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /auth:
    post:
      description: |
        API アクセスの認証を行います。以下の情報をリクエストに含めてください。

        - ルートユーザーで認証する場合: email と password
        - ルートユーザーまたは SAM ユーザーの認証キーで認証する場合: authKeyId と authKey
        - SAM ユーザー認証の場合: operatorId, userName, password

        認証が成功した場合は、API キーと API トークンが返されます。以降の認証が必要なリクエスト時にはこの API キーと API トークンをヘッダーに付与してリクエストを行ってください。
      operationId: auth
      requestBody:
        content:
          application/json:
            examples:
              SAM ユーザーで認証する場合:
                value:
                  operatorId: OPXXXXXXXXXX
                  password: p@$$w0rd
                  userName: SORACOMAPI
              To perform authentication by a SAM user:
                value:
                  operatorId: OPXXXXXXXXXX
                  password: p@$$w0rd
                  userName: SORACOMAPI
              To perform authentication by a root account:
                value:
                  email: soracomapi@example.com
                  password: p@$$w0rd
              To perform authentication by an AuthKeyId and AuthKey:
                value:
                  authKey: secret-abcde12345fghij67890klmno12345pqrst67890uvwxy12345abcde67890fghi...
                  authKeyId: keyId-abcde12345fghij67890klmno12345pq
              ルートユーザーで認証する場合:
                value:
                  email: soracomapi@example.com
                  password: p@$$w0rd
              認証キーで認証する場合:
                value:
                  authKey: secret-abcde12345fghij67890klmno12345pqrst67890uvwxy12345abcde67890fghi...
                  authKeyId: keyId-abcde12345fghij67890klmno12345pq
            schema:
              $ref: '#/components/schemas/AuthRequest'
        description: 認証リクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: 認証成功
        "401":
          description: 認証失敗
      summary: API アクセスの認証を行い、API キーと API トークンを発行します。
      tags:
      - Auth
      x-soracom-cli:
      - auth
  /auth/logout:
    post:
      description: この API を呼び出すときに指定された API キーと API トークンを無効化します。無効化したあとは、有効期間に関わらず
        API キーと API トークンを用いて SORACOM API を呼び出すことはできません。この API は、権限設定に関わらず呼び出すことができます。
      operationId: logout
      responses:
        "204":
          description: API キーと API トークンの無効化に成功しました。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM API にアクセスするための API キーと API トークンを無効化します。
      tags:
      - Auth
      x-soracom-cli:
      - logout
  /auth/password_reset_token/issue:
    post:
      description: パスワードをリセットするためのワンタイムトークンを生成して、オペレーターのメールアドレスに送付します。メールに記載されているトークンを取得し、/v1/auth/password_reset_token/verify
        API を呼び出して新しいパスワードを設定します。
      operationId: issuePasswordResetToken
      requestBody:
        content:
          application/json:
            example:
              email: soracomapi@example.com
            schema:
              $ref: '#/components/schemas/IssuePasswordResetTokenRequest'
        description: email address
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: メールアドレスが正しくありません。
      summary: パスワードリセット用のトークンを発行します。
      tags:
      - Auth
      x-soracom-cli:
      - auth issue-password-reset-token
  /auth/password_reset_token/verify:
    post:
      description: パスワードリセット用のトークンを検証し、検証に成功した場合オペレーターのパスワードを更新します。
      operationId: verifyPasswordResetToken
      requestBody:
        content:
          application/json:
            example:
              password: p@$$w0rd
              token: abcde12345fghij67890klmno12345pqrst67890uvwxy12345abcde67890fghi...
            schema:
              $ref: '#/components/schemas/VerifyPasswordResetTokenRequest'
        description: token, password
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なトークンが指定されました。
        "404":
          description: トークンの有効期限が切れています。
      summary: パスワードリセット用のトークンを検証し、パスワードを更新します。
      tags:
      - Auth
      x-soracom-cli:
      - auth verify-password-reset-token
  /bills:
    get:
      description: |
        過去の確定した利用料金を取得します。

        **Warning**: 取得できる利用料金は、過去 18 か月までです。それ以前の利用料金が必要な場合は、[SORACOM サポート](/ja-jp/docs/support/) に問い合わせてください。
      operationId: getBillingHistory
      responses:
        "200":
          content:
            application/json:
              example:
                billList:
                - amount: 28734
                  paymentStatus: paid
                  paymentTransactionId: 12345678901234567_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  state: closed
                  yearMonth: "202208"
                - amount: 27075
                  paymentStatus: paid
                  paymentTransactionId: 12345678901234567_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  state: closed
                  yearMonth: "202207"
              schema:
                $ref: '#/components/schemas/GetBillingHistoryResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 過去の確定した利用料金を取得する
      tags:
      - Billing
      x-soracom-cli:
      - bills list
  /bills/{yyyyMM}:
    get:
      description: |
        指定した月の確定した利用料金を取得します。

        **Warning**: 取得できる利用料金は、過去 18 か月までです。それ以前の利用料金が必要な場合は、[SORACOM サポート](/ja-jp/docs/support/) に問い合わせてください。
      operationId: getBilling
      parameters:
      - description: 対象年月
        in: path
        name: yyyyMM
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                amount: 28734
                currency: "JPY"
                paymentStatus: paid
                paymentTransactionId: 12345678901234567_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                state: closed
                yearMonth: "202208"
              schema:
                $ref: '#/components/schemas/MonthlyBill'
          description: OK.
        "404":
          description: |
            - 指定した月の利用料金が確定していません。
            - 指定した月の利用料金がありません。
      security:
      - api_key: []
        api_token: []
      summary: 指定した月の確定した利用料金を取得する
      tags:
      - Billing
      x-soracom-cli:
      - bills get
  /bills/{yyyyMM}/daily:
    get:
      description: |
        指定した月の、日ごとの利用料金を取得します。また、月額で課金される利用料金は取得できません。

        **Warning**: 取得できる利用料金は、過去 18 か月までです。それ以前の利用料金が必要な場合は、[SORACOM サポート](/ja-jp/docs/support/) に問い合わせてください。
      operationId: getBillingPerDay
      parameters:
      - description: 対象年月
        in: path
        name: yyyyMM
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                billList:
                - amount: 285
                  currency: "JPY"
                  date: "20220902"
                - amount: 580
                  currency: "JPY"
                  date: "20220901"
              schema:
                $ref: '#/components/schemas/DailyBillResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 日ごとの利用料金を取得する
      tags:
      - Billing
      x-soracom-cli:
      - bills get-daily
  /bills/{yyyyMM}/export:
    post:
      description: |
        指定月の課金詳細情報 CSV をダウンロードするための URL を発行します。課金詳細情報 CSV については、[課金詳細情報 CSV リファレンス](/ja-jp/guides/accounting/check-usage/billing-csv/) を参照してください。

        **Warning**: ダウンロードできる課金詳細情報 CSV は、過去 18 か月までです。それ以前の利用料金が必要な場合は、[SORACOM サポート](/ja-jp/docs/support/) に問い合わせてください。
      operationId: exportBilling
      parameters:
      - description: 対象年月
        in: path
        name: yyyyMM
        required: true
        schema:
          type: string
      - description: |
          課金詳細情報 CSV をダウンロードするための URL を取得する方法を指定します。

          - `async`: SORACOM プラットフォームで URL が発行されるのを待たずに、`exportedFieldId` を取得します。この `exportedFieldId` を [`Files:getExportedFile API`](#/Files/getExportedFile) で指定すると、URL を取得できます。課金詳細情報 CSV のファイルサイズが大きい場合は、`async` を利用してください。
          - `sync` (デフォルト): SORACOM プラットフォームで URL が発行されるのを待ちます。ただし、課金詳細情報 CSV のファイルサイズが大きい場合など、タイムアウトして URL を取得できないことがあります。タイムアウトする場合は、`async` を指定してください。
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                (1) export_mode=async:
                  value:
                    exportedFileId: fe_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    exportedFilePath: //files/exported/fe_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                (2) export_mode=sync:
                  value:
                    url: https://soracom-xxxxxxxx-....
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 指定月の課金詳細情報 CSV をダウンロードするための URL を発行する
      tags:
      - Billing
      x-soracom-cli:
      - bills export
  /bills/latest:
    get:
      description: 無料利用枠などの割引適用後の、直近の利用額を返します。この API で取得した金額は請求確定前の金額になります。
      operationId: getLatestBilling
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLatestBill'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Get latest bill
      tags:
      - Billing
      x-soracom-cli:
      - bills get-latest
  /bills/latest/export:
    post:
      description: 直近月の利用額明細を返します。この明細には、日ごと,Subscriber ごと,課金項目ごとの利用額が含まれます。この API
        で取得した金額は請求確定前の金額になります。
      operationId: exportLatestBilling
      parameters:
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Export latest billing CSV file to S3
      tags:
      - Billing
      x-soracom-cli:
      - bills export-latest
  /cell_locations:
    get:
      description: セル ID などの基地局情報から、その基地局の位置情報（緯度経度）を取得します。 3G の場合は MCC, MNC, LAC,
        CID を指定してください。CID がなくてもおおよその位置を取得することができますが、精度は高くありません。 LTE (4G) の場合は MCC,
        MNC, TAC, ECID を指定してください。 基地局情報から位置情報への変換には外部のオープンなデータベースを利用していますので、情報が存在していなかったり誤っている場合もあります。
      operationId: getCellLocation
      parameters:
      - description: MCC (Mobile Country Code) - 国コード
        in: query
        name: mcc
        required: true
        schema:
          type: string
      - description: MNC (Mobile Network Code) - ネットワークコード
        in: query
        name: mnc
        required: true
        schema:
          type: string
      - description: LAC (Location Area Code) - エリアコード（3G 用）
        in: query
        name: lac
        required: false
        schema:
          type: string
      - description: CID (Cell ID) - セル ID（3G 用）
        in: query
        name: cid
        required: false
        schema:
          type: string
      - description: TAC (Tracking Area Code) - エリアコード（LTE 用）
        in: query
        name: tac
        required: false
        schema:
          type: string
      - description: ECID (Enhanced Cell ID) - セル ID（LTE 用） - `ecid` もしくは `eci` のいずれかを指定してください。（どちらに値を指定しても結果は同一です）
        in: query
        name: ecid
        required: false
        schema:
          type: string
      - description: ECID (Enhanced Cell ID) - セル ID（LTE 用） - `ecid` もしくは `eci` のいずれかを指定してください。（どちらに値を指定しても結果は同一です）
        in: query
        name: eci
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellLocation'
          description: 基地局の位置情報
        "404":
          description: 指定された基地局の位置情報が見つからない
      security:
      - api_key: []
        api_token: []
      summary: 基地局の位置情報を取得します。
      tags:
      - CellLocation
      x-soracom-cli:
      - cell-locations get
    post:
      description: 基地局情報のリストから、それらの基地局の位置情報（緯度経度）のリストを取得します。 3G の場合は MCC, MNC, LAC,
        CID を指定してください。CID がなくてもおおよその位置を取得することができますが、精度は高くありません。 LTE (4G) の場合は MCC,
        MNC, TAC, ECID を指定してください。 基地局情報から位置情報への変換には外部のオープンなデータベースを利用していますので、情報が存在していなかったり誤っている場合もあります。
      operationId: batchGetCellLocations
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CellIdentifier'
              type: array
        description: 基地局情報のリスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CellLocation'
                type: array
          description: 指定された基地局に対応する位置情報のリスト
      security:
      - api_key: []
        api_token: []
      summary: 複数の基地局の位置情報を一度に取得します。
      tags:
      - CellLocation
      x-soracom-cli:
      - cell-locations batch-get
  /coupons:
    get:
      description: 現在登録されているクーポン一覧を返します。
      operationId: listCoupons
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListCouponResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List coupons.
      tags:
      - Payment
      x-soracom-cli:
      - coupons list
    post:
      description: 新規でクーポンの見積もりの作成を行います。orderId を/confirm に PUT すると発注が完了します。
      operationId: createCouponQuotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEstimatedCouponRequest'
        description: クーポン詳細
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EstimatedCouponModel'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create coupon quotation.
      tags:
      - Order
      x-soracom-cli:
      - coupons create
  /coupons/{coupon_code}/register:
    post:
      description: クーポンを登録します。
      operationId: registerCoupon
      parameters:
      - description: クーポンコード
        in: path
        name: coupon_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CouponResponse'
          description: OK.
        "400":
          description: クーポンコードが無効であるか、クーポンコードの登録上限に達しています。
      security:
      - api_key: []
        api_token: []
      summary: Register Coupon.
      tags:
      - Payment
      x-soracom-cli:
      - coupons register
  /coupons/{order_id}/confirm:
    put:
      description: 与信を実施し、問題ない場合に発注を確定します。
      operationId: confirmCouponOrder
      parameters:
      - description: 発注 ID
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CouponResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Confirm coupon order.
      tags:
      - Order
      x-soracom-cli:
      - coupons confirm
  /credentials:
    get:
      description: 認証情報の一覧を返す。
      operationId: listCredentials
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CredentialsModel'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 認証情報の表示
      tags:
      - Credential
      x-soracom-cli:
      - credentials list
  /credentials/{credentials_id}:
    delete:
      description: 認証情報を削除する。
      operationId: deleteCredential
      parameters:
      - description: Credentials ID
        in: path
        name: credentials_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "404":
          description: Not Found
      security:
      - api_key: []
        api_token: []
      summary: 認証情報の削除
      tags:
      - Credential
      x-soracom-cli:
      - credentials delete
    post:
      description: 認証情報を新規作成する。
      operationId: createCredential
      parameters:
      - description: credentials_id
        in: path
        name: credentials_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              API Token credentials:
                $ref: '#/components/examples/APITokenCredentials'
              AWS IAM Role credentials:
                $ref: '#/components/examples/IAMRoleCredentials'
              AWS credentials:
                $ref: '#/components/examples/AWSCredentials'
              Asteria Platio credentials:
                $ref: '#/components/examples/InfoteriaPlatioCredentials'
              Azure IoT credentials:
                $ref: '#/components/examples/AzureIoTCredentials'
              Azure credentials:
                $ref: '#/components/examples/AzureCredentials'
              Esri Japan ArcGIS Online credentials:
                $ref: '#/components/examples/EsrijCredentials'
              Google Cloud IoT Core credentials:
                $ref: '#/components/examples/GoogleIoTCredentials'
              Google Service Account (JSON):
                $ref: '#/components/examples/GoogleServiceAccountJson'
              Kii Thing-IF credentials:
                $ref: '#/components/examples/KiiThingifCredentials'
              LANDLOG credentials:
                $ref: '#/components/examples/LandlogCredentials'
              OPTiM Cloud IoT OS credentials:
                $ref: '#/components/examples/OptimCloudCredentials'
              Pre-Shared Key:
                $ref: '#/components/examples/PreSharedKey'
              PubNub credentials:
                $ref: '#/components/examples/PubnubCredentials'
              SensorCorpus credentials:
                $ref: '#/components/examples/SensorcorpusCredentials'
              Username password credentials:
                $ref: '#/components/examples/UsernamePasswordCredentials'
              Watson IoT credentials:
                $ref: '#/components/examples/WatsonIoTCredentials'
              WingArc1st MotionBoard credentials:
                $ref: '#/components/examples/MotionboardCredentials'
              X.509 certificate:
                $ref: '#/components/examples/X509Certificate'
              YE DIGITAL MMCloud credentials:
                $ref: '#/components/examples/MmcloudCredentials'
              mockmock DataRecorder credentials:
                $ref: '#/components/examples/MockmockDatarecorderCredentials'
            schema:
              $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'
        description: credentials
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: 認証情報の作成
      tags:
      - Credential
      x-soracom-cli:
      - credentials create
    put:
      description: 認証情報を更新する。
      operationId: updateCredential
      parameters:
      - description: credentials_id
        in: path
        name: credentials_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'
        description: credentials
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: OK.
        "400":
          description: リクエストに誤りがあるか、指定されたトークンがすでに無効になっている（後者の場合、/auth API で再度認証を行う必要がある）
      security:
      - api_key: []
        api_token: []
      summary: 認証情報の更新
      tags:
      - Credential
      x-soracom-cli:
      - credentials update
  /data/{resource_type}/{resource_id}:
    get:
      description: 指定されたデータ送信元リソースから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が 1 ページに収まらない場合は、次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: getDataEntries
      parameters:
      - description: データ送信元リソースの Type
        in: path
        name: resource_type
        required: true
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - SubscriberIdentityModule
          - SigfoxDevice
          - Device
          type: string
      - description: データ送信元リソースの ID
        in: path
        name: resource_id
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: Get data sent from a resource
      tags:
      - DataEntry
      x-soracom-cli:
      - data get-entries
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /data/{resource_type}/{resource_id}/{time}:
    delete:
      description: リソース ID とタイムスタンプで指定されたデータエントリを削除する。
      operationId: deleteDataEntry
      parameters:
      - description: データ送信元リソースの Type
        in: path
        name: resource_type
        required: true
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - SubscriberIdentityModule
          - SigfoxDevice
          - Device
          type: string
      - description: データ送信元リソースの ID
        in: path
        name: resource_id
        required: true
        schema:
          type: string
      - description: 削除対象のデータエントリのタイムスタンプ (UNIX 時間 (ミリ秒))
        in: path
        name: time
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: データエントリは正常に削除されました
      security:
      - api_key: []
        api_token: []
      summary: Deletes a data entry
      tags:
      - DataEntry
      x-soracom-cli:
      - data delete-entry
    get:
      description: リソース ID とタイムスタンプで指定されたデータエントリを取得する。
      operationId: getDataEntry
      parameters:
      - description: データ送信元リソースの Type
        in: path
        name: resource_type
        required: true
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - SubscriberIdentityModule
          - SigfoxDevice
          - Device
          type: string
      - description: データ送信元リソースの ID
        in: path
        name: resource_id
        required: true
        schema:
          type: string
      - description: 取得対象のデータエントリのタイムスタンプ (UNIX 時間 (ミリ秒))
        in: path
        name: time
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: The data entry specified with resource ID and timestamp
        "204":
          description: リソース ID とタイムスタンプで特定されるデータエントリ
        "404":
          description: 対象のデータエントリが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Gets a data entry
      tags:
      - DataEntry
      x-soracom-cli:
      - data get-entry
  /data/resources:
    get:
      description: 当該オペレータに属するデータ送信元リソースのリストを返す。データ送信元リソースの総数が 1 ページに収まらない場合は、次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: listDataSourceResources
      parameters:
      - description: 対象のリソース Type
        in: query
        name: resource_type
        required: false
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - SubscriberIdentityModule
          - SigfoxDevice
          - Device
          type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のデータ送信元リソースの ID。このパラメータを指定することで次のデータ送信元リソース以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataSourceResourceMetadata'
                type: array
          description: データ送信元リソースのリスト
      security:
      - api_key: []
        api_token: []
      summary: Get the list of data source resources
      tags:
      - DataEntry
      x-soracom-cli:
      - data list-source-resources
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /device_object_models:
    get:
      description: デバイスオブジェクトモデルのリストを返します。
      operationId: listDeviceObjectModels
      parameters:
      - description: 現ページで取得した最後のデバイスオブジェクトモデルの ID。このパラメータを指定することで次のデバイスオブジェクトモデル以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 取得する結果の上限数
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceObjectModel'
                type: array
          description: デバイスオブジェクトモデル定義のリスト
      security:
      - api_key: []
        api_token: []
      summary: デバイスオブジェクトモデルのリストを返します。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices list-object-models
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 新しいデバイスオブジェクトモデルを作成します。
      operationId: createDeviceObjectModel
      requestBody:
        $ref: '#/components/requestBodies/DeviceObjectModel'
        description: XML か JSON により表現されたデバイスオブジェクトモデルの表記。
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: デバイスオブジェクトモデルが作成されました
        "400":
          description: デバイスオブジェクトモデル定義の解析に失敗しました
      security:
      - api_key: []
        api_token: []
      summary: 新しいデバイスオブジェクトモデルを作成します。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices create-object-model
  /device_object_models/{model_id}:
    delete:
      description: 対象のデバイスオブジェクトモデルを削除します。
      operationId: deleteDeviceObjectModel
      parameters:
      - description: 対象のデバイスオブジェクトモデルの ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 削除に成功しました
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 対象のデバイスオブジェクトモデルを削除します。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices delete-object-model
    get:
      description: デバイスオブジェクトモデルを取得します。
      operationId: getDeviceObjectModel
      parameters:
      - description: 対象のデバイスオブジェクトモデルの ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: 取得したデバイスオブジェクトモデル
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
        api_token: []
      summary: デバイスオブジェクトモデルを取得します。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices get-object-model
    post:
      description: デバイスオブジェクトモデルを更新します。
      operationId: updateDeviceObjectModel
      parameters:
      - description: 対象のデバイスオブジェクトモデルの ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceObjectModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/DeviceObjectModel'
        description: XML か JSON により表現されたデバイスオブジェクトモデルの表記。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: デバイスオブジェクトモデルが作成されました
        "400":
          description: デバイスオブジェクトモデル定義の解析に失敗しました
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
        api_token: []
      summary: デバイスオブジェクトモデルを更新します。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices update-object-model
  /device_object_models/{model_id}/set_scope:
    post:
      description: 対象のデバイスオブジェクトモデルが適用される Scope をセットします。
      operationId: setDeviceObjectModelScope
      parameters:
      - description: 対象のデバイスオブジェクトモデルの ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDeviceObjectModelScopeRequest'
        description: 対象のデバイスオブジェクトモデルにセットする Scope の値
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: デバイスオブジェクトモデルの Scope がセットされました
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 対象のデバイスオブジェクトモデルが適用される Scope をセットします。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices set-object-model-scope
  /devices:
    get:
      description: デバイスのリストを取得します。
      operationId: listDevices
      parameters:
      - description: タグの名前
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: タグの値
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件 (exact | prefix)
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          type: string
      - description: 現ページで取得した最後のデバイスの ID。このパラメータを指定することで次のデバイスから始まるリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 取得するデバイス数の上限
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: デバイスのリスト
      security:
      - api_key: []
        api_token: []
      summary: デバイスのリストを取得します。
      tags:
      - Device
      x-soracom-cli:
      - devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 新しいデバイスを作成します。
      operationId: createDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        description: 作成するデバイス
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: 作成されたデバイス
      security:
      - api_key: []
        api_token: []
      summary: 新しいデバイスを作成します。
      tags:
      - Device
      x-soracom-cli:
      - devices create
  /devices/{device_id}:
    delete:
      description: デバイスを削除します。
      operationId: deleteDevice
      parameters:
      - description: 削除するデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: デバイスが削除された
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
        api_token: []
      summary: デバイスを削除します。
      tags:
      - Device
      x-soracom-cli:
      - devices delete
    get:
      description: 指定されたデバイス ID のデバイスを取得します。
      operationId: getDevice
      parameters:
      - description: デバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: モデル情報を取得するかどうか
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: 指定されたデバイス ID のデバイス
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
        api_token: []
      summary: 指定されたデバイス ID のデバイスを取得します。
      tags:
      - Device
      x-soracom-cli:
      - devices get
  /devices/{device_id}/{object}/{instance}:
    get:
      description: デバイスの Instance 以下のすべての Resource を Read します。
      operationId: readDeviceResources
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: モデル情報を含めるかどうか
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectInstance'
          description: 指定された Object Instance 下の Resource のリスト
        "400":
          description: 指定した Resource が Read をサポートしていません （デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: 指定した Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: デバイスの Instance 以下のすべての Resource を Read します。
      tags:
      - Device
      x-soracom-cli:
      - devices get-instance
  /devices/{device_id}/{object}/{instance}/{resource}:
    get:
      description: 指定されたデバイスの Resource を Read します。
      operationId: readDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      - description: モデル情報を含めるかどうか
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInstance'
          description: Resource
        "400":
          description: 指定した Resource が Read をサポートしていません （デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: 指定した Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 指定されたデバイスの Resource を Read します。
      tags:
      - Device
      x-soracom-cli:
      - devices get-resource
    put:
      description: デバイスの Resource に値を Write します。
      operationId: writeDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  oneOf:
                  - type: string
                  - type: number
                  - type: boolean
              type: object
        description: リソースにセットする値。この値は LwM2M の基本的なデータ型を受け入れます。もしリソースモデルが `multiple`
          モードの場合はプロパティ名を `value` ではなく `values` にする必要があります。
        required: true
      responses:
        "202":
          description: Resource の更新を受け付けました
        "400":
          description: 指定した Resource が Write をサポートしていません （デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: 指定した Resource が見つかりません
        "500":
          description: デバイスから更新エラーの応答がありました。(デバイスから LwM2M 応答メッセージがエラーの場合が含まれます。デバイスからのエラーメッセージはレスポンスの
            `message` に含まれます。)
      security:
      - api_key: []
        api_token: []
      summary: デバイスの Resource に値を Write します。
      tags:
      - Device
      x-soracom-cli:
      - devices put-resource
  /devices/{device_id}/{object}/{instance}/{resource}/execute:
    post:
      description: デバイスの Resource を Execute します。
      operationId: executeDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  type: string
              type: object
        description: Resource を実行する際に渡す引数文字列
      responses:
        "202":
          description: Resource の実行を受け付けました
        "400":
          description: Resource は Execute 操作をサポートしていません（デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: デバイスの Resource を Execute します。
      tags:
      - Device
      x-soracom-cli:
      - devices execute-resource
  /devices/{device_id}/{object}/{instance}/{resource}/observe:
    post:
      description: 指定されたデバイスの Resource の Observe を開始します。Observe を開始すると、デバイス側で値に変化があったらサーバー側に通知するようになります。
      operationId: observeDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      - description: モデル情報を含めるかどうか
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          description: Resource の Observe を開始しました
        "202":
          description: Observation started.
        "400":
          description: Resource は Read 操作をサポートしていません（デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 指定されたデバイスの Resource の Observe を開始します。
      tags:
      - Device
      x-soracom-cli:
      - devices observe-resource
  /devices/{device_id}/{object}/{instance}/{resource}/unobserve:
    post:
      description: デバイスの Resource の Observe を停止します。
      operationId: unobserveDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Observe を停止しました
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: デバイスの Resource の Observe を停止します。
      tags:
      - Device
      x-soracom-cli:
      - devices unobserve-resource
  /devices/{device_id}/{object}/{instance}/observe:
    post:
      description: 指定されたデバイスの Object Instance 下の Resource 全体の Observe を開始します。
      operationId: observeDeviceResources
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: モデルの情報を追加するか否か
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "202":
          description: Observe を開始しました
        "400":
          description: Resource は Read 操作をサポートしていません（デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 指定されたデバイスの Object Instance 下の Resource 全体の Observe を開始します。
      tags:
      - Device
      x-soracom-cli:
      - devices observe-resources
  /devices/{device_id}/{object}/{instance}/unobserve:
    post:
      description: 指定されたデバイスの Object Instance への Observe を停止します。
      operationId: unobserveDeviceResources
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Observe を停止しました
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 指定されたデバイスの Object Instance への Observe を停止します。
      tags:
      - Device
      x-soracom-cli:
      - devices unobserve-resources
  /devices/{device_id}/data:
    get:
      description: 指定されたデバイスから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が 1 ページに収まらない場合は、次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: getDataFromDevice
      parameters:
      - description: データ取得対象のデバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: デバイスから送信されたデータを取得します。
      tags:
      - Device
      x-soracom-cli:
      - devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /devices/{device_id}/set_group:
    post:
      description: デバイスをグループに参加させます。
      operationId: setDeviceGroup
      parameters:
      - description: 更新するデバイスのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                groupId:
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: デバイスが更新された
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
        api_token: []
      summary: デバイスをグループに参加させます。
      tags:
      - Device
      x-soracom-cli:
      - devices set-group
  /devices/{device_id}/tags:
    put:
      description: デバイスのタグを更新します。
      operationId: putDeviceTags
      parameters:
      - description: 更新するデバイスのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: デバイスが更新された
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
        api_token: []
      summary: デバイスのタグを更新します。
      tags:
      - Device
      x-soracom-cli:
      - devices put-device-tags
  /devices/{device_id}/tags/{tag_name}:
    delete:
      description: デバイスのタグを削除します。
      operationId: deleteDeviceTag
      parameters:
      - description: 更新するデバイスのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 削除するタグの名前
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: タグが削除された
        "404":
          description: 指定されたデバイス ID を持つデバイス、もしくは指定されたタグが見つからなかった
      security:
      - api_key: []
        api_token: []
      summary: デバイスのタグを削除します。
      tags:
      - Device
      x-soracom-cli:
      - devices delete-device-tag
  /devices/{device_id}/unset_group:
    post:
      description: デバイスをグループから外します。
      operationId: unsetDeviceGroup
      parameters:
      - description: 更新するデバイスのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: デバイスが更新された
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
        api_token: []
      summary: デバイスをグループから外します。
      tags:
      - Device
      x-soracom-cli:
      - devices unset-group
  /diagnostics:
    post:
      description: 診断リクエストを送信します。
      operationId: sendDiagnosticRequest
      requestBody:
        content:
          application/json:
            examples:
              Diagnosing SORACOM Air for Cellular:
                value:
                  from: 1655251200000
                  resouceType: sim
                  resourceId: XXXXXXXXXXXXXXXXXXX
                  service: Air
                  to: 1655337600000
            schema:
              $ref: '#/components/schemas/DiagnosticRequest'
        description: request
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/DiagnosticResponse'
                type: array
          description: 診断リクエストが受け付けられました。
        "400":
          description: 診断対象期間の指定 (from/to) に誤りがあります。
        "404":
          description: 指定されたリソースが見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: 診断リクエストを送信します。
      tags:
      - Diagnostic
      x-soracom-cli:
      - diagnostics send-request
  /diagnostics/{diagnostic_id}:
    get:
      description: 診断結果を取得します。
      operationId: getDiagnostic
      parameters:
      - description: 診断リクエストの識別子
        in: path
        name: diagnostic_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/DiagnosticResponse'
          description: OK.
        "404":
          description: 指定された diagnostic_id が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: 診断結果を取得します。
      tags:
      - Diagnostic
      x-soracom-cli:
      - diagnostics get
  /event_handlers:
    get:
      description: イベントハンドラの一覧を返す。
      operationId: listEventHandlers
      parameters:
      - description: target
        in: query
        name: target
        required: false
        schema:
          enum:
          - operator
          - imsi
          - sim
          - group
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/EventHandlerModel'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List Event Handlers
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers list
    post:
      description: イベントハンドラを新規作成する。リクエストパラメータの指定方法については、イベントハンドラーの [SORACOM CLI /
        SORACOM API で作成する](/ja-jp/docs/event-handler/configure-with-api/) を参照してください。
      operationId: createEventHandler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventHandlerRequest'
        description: イベントハンドラの設定内容
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EventHandlerModel'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers create
  /event_handlers/{handler_id}:
    delete:
      description: 指定されたイベントハンドラを削除する。
      operationId: deleteEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK.
        "404":
          description: EventHandler not found.
      security:
      - api_key: []
        api_token: []
      summary: Delete Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers delete
    get:
      description: 指定されたイベントハンドラの情報を返す。
      operationId: getEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EventHandlerModel'
          description: OK.
        "404":
          description: Handler not found.
      security:
      - api_key: []
        api_token: []
      summary: Get Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers get
    put:
      description: 指定されたイベントハンドラを更新する。リクエストパラメータの指定方法については、イベントハンドラーの [SORACOM CLI
        / SORACOM API で作成する](/ja-jp/docs/event-handler/configure-with-api/) を参照してください。
      operationId: updateEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventHandlerRequest'
        description: イベントハンドラの設定内容
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid handlerId.
      security:
      - api_key: []
        api_token: []
      summary: Update Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers update
  /event_handlers/{handler_id}/subscribers/{imsi}/ignore:
    delete:
      description: 指定の IMSI に対して、指定のイベントハンドラを無視する設定を削除
      operationId: deleteIgnoreEventHandler
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: handler_id
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK
        "404":
          description: not found
      security:
      - api_key: []
        api_token: []
      summary: Delete Ignore Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers unignore
    post:
      description: 指定の IMSI に対して、指定のイベントハンドラを無視する設定を追加
      operationId: setIgnoreEventHandler
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: handler_id
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Ignore Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers ignore
  /event_handlers/subscribers/{imsi}:
    get:
      description: 対象 IMSI にひもづくイベントハンドラのリストを返す。
      operationId: listEventHandlersBySubscriber
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/EventHandlerModel'
                type: array
          description: OK.
        "404":
          description: not found
      security:
      - api_key: []
        api_token: []
      summary: List Event Handlers related to Subscriber
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers list-for-subscriber
  /files:
    get:
      description: scope と prefix にマッチしたファイルエントリの一覧をファイルエントリを filePath の UTF-8 バイトでソートされた順
        (昇順) で返却します。 prefix がマッチするファイルエントリが無ければ空のリストが返却されます。
      operationId: findFiles
      parameters:
      - description: リクエストのスコープ
        in: query
        name: scope
        required: true
        schema:
          enum:
          - private
          - public
          type: string
      - description: ファイルパスにマッチさせるプレフィックス
        in: query
        name: prefix
        required: true
        schema:
          type: string
      - description: 返却するファイルエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      - description: 現ページで取得した最後のファイルエントリの filePath 。このパラメータを指定することで次のファイルエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/FileEntry'
                type: array
          description: prefix にマッチしたファイルエントリのリスト。prefix にマッチするファイルエントリが無ければ空のリスト。
        "404":
          description: 指定された scope が存在しない
      security:
      - api_key: []
        api_token: []
      summary: scope と prefix にマッチするファイルを探します。
      tags:
      - FileEntry
      x-soracom-cli:
      - files find
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /files/{scope}/{path}:
    delete:
      description: scope と path で指定されたファイルを削除します。`private` スコープのみが許可されます。
      operationId: deleteFile
      parameters:
      - description: リクエストのスコープ
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ファイルの削除に成功
        "404":
          description: 指定されたファイルが見つからない
      security:
      - api_key: []
        api_token: []
      summary: scope と path で指定されたファイルを削除します。
      tags:
      - FileEntry
      x-soracom-cli:
      - files delete
    get:
      description: scope と path で指定されたファイルをダウンロードするための URL へリダイレクトします。
      operationId: getFile
      parameters:
      - description: リクエストのスコープ
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          - public
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "302":
          description: ファイルをダウンロードするためのリンクへのリダイレクション。指定された path がディレクトリの場合は listFiles
            API へのリダイレクション。
        "404":
          description: 指定されたファイルが見つからない
      security:
      - api_key: []
        api_token: []
      summary: scope と path で指定されたファイルをダウンロードします。
      tags:
      - FileEntry
      x-soracom-cli:
      - files get
    head:
      description: scope と path で指定されたファイルのメタデータを取得します。
      operationId: getFileMetadata
      parameters:
      - description: リクエストのスコープ
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          - public
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileEntry'
          description: 指定されたファイルのメタデータ
        "404":
          description: 指定されたファイルが見つからない
      security:
      - api_key: []
        api_token: []
      summary: scope と path で指定されたファイルのメタデータを取得します。
      tags:
      - FileEntry
      x-soracom-cli:
      - files get-metadata
    put:
      description: 指定された scope 内の path にファイルをアップロードします。`private` スコープのみが許可されます。
      operationId: putFile
      parameters:
      - description: リクエストのスコープ
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          type: string
      - description: Content type of the file to upload
        in: header
        name: content-type
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              format: binary
              type: string
        description: Content of the file to upload
        required: true
      responses:
        "200":
          description: ファイルの更新に成功
        "201":
          description: ファイルの作成に成功
      security:
      - api_key: []
        api_token: []
      summary: 指定された scope 内の path にファイルをアップロードします。
      tags:
      - FileEntry
      x-soracom-cli:
      - files put
  /files/{scope}/{path}/:
    delete:
      description: scope と path で指定されたディレクトリを削除します。`private` スコープのみが許可されます。
      operationId: deleteDirectory
      parameters:
      - description: リクエストのスコープ
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ディレクトリの削除に成功
        "400":
          description: 指定されたディレクトリが空ではない
        "404":
          description: 指定されたディレクトリが見つからない
      security:
      - api_key: []
        api_token: []
      summary: scope と path で指定されたディレクトリを削除します。
      tags:
      - FileEntry
      x-soracom-cli:
      - files delete-directory
    get:
      description: scope と path で指定された配下のファイルエントリのリストを返却します。この操作はディレクトリにのみ有効で、与えられた
        path に対応するファイルエントリがディレクトリでない場合エラーが返されます。エントリの総数が 1 ページに収まらない場合、次のページへアクセスするための
        URL が Link ヘッダに含まれます。
      operationId: listFiles
      parameters:
      - description: リクエストのスコープ
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          - public
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          default: /
          type: string
      - description: 返却するファイルエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      - description: 現ページで取得した最後のファイルエントリの filename 。このパラメータを指定することで次のファイルエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileEntry'
                type: array
          description: ファイルエントリのリスト
        "404":
          description: ファイルエントリが見つからない
      security:
      - api_key: []
        api_token: []
      summary: scope と path で指定されたファイルやディレクトリの一覧を取得します。
      tags:
      - FileEntry
      x-soracom-cli:
      - files list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /files/exported/{exported_file_id}:
    get:
      description: |
        非同期でファイルをエクスポートした場合の処理の進捗を取得します。エクスポートが完了している場合は、ファイルをダウンロードするための URL を取得できます。

        非同期でファイルをエクスポートできる API は以下のとおりです。`exported_file_id` には、以下の API で取得した ファイルエクスポート ID (`exportedFileId` の値) を指定します。

        - [`Billing:exportBilling API`](#/Billing/exportBilling)
        - [`Billing:exportLatestBilling API`](#/Billing/exportLatestBilling)
        - [`Payment:exportPaymentStatement API`](#/Payment/exportPaymentStatement)
        - [`Stats:exportAirStats API`](#/Stats/exportAirStats)
        - [`Stats:exportBeamStats API`](#/Stats/exportBeamStats)
        - [`Stats:exportFunkStats API`](#/Stats/exportFunkStats)
        - [`Stats:exportFunnelStats API`](#/Stats/exportFunnelStats)
        - [`Subscriber:exportSubscribers API`](#/Subscriber/exportSubscribers)
      operationId: getExportedFile
      parameters:
      - description: ファイルエクスポート ID
        in: path
        name: exported_file_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetExportedFileResponse'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: 非同期でファイルをエクスポートした場合の処理の進捗を取得する
      tags:
      - Files
      x-soracom-cli:
      - files get-exported
  /gadgets:
    get:
      description: 条件にマッチする Gadget のリストを返す。Gadget の総数が 1 ページに収まらない場合は、レスポンス中に次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: listGadgets
      parameters:
      - description: 対象の Gadget の Product ID
        in: query
        name: product_id
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの名前(完全一致)
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: 取得する Gadget の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現ページで取得した最後の Gadget の ID ({product_id}/{serial_number})。このパラメータを指定することで次の
          Gadget 以降のリストを取得できる
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Gadget'
                type: array
          description: 条件にマッチする Gadget のリスト
      security:
      - api_key: []
        api_token: []
      summary: List Gadgets
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /gadgets/{product_id}/{serial_number}:
    get:
      description: 指定された Gadget の情報を返す。
      operationId: getGadget
      parameters:
      - description: 対象の Gadget の Product ID
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: 対象の Gadget の Serial Number
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 指定された Gadget の詳細情報
        "404":
          description: 指定された Gadget が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Get Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets get
  /gadgets/{product_id}/{serial_number}/disable_termination:
    post:
      description: Disables termination of specified gadget.
      operationId: disableTerminationOnGadget
      parameters:
      - description: 対象の Gadget の Product ID
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: 対象の Gadget の Serial Number
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 更新後の Gadget の詳細情報
        "404":
          description: 指定された Gadget が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Disable Termination of Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets disable-termination
  /gadgets/{product_id}/{serial_number}/enable_termination:
    post:
      description: 指定された Gadget を Terminate 可能に設定する
      operationId: enableTerminationOnGadget
      parameters:
      - description: 対象の Gadget の Product ID
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: 対象の Gadget の Serial Number
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 更新後の Gadget の詳細情報
        "404":
          description: 指定された Gadget が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Enable Termination of Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets enable-termination
  /gadgets/{product_id}/{serial_number}/register:
    post:
      description: Gadget を登録する
      operationId: registerGadget
      parameters:
      - description: 対象の Gadget の Product ID
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: 対象の Gadget の Serial Number
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GadgetRegistrationRequest'
        description: Gadget の登録リクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: Gadget が正しく登録されました
        "404":
          description: 指定された Gadget が存在しません
      security:
      - api_key: []
        api_token: []
      summary: Register a Gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets register
  /gadgets/{product_id}/{serial_number}/set_group:
    post:
      description: 指定された Gadget のグループを設定する。
      operationId: setGadgetGroup
      parameters:
      - description: 対象の Gadget の Product ID
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: 対象の Gadget の Serial Number
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group（ID のみを含めばよい）
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 更新後の Gadget の詳細情報
        "404":
          description: 指定された Gadget が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Set Group to Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets set-group
  /gadgets/{product_id}/{serial_number}/tags:
    put:
      description: 指定された Gadget のタグを追加・更新
      operationId: putGadgetTags
      parameters:
      - description: 対象の Gadget の Product ID
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: 対象の Gadget の Serial Number
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 更新後の Gadget の詳細情報
        "404":
          description: 指定された Gadget が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update Gadget Tags
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets put-tags
  /gadgets/{product_id}/{serial_number}/tags/{tag_name}:
    delete:
      description: 指定された Gadget のタグを削除
      operationId: deleteGadgetTag
      parameters:
      - description: 対象の Gadget の Product ID
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: 対象の Gadget の Serial Number
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定された Gadget あるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Gadget Tag
      tags:
      - Gadget
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - gadgets delete-tag
  /gadgets/{product_id}/{serial_number}/terminate:
    post:
      description: 指定された Gadget を Terminate
      operationId: terminateGadget
      parameters:
      - description: 対象の Gadget の Product ID
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: 対象の Gadget の Serial Number
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 更新後の Gadget の詳細情報
        "404":
          description: 指定された Gadget が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Terminate Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets terminate
  /gadgets/{product_id}/{serial_number}/unset_group:
    post:
      description: 指定された Gadget のグループ設定を解除する。
      operationId: unsetGadgetGroup
      parameters:
      - description: 対象の Gadget の Product ID
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: 対象の Gadget の Serial Number
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 更新後の Gadget の詳細情報
        "404":
          description: 指定された Gadget が存在しないか、Gadget は Group に属していない
      security:
      - api_key: []
        api_token: []
      summary: Unset Group to Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets unset-group
  /groups:
    get:
      description: Group の一覧を返す
      operationId: listGroups
      parameters:
      - description: Group についた Tag 名。完全一致する Tag 名が検索対象となる。tag_name を指定した場合、tag_value
          が必須。
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: Group についた Tag の値。
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件。
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: レスポンス 1 ページあたりの最大数
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現ページで取得した最後の Group の ID。このパラメータを指定することで次の Group から始まるリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Group の一覧
      security:
      - api_key: []
        api_token: []
      summary: List Groups
      tags:
      - Group
      x-soracom-cli:
      - groups list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Group を新規作成する
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        description: グループに付けるタグ
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create Group
      tags:
      - Group
      x-soracom-cli:
      - groups create
  /groups/{group_id}:
    delete:
      description: Group ID で指定された Group を削除する
      operationId: deleteGroup
      parameters:
      - description: 対象の Group の ID
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定された Group を削除完了
        "404":
          description: 指定された Group は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Group
      tags:
      - Group
      x-soracom-cli:
      - groups delete
    get:
      description: Group ID で指定された Group を返す
      operationId: getGroup
      parameters:
      - description: 対象の Group の ID
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: 指定された Group
        "404":
          description: 指定された Group は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Get Group
      tags:
      - Group
      x-soracom-cli:
      - groups get
  /groups/{group_id}/configuration/{namespace}:
    delete:
      description: 指定された Group のネームスペースを削除
      operationId: deleteConfigurationNamespace
      parameters:
      - description: 対象の Group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: 削除対象のネームスペース
        in: path
        name: namespace
        required: true
        schema:
          enum:
          - SoracomAir
          - SoracomBeam
          - SoracomEndorse
          - SoracomFunk
          - SoracomFunnel
          - SoracomHarvest
          - SoracomHarvestFiles
          - SoracomKrypton
          - UnifiedEndpoint
          type: string
      responses:
        "204":
          description: 指定されたネームスペースの削除完了
        "400":
          description: 指定されたネームスペースが存在しない
        "404":
          description: 指定された Group が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Group Configuration Namespace
      tags:
      - Group
      x-soracom-cli:
      - groups delete-config-namespace
    put:
      description: 指定された Group のパラメータを追加・更新
      operationId: putConfigurationParameters
      parameters:
      - description: 対象の Group の ID。[`Group:listGroups API`](#/Group/listGroups) で取得できます。
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: 対象の Configuration
        in: path
        name: namespace
        required: true
        schema:
          enum:
          - SoracomAir
          - SoracomBeam
          - SoracomEndorse
          - SoracomFunk
          - SoracomFunnel
          - SoracomHarvest
          - SoracomHarvestFiles
          - SoracomKrypton
          - SoracomOrbit
          - UnifiedEndpoint
          type: string
      requestBody:
        content:
          application/json:
            examples:
              Configuring Custom DNS for IoT SIM:
                description: |
                  [IoT SIM のカスタム DNS を設定する](/ja-jp/docs/air/configure-custom-dns/) 場合は、以下の点に注意してください。

                  - パスパラメーターの `namespace` に、`SoracomAir` を指定します。
                  - `key` と `value` のペアについて詳しくは、[ボディで指定するプロパティについて](/ja-jp/docs/air/configure-custom-dns/#ボディで指定するプロパティについて) を参照してください。
                value:
                - key: useCustomDns
                  value: true
                - key: dnsServers
                  value:
                  - 192.168.0.5
                  - 192.168.0.6
            schema:
              items:
                $ref: '#/components/schemas/GroupConfigurationUpdateRequest'
              type: array
        description: 更新対象のオブジェクトを指定します。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: 更新後の Group
        "404":
          description: 指定された Group が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Update Group Configuration Parameters
      tags:
      - Group
      x-soracom-cli:
      - groups put-config
  /groups/{group_id}/configuration/{namespace}/{name}:
    delete:
      description: 指定された Group のパラメータを削除
      operationId: deleteConfigurationParameter
      parameters:
      - description: 対象の Group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: 対象のパラメータのネームスペース
        in: path
        name: namespace
        required: true
        schema:
          enum:
          - SoracomAir
          - SoracomBeam
          - SoracomEndorse
          - SoracomFunk
          - SoracomFunnel
          - SoracomHarvest
          - SoracomHarvestFiles
          - SoracomKrypton
          - UnifiedEndpoint
          type: string
      - description: 削除対象のパラメータ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら
          encodeURIComponent() したものを指定する）
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定されたパラメータの削除完了
        "404":
          description: 指定された Group が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Group Configuration Parameters
      tags:
      - Group
      x-soracom-cli:
      - groups delete-config
  /groups/{group_id}/subscribers:
    get:
      description: Group ID で指定された Group に属する Subscriber の一覧を返す
      operationId: listSubscribersInGroup
      parameters:
      - description: 対象の Group の ID
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: レスポンス 1 ページあたりの最大数
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現ページで取得した最後の Subscriber の IMSI。このパラメータを指定することで次の Subscriber 以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: 指定された Group
        "404":
          description: 指定された Group は存在しない
      security:
      - api_key: []
        api_token: []
      summary: List Subscribers in a group
      tags:
      - Group
      x-sam-operationId: listSubscribers
      x-soracom-cli:
      - groups list-subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /groups/{group_id}/tags:
    put:
      description: 指定された Configuration Group のタグを追加・更新
      operationId: putGroupTags
      parameters:
      - description: 対象の Group の ID
        in: path
        name: group_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: 更新後の Group
        "404":
          description: 指定された Group が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Update Group Tags
      tags:
      - Group
      x-sam-operationId: putTags
      x-soracom-cli:
      - groups put-tags
  /groups/{group_id}/tags/{tag_name}:
    delete:
      description: 指定された Group のタグを削除
      operationId: deleteGroupTag
      parameters:
      - description: 対象の Group の ID
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定されたグループあるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Group Tag
      tags:
      - Group
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - groups delete-tag
  /lagoon/dashboards/{dashboard_id}/permissions:
    put:
      description: SORACOM Lagoon のダッシュボードの権限を更新します
      operationId: updateLagoonDashboardPermissions
      parameters:
      - description: dashboard_id
        in: path
        name: dashboard_id
        required: true
        schema:
          format: int64
          type: integer
      - description: If the value is true, a request will be issued to Lagoon Classic.
          This is only valid if both Lagoon and Lagoon Classic are enabled.
        in: query
        name: classic
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonDashboardPermissionsUpdatingRequest'
        description: req
        required: true
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "403":
          description: Unauthorized operation
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のダッシュボード権限更新
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards update-permissions
  /lagoon/dashboards/{dashboard_id}/permissions/init:
    post:
      description: SORACOM Lagoon のダッシュボードの権限を初期化します
      operationId: initializeLagoonDashboardPermissions
      parameters:
      - description: dashboard_id
        in: path
        name: dashboard_id
        required: true
        schema:
          format: int64
          type: integer
      - description: If the value is true, a request will be issued to Lagoon Classic.
          This is only valid if both Lagoon and Lagoon Classic are enabled.
        in: query
        name: classic
        required: false
        schema:
          type: boolean
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "403":
          description: Unauthorized operation
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のダッシュボードの権限初期化
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards init-permissions
  /lagoon/dashboards/permissions:
    get:
      description: SORACOM Lagoon の全ダッシュボードの権限を取得します
      operationId: listLagoonDashboardsPermissions
      parameters:
      - description: If the value is true, a request will be issued to Lagoon Classic.
          This is only valid if both Lagoon and Lagoon Classic are enabled.
        in: query
        name: classic
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LagoonDashboardPermissionsResponse'
                type: array
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon の全ダッシュボードの権限取得
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards list-permissions
  /lagoon/image/link:
    get:
      description: SORACOM Lagoon の提供するカスタムアイコンのイメージへのリンクを提供します
      operationId: getImageLink
      parameters:
      - description: If the value is true, a request will be issued to Lagoon Classic.
          This is only valid if both Lagoon and Lagoon Classic are enabled.
        in: query
        name: classic
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon の提供するカスタムアイコンのイメージへのリンク提供
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon get-image-link
  /lagoon/license_packs:
    get:
      description: SORACOM Lagoon のライセンスパックのステータスを取得します
      operationId: listLagoonLicensePackStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LagoonLicensePackStatusResponse'
                type: array
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のライセンスパックのステータス取得
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon license-packs list-status
    put:
      description: SORACOM Lagoon の追加ライセンスパックを更新・変更します。この API による操作は root アカウントのみが可能です。
      operationId: updateLagoonLicensePack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonLicensePacksUpdatingRequest'
        description: req
        required: true
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Operator Not Found
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon の追加ライセンスパック更新・変更
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon license-packs update
  /lagoon/migration:
    get:
      deprecated: true
      description: '(廃止されました) この API は常に `410 GONE` を返却します: SORACOM Lagoon のバージョン移行に関連する情報を取得します。この
        API による操作は root アカウントのみが可能です。'
      operationId: getLagoonMigrationInfo
      requestBody:
        $ref: '#/components/requestBodies/LagoonPlanChangingRequest'
      responses:
        "410":
          description: No longer migration supported
      security:
      - api_key: []
        api_token: []
      summary: '(廃止されました) この API は常に `410 GONE` を返却します: SORACOM Lagoon のバージョン移行に関連する情報の取得'
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon migration get-info
    post:
      deprecated: true
      description: '(廃止されました) この API は常に `410 GONE` を返却します: SORACOM Lagoon のバージョン移行を実行します。この
        API による操作は root アカウントのみが可能です。'
      operationId: migrateLagoon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonMigrationFromClassicRequest'
        description: req
        required: true
      responses:
        "410":
          description: No longer migration supported
      security:
      - api_key: []
        api_token: []
      summary: '(廃止されました) この API は常に `410 GONE` を返却します: SORACOM Lagoon のバージョン移行の実行'
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon migration migrate
  /lagoon/plan:
    put:
      description: SORACOM Lagoon のプランを変更します。この API による操作は root アカウントのみが可能です。
      operationId: updateLagoonPlan
      requestBody:
        $ref: '#/components/requestBodies/LagoonPlanChangingRequest'
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Operator Not Found
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のプラン変更
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon updated-plan
  /lagoon/register:
    post:
      description: SORACOM Lagoon サービスを有効にします。この API による操作は root アカウントのみが可能です。
      operationId: registerLagoon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonRegistrationRequest'
        description: request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagoonRegistrationResponse'
          description: Registered
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon サービスを有効にします。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon register
  /lagoon/terminate:
    post:
      description: SORACOM Lagoon サービスの使用を終了します。この API による操作は root アカウントのみが可能です。
      operationId: terminateLagoon
      responses:
        "204":
          description: Terminated
        "400":
          description: Bad request
        "404":
          description: Operator not found
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon サービスの使用を終了します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon terminate
  /lagoon/users:
    get:
      description: オペレーターに属する SORACOM Lagoon のユーザー一覧を取得します。
      operationId: listLagoonUsers
      parameters:
      - description: If the value is true, a request will be issued to Lagoon Classic.
          This is only valid if both Lagoon and Lagoon Classic are enabled.
        in: query
        name: classic
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LagoonUser'
                type: array
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: オペレーターに属する SORACOM Lagoon のユーザー一覧を取得します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon list-users
      - lagoon users list
    post:
      description: SORACOM Lagoon のユーザーを新たに作成します。
      operationId: createLagoonUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserCreationRequest'
        description: request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagoonUserCreationResponse'
          description: Created
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のユーザーを新たに作成します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon create-user
      - lagoon users create
  /lagoon/users/{lagoon_user_id}:
    delete:
      description: SORACOM Lagoon のユーザーを削除します。
      operationId: deleteLagoonUser
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Deleted
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のユーザーを削除します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon delete-user
      - lagoon users delete
  /lagoon/users/{lagoon_user_id}/email:
    put:
      description: SORACOM Lagoon のユーザーのメールアドレスを変更します。
      operationId: updateLagoonUserEmail
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserEmailUpdatingRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のユーザーのメールアドレスを変更します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-email
      - lagoon users update-email
  /lagoon/users/{lagoon_user_id}/password:
    put:
      description: SORACOM Lagoon のユーザーのパスワードを変更します。
      operationId: updateLagoonUserPassword
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserPasswordUpdatingRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のユーザーのパスワードを変更します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-password
      - lagoon users update-password
  /lagoon/users/{lagoon_user_id}/permission:
    put:
      description: SORACOM Lagoon のユーザーの権限を変更します。
      operationId: updateLagoonUserPermission
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserPermissionUpdatingRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のユーザーの権限を変更します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-permission
      - lagoon users update-permission
  /logs:
    get:
      description: 条件に合うログエントリのリストを返す。ログエントリの総数が 1 ページに収まらない場合は、次のページにアクセスするための URL
        を`Link`ヘッダに含めて返す。
      operationId: getLogs
      parameters:
      - description: ログ取得対象のリソースのタイプ
        in: query
        name: resource_type
        required: false
        schema:
          enum:
          - Subscriber
          - EventHandler
          - VirtualPrivateGateway
          type: string
      - description: ログ取得対象のリソースの ID
        in: query
        name: resource_id
        required: false
        schema:
          type: string
      - description: ログエントリをフィルタするためのサービス名
        in: query
        name: service
        required: false
        schema:
          enum:
          - Air
          - Beam
          - Canal
          - Direct
          - Door
          - Endorse
          - Funnel
          - Gate
          type: string
      - description: ログ取得対象の期間の始まり (unixtime)
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: ログ取得対象の期間の終わり (unixtime)
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: 取得するログエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のログエントリのタイムスタンプ。このパラメータを指定することで次のログエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogEntry'
                type: array
          description: ログエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: Get Logs.
      tags:
      - Log
      x-soracom-cli:
      - logs get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_devices:
    get:
      description: 条件にマッチする LoRa device のリストを返す。LoRa device の総数が 1 ページに収まらない場合は、レスポンス中に次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: listLoraDevices
      parameters:
      - description: 検索対象にするタグの名前(完全一致)
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: 取得する LoRa device の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現ページで取得した最後の LoRa device の Device ID。このパラメータを指定することで次の LoRa device
          以降のリストを取得できる
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraDevice'
                type: array
          description: 条件にマッチする LoRa device のリスト
      security:
      - api_key: []
        api_token: []
      summary: List LoRa devices
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_devices/{device_id}:
    get:
      description: 指定された LoRa device の情報を返す。
      operationId: getLoraDevice
      parameters:
      - description: 対象の LoRa device の Device ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 指定された LoRa device の詳細情報
        "404":
          description: 指定された LoRa device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Get LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices get
  /lora_devices/{device_id}/data:
    get:
      description: 指定された LoRa デバイスから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が 1 ページに収まらない場合は、次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: getDataFromLoraDevice
      parameters:
      - description: データ取得対象の LoRa デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: Get data sent from a LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 指定したデバイスにデータを送信する。データは LoRa Network Server にセットされ、次に利用可能なデータ送信スロットを使って指定デバイスに送信される。未送信のデータが
        LoRa Network Server にあった場合には、最新の受信データで上書きされる。 一定時間 (2 時間) 受け取られなかった場合、デバイス受信時に新しいメッセージを受けた場合は、メッセージは破棄されます。
      operationId: sendDataToLoraDevice
      parameters:
      - description: 送信先デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoraData'
        description: 16 進数でエンコードされたバイナリデータの文字列。バイナリデータの最大サイズは 11 octets（16 進数エンコードされた文字列で
          22 文字）。fPort を任意で指定できます。fPort は 0 以上でなければなりません。0 はコントロールプレーンに使用され、通常は 1
          以上を使用します。無効な値が与えられた場合には特定ベンダーのデバイスで問題が起こらないように設定されたデフォルト値である 2 が使用されます。
        required: true
      responses:
        "204":
          description: データは LoRa Network Server にセットされ、送信先デバイスが取得できる状態になったことを示す。
        "400":
          description: 与えられた JSON に無効な値が含まれている。
        "404":
          description: 指定された LoRa デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Send data to a LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices send-data
  /lora_devices/{device_id}/disable_termination:
    post:
      description: 指定された LoRa device を Terminate 不可能に設定する
      operationId: disableTerminationOnLoraDevice
      parameters:
      - description: 対象の LoRa device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRa device の詳細情報
        "404":
          description: 指定された LoRa device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Disable Termination of LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices disable-termination
  /lora_devices/{device_id}/enable_termination:
    post:
      description: 指定された LoRa device を Terminate 可能に設定する
      operationId: enableTerminationOnLoraDevice
      parameters:
      - description: 対象の LoRa device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRa device の詳細情報
        "404":
          description: 指定された LoRa device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Enable Termination of LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices enable-termination
  /lora_devices/{device_id}/register:
    post:
      description: LoRa device を登録
      operationId: registerLoraDevice
      parameters:
      - description: 対象の LoRa device の Device ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterLoraDeviceRequest'
        description: LoRa device
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: LoRa device 登録完了
      security:
      - api_key: []
        api_token: []
      summary: Register LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices register
  /lora_devices/{device_id}/set_group:
    post:
      description: 指定された LoRa device のグループを設定する。
      operationId: setLoraDeviceGroup
      parameters:
      - description: 対象の LoRa device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group（ID のみを含めばよい）
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRa device の詳細情報
        "404":
          description: 指定された LoRa device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Set Group to LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices set-group
  /lora_devices/{device_id}/tags:
    put:
      description: 指定された LoRa device のタグを追加・更新
      operationId: putLoraDeviceTags
      parameters:
      - description: 対象の LoRa device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRa device の詳細情報
        "404":
          description: 指定された LoRa device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update LoRa device Tags
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices put-tags
  /lora_devices/{device_id}/tags/{tag_name}:
    delete:
      description: 指定された LoRa device のタグを削除
      operationId: deleteLoraDeviceTag
      parameters:
      - description: 対象の LoRa device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定された LoRa device あるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete LoRa device Tag
      tags:
      - LoraDevice
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - lora-devices delete-tag
  /lora_devices/{device_id}/terminate:
    post:
      description: 指定された LoRa device を Terminate
      operationId: terminateLoraDevice
      parameters:
      - description: 対象の LoRa device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRa device の詳細情報
        "404":
          description: 指定された LoRa device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Terminate LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices terminate
  /lora_devices/{device_id}/unset_group:
    post:
      description: 指定された LoRa device のグループ設定を解除する。
      operationId: unsetLoraDeviceGroup
      parameters:
      - description: 対象の LoRa device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRa device の詳細情報
        "404":
          description: 指定された LoRa device が存在しないか、LoRa device は Group に属していない
      security:
      - api_key: []
        api_token: []
      summary: Unset Group to LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices unset-group
  /lora_gateways:
    get:
      description: 条件にマッチする LoRa gateway のリストを返す。LoRa gateway の総数が 1 ページに収まらない場合は、レスポンス中に次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: listLoraGateways
      parameters:
      - description: 検索対象にするタグの名前(完全一致)。
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件。
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: 一度に取得する LoRa gateway の数の上限
        in: query
        name: limit
        required: false
        schema:
          format: int32d
          type: integer
      - description: 現ページで取得した最後の LoRa gateway の ID。このパラメータを指定することで次の LoRa gateway
          以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraGateway'
                type: array
          description: LoRa gateway のリスト
      security:
      - api_key: []
        api_token: []
      summary: List LoRa gateways.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_gateways/{gateway_id}:
    get:
      description: 指定された LoRa gateway の情報を返す。
      operationId: getLoraGateway
      parameters:
      - description: 対象の LoRa gateway の ID
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 指定された LoRa gateway の詳細情報
        "404":
          description: 指定された LoRa gateway が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Get LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways get
  /lora_gateways/{gateway_id}/disable_termination:
    post:
      description: 指定された LoRa gateway を Terminate 不可能に設定する
      operationId: disableTerminationOnLoraGateway
      parameters:
      - description: 対象の LoRa gateway の ID
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRa gateway の詳細情報
        "404":
          description: 指定された LoRa gateway が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Disable Termination of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways disable-termination
  /lora_gateways/{gateway_id}/enable_termination:
    post:
      description: 指定された LoRa gateway を Terminate 可能に設定する
      operationId: enableTerminationOnLoraGateway
      parameters:
      - description: 対象の LoRa gateway の ID
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRa gateway の詳細情報
        "404":
          description: 指定された LoRa gateway が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Enable Termination of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways enable-termination
  /lora_gateways/{gateway_id}/set_network_set:
    post:
      description: 指定された LoRa gateway の Network Set ID を指定あるいは上書き変更
      operationId: setLoraNetworkSet
      parameters:
      - description: 対象の LoRa gateway の ID
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/SetNetworkSetRequest'
        description: LoRa Network Set ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRa gateway の詳細情報
        "404":
          description: 指定された LoRa gateway が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Set Network Set ID of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways set-network-set
  /lora_gateways/{gateway_id}/tags:
    put:
      description: 指定された LoRa gateway のタグを追加・更新
      operationId: putLoraGatewayTags
      parameters:
      - description: 対象の LoRa device の ID
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRa gateway の詳細情報
        "404":
          description: 指定された LoRa gateway が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update LoRa gateway Tags.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways put-tags
  /lora_gateways/{gateway_id}/tags/{tag_name}:
    delete:
      description: 指定された LoRa gateway のタグを削除
      operationId: deleteLoraGatewayTag
      parameters:
      - description: 対象の LoRa gateway の ID
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定された LoRa gateway あるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete LoRa gateway tag.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways delete-tag
  /lora_gateways/{gateway_id}/terminate:
    post:
      description: 指定された LoRa gateway を Terminate
      operationId: terminateLoraGateway
      parameters:
      - description: 対象の LoRa gateway の ID
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRa gateway の詳細情報
        "404":
          description: 指定された LoRa gateway が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Terminate LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways terminate
  /lora_gateways/{gateway_id}/unset_network_set:
    post:
      description: 指定された LoRa gateway の Network Set ID を削除
      operationId: unsetLoraNetworkSet
      parameters:
      - description: 対象の LoRa gateway の ID
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRa gateway の詳細情報
        "404":
          description: 指定された LoRa gateway が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Unset Network Set ID of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways unset-network-set
  /lora_network_sets:
    get:
      description: 条件にマッチする LoRa network set のリストを返す。LoRa network set の総数が 1 ページに収まらない場合は、レスポンス中に次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: listLoraNetworkSets
      parameters:
      - description: 検索対象にするタグの名前(完全一致)。
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件。
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: 一度に取得する LoRa network set の数の上限
        in: query
        name: limit
        required: false
        schema:
          format: int32d
          type: integer
      - description: 現ページで取得した最後の LoRa network set の ID。このパラメータを指定することで次以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraNetworkSet'
                type: array
          description: LoRa network set のリスト
      security:
      - api_key: []
        api_token: []
      summary: List LoRa Network Sets.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: LoRa network set を作成する
      operationId: createLoraNetworkSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoraNetworkSet'
        description: タグなど作成対象の LoRa network set に設定する付加情報
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: LoRa network set の作成に成功.
      security:
      - api_key: []
        api_token: []
      summary: Creates a LoRa network set
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets create
  /lora_network_sets/{ns_id}:
    delete:
      description: 指定された LoRa network set を削除する
      operationId: deleteLoraNetworkSet
      parameters:
      - description: 対象の LoRa network set の ID
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 削除に成功
        "404":
          description: 指定された LoRa network set が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets delete
    get:
      description: 指定された LoRa network set の情報を返す
      operationId: getLoraNetworkSet
      parameters:
      - description: 対象の LoRa network set の ID
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: LoRa network set の詳細情報を取得完了
        "404":
          description: 指定された LoRa network set が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Get LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets get
  /lora_network_sets/{ns_id}/add_permission:
    post:
      description: 別の Operator から Network Set が利用できるようにパーミッションを追加する。
      operationId: addPermissionToLoraNetworkSet
      parameters:
      - description: 対象の LoRa network set の ID
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionRequest'
        description: 許可された Operator のリストに追加すべき Operator の ID
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: 指定された network set のパーミッションを更新完了
      security:
      - api_key: []
        api_token: []
      summary: Adds permission to a LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets add-permission
  /lora_network_sets/{ns_id}/gateways:
    get:
      description: 指定された Network Set に属する LoRa gateway のリストを返す。LoRa gateway の総数が 1
        ページに収まらない場合は、レスポンス中に次のページにアクセスするための URL を`Link`ヘッダに含めて返す。
      operationId: listGatewaysInLoraNetworkSet
      parameters:
      - description: 対象の LoRa network set の ID
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      - description: 一度に取得する LoRa gateway の数の上限
        in: query
        name: limit
        required: false
        schema:
          format: int32d
          type: integer
      - description: 現ページで取得した最後の LoRa gateway の ID。このパラメータを指定することで次の LoRa gateway
          以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraGateway'
                type: array
          description: LoRa gateway のリスト
        "404":
          description: 指定された LoRa network set が存在しない
      security:
      - api_key: []
        api_token: []
      summary: List LoRa Gateways in a Network Set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets list-gateways
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_network_sets/{ns_id}/revoke_permission:
    post:
      description: 指定された LoRa network set の別の Operator への利用許可を取り消す
      operationId: revokePermissionFromLoraNetworkSet
      parameters:
      - description: 対象の LoRa network set の ID
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionRequest'
        description: 許可された Operator のリストに追加すべき Operator の ID
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: 指定された LoRa network set のパーミッションを更新完了
      security:
      - api_key: []
        api_token: []
      summary: Revokes a permission from a LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets revoke-permission
  /lora_network_sets/{ns_id}/tags:
    put:
      description: 指定された LoRa network set のタグを追加・更新
      operationId: putLoraNetworkSetTags
      parameters:
      - description: 対象の LoRa network set の ID
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: 更新後の LoRa network set の詳細情報
        "404":
          description: 指定された LoRa network set が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update LoRa network set tags.
      tags:
      - LoraNetworkSet
  /lora_network_sets/{ns_id}/tags/{tag_name}:
    delete:
      description: 指定された LoRa network set のタグを削除
      operationId: deleteLoraNetworkSetTag
      parameters:
      - description: 対象の LoRa network set の ID
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定された LoRa network set あるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete LoRa network set tag.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets delete-tag
  /operators:
    post:
      description: Operator の新規登録をリクエストする。パラメーターで指定されたメールアドレスに宛てて、Operator 登録確認用のワンタイムトークンを含んだメールが送信される。
      operationId: createOperator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterOperatorsRequest'
        description: email, password
        required: true
      responses:
        "201":
          description: Operator が作成された
        "400":
          description: メールアドレスがすでに登録されているか、パスワードのフォーマットが不正
      security:
      - api_key: []
        api_token: []
      summary: Create Operator
      tags:
      - Operator
      x-soracom-cli:
      - operator create
  /operators/{operator_id}:
    get:
      description: Operator の情報を返す。
      operationId: getOperator
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperatorResponse'
          description: OK.
        "400":
          description: Invalid Operator Id
      security:
      - api_key: []
        api_token: []
      summary: Get Operator
      tags:
      - Operator
      x-soracom-cli:
      - operator get
  /operators/{operator_id}/auth_keys:
    get:
      description: Operator の AuthKey 一覧を返す。
      operationId: listOperatorAuthKeys
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthKeyResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List Operator AuthKeys
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys list
    post:
      description: Operator の AuthKey を生成する。
      operationId: generateOperatorAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateOperatorsAuthKeyResponse'
          description: AuthKey が生成されました。
      security:
      - api_key: []
        api_token: []
      summary: Generate Operator AuthKey
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys generate
  /operators/{operator_id}/auth_keys/{auth_key_id}:
    delete:
      description: Operator の AuthKey を削除する。
      operationId: deleteOperatorAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: AuthKey が削除されました。
      security:
      - api_key: []
        api_token: []
      summary: Delete Operator AuthKey
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys delete
  /operators/{operator_id}/company_information:
    get:
      description: Operator の企業情報を返す。
      operationId: getCompanyInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInformationModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get company information
      tags:
      - Operator
      x-soracom-cli:
      - operator get-company-information
    post:
      description: Operator の企業情報を設定する。
      operationId: createCompanyInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInformationModel'
        description: model
        required: true
      responses:
        "201":
          description: Created.
      security:
      - api_key: []
        api_token: []
      summary: Create company information
      tags:
      - Operator
      x-soracom-cli:
      - operator create-company-information
    put:
      description: Operator の企業情報を更新する。
      operationId: updateCompanyInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInformationModel'
        description: model
        required: true
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Update company information
      tags:
      - Operator
      x-soracom-cli:
      - operator update-company-information
  /operators/{operator_id}/contracts:
    post:
      description: Operator のオプション契約を追加する。
      operationId: addOperatorContract
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractUpdatingRequest'
        description: model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractUpdatedResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Add Operator Contract
      tags:
      - Operator
      x-soracom-cli:
      - operator add-contract
  /operators/{operator_id}/contracts/{contract_name}:
    delete:
      description: Opearator のオプション契約を解除する。
      operationId: deleteOperatorContract
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: contract_name
        in: path
        name: contract_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content.
      security:
      - api_key: []
        api_token: []
      summary: Delete Operator Contract
      tags:
      - Operator
      x-soracom-cli:
      - operator delete-contract
  /operators/{operator_id}/coverage_type/{coverage_type}:
    post:
      description: Operator に新規のカバレッジタイプを追加する。
      operationId: addCoverageType
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: coverage_type
        in: path
        name: coverage_type
        required: true
        schema:
          type: string
      responses:
        "201":
          description: Created.
      security:
      - api_key: []
        api_token: []
      summary: Add coverage type
      tags:
      - Operator
      x-soracom-cli:
      - operator add-coverage-type
  /operators/{operator_id}/emails:
    get:
      description: メールアドレスの一覧を返す。
      operationId: listEmails
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/EmailsModel'
                type: array
          description: OK.
        "400":
          description: |
            SAM ユーザーの認証情報を使用して呼び出しました。ルートユーザーの認証情報を使用して呼び出してください。
      security:
      - api_key: []
        api_token: []
      summary: List email addresses
      tags:
      - Email
      x-soracom-cli:
      - emails list
  /operators/{operator_id}/emails/{email_id}:
    delete:
      description: メールアドレスを削除する。
      operationId: deleteEmail
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: email_id
        in: path
        name: email_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Delete email address
      tags:
      - Email
      x-soracom-cli:
      - emails delete
    get:
      description: メールアドレスを取得する。
      operationId: getEmail
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: email_id
        in: path
        name: email_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EmailsModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get email address
      tags:
      - Email
      x-soracom-cli:
      - emails get
  /operators/{operator_id}/individual_information:
    get:
      description: Operator の個人情報を返す。
      operationId: getIndividualInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualInformationModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get individual information
      tags:
      - Operator
      x-soracom-cli:
      - operator get-individual-information
    post:
      description: Operator の個人情報を設定する。
      operationId: createIndividualInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualInformationModel'
        description: model
        required: true
      responses:
        "201":
          description: Created.
      security:
      - api_key: []
        api_token: []
      summary: Create individual information
      tags:
      - Operator
      x-soracom-cli:
      - operator create-individual-information
    put:
      description: Operator の個人情報を更新する。
      operationId: updateIndividualInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualInformationModel'
        description: model
        required: true
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Update individual information
      tags:
      - Operator
      x-soracom-cli:
      - operator update-individual-information
  /operators/{operator_id}/mfa:
    delete:
      description: オペレーターの MFA を無効化します。
      operationId: revokeMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Revoked
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Revoke Operator's MFA.
      tags:
      - Operator
      x-soracom-cli:
      - operator revoke-mfa
    get:
      description: オペレーターの MFA の状態を取得します。MFA の状態は `ACTIVE`, `INACTIVE` もしくは `UNCONFIRMED`
        のいずれかです。
      operationId: getMFAStatus
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAStatusOfUseResponse'
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Get Operator's MFA Status.
      tags:
      - Operator
      x-soracom-cli:
      - operator get-mfa-status
    post:
      description: オペレーターの MFA を有効化します。この API を呼んだ後に、`Operator:verifyMFA` API を用いて
        MFA OTP を検証する必要があります。
      operationId: enableMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableMFAOTPResponse'
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Enable Operator's MFA.
      tags:
      - Operator
      x-soracom-cli:
      - operator enable-mfa
  /operators/{operator_id}/mfa/verify:
    post:
      description: オペレーターの MFA OTP を検証します。 `Operator:enableMFA` を呼んだ後に呼び出す必要があります。この
        API で正しく検証が行われるまで、MFA は有効になりません。この API のレスポンスとして返ってくるバックアップコードは必ず保管してください。
      operationId: verifyMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAAuthenticationRequest'
        description: request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorMFAVerifyingResponse'
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Verify Operator's MFA OTP Code.
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-mfa-otp
  /operators/{operator_id}/password:
    post:
      description: Operator のパスワードを更新する。
      operationId: updateOperatorPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        description: current password, new password
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid password.
      security:
      - api_key: []
        api_token: []
      summary: Update Operator Password
      tags:
      - Operator
      x-soracom-cli:
      - operator update-password
  /operators/{operator_id}/roles:
    get:
      description: Role の一覧を返す。
      operationId: listRoles
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/ListRolesResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List Roles
      tags:
      - Role
      x-soracom-cli:
      - roles list
  /operators/{operator_id}/roles/{role_id}:
    delete:
      description: Role を削除する。
      operationId: deleteRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定されたロールは削除されました。
      security:
      - api_key: []
        api_token: []
      summary: Delete Role
      tags:
      - Role
      x-soracom-cli:
      - roles delete
    get:
      description: Role を取得する。
      operationId: getRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Role
      tags:
      - Role
      x-soracom-cli:
      - roles get
    post:
      description: Role を新しく追加する。
      operationId: createRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateRoleRequest'
        description: permission
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CreateRoleResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Create Role
      tags:
      - Role
      x-soracom-cli:
      - roles create
    put:
      description: Role を編集する。
      operationId: updateRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateRoleRequest'
        description: permission
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Update Role
      tags:
      - Role
      x-soracom-cli:
      - roles update
  /operators/{operator_id}/roles/{role_id}/users:
    get:
      description: Role に紐づくユーザーの一覧を取得する。
      operationId: listRoleAttachedUsers
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/UserDetailResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List Role Attached Users
      tags:
      - Role
      x-soracom-cli:
      - roles list-users
  /operators/{operator_id}/shipping_addresses:
    get:
      description: 商品発送先の一覧を返します。
      operationId: listShippingAddresses
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListShippingAddressResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List shipping addresses
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses list
    post:
      description: 商品発送先を新規登録する。
      operationId: createShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingAddressModel'
        description: model
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShippingAddressResponse'
          description: 商品発送先が登録されました。
      security:
      - api_key: []
        api_token: []
      summary: Create shipping address
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses create
  /operators/{operator_id}/shipping_addresses/{shipping_address_id}:
    delete:
      description: 商品発送先を削除する。
      operationId: deleteShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Delete shipping address
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses delete
    get:
      description: 商品発送先を返す。
      operationId: getShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetShippingAddressResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get shipping address
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses get
    put:
      description: 商品発送先を更新する。
      operationId: updateShippingAddress
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingAddressModel'
        description: model
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Update shipping address
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses update
  /operators/{operator_id}/support/token:
    post:
      description: サポート画面アクセス用のトークンを返す。
      operationId: generateSupportToken
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTokenResponse'
          description: OK.
        "400":
          description: Invalid Operator Id
        "403":
          description: Invalid token.
      security:
      - api_key: []
        api_token: []
      summary: Generate Token for Support Console
      tags:
      - Operator
      x-soracom-cli:
      - operator get-support-token
  /operators/{operator_id}/system_notifications:
    get:
      description: システム通知の一覧を返す。
      operationId: listSystemNotifications
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/SystemNotificationsModel'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List system notifications
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications list
  /operators/{operator_id}/system_notifications/{type}:
    delete:
      description: システム通知を削除する。
      operationId: deleteSystemNotification
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: system notification type
        in: path
        name: type
        required: true
        schema:
          enum:
          - recovery
          - billing
          - support
          type: string
      responses:
        "204":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Delete system notification
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications delete
    get:
      description: システム通知を返す。
      operationId: getSystemNotification
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: system notification type
        in: path
        name: type
        required: true
        schema:
          enum:
          - primary
          - recovery
          - billing
          - support
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/SystemNotificationsModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get system notification
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications get
    post:
      description: システム通知を設定する。
      operationId: setSystemNotification
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: system notification type
        in: path
        name: type
        required: true
        schema:
          enum:
          - primary
          - recovery
          - billing
          - support
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSystemNotificationsRequest'
        description: request
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/SystemNotificationsModel'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Set system notification
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications set
  /operators/{operator_id}/token:
    post:
      description: 新しい API トークンを発行する。現在の API トークンをヘッダーに入れてリクエストを行うと、新しい API トークンを含んだレスポンスを返す。以降のリクエスト時にはこの新しい
        API トークンを用いることができる。
      operationId: generateAuthToken
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTokenRequest'
        description: token timeout seconds
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateTokenResponse'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: リクエストに誤りがあるか、指定されたトークンがすでに無効になっている（後者の場合、/auth API で再度認証を行う必要がある）
      security:
      - api_key: []
        api_token: []
      summary: Generate Authentication Token
      tags:
      - Operator
      x-soracom-cli:
      - operator generate-api-token
  /operators/{operator_id}/tokens:
    delete:
      description: ルートユーザーが発行した全ての API キーと API トークンを無効化します。無効化したあとは、有効期間に関わらず API
        キーと API トークンを用いて SORACOM API を呼び出すことはできません。
      operationId: revokeOperatorAuthTokens
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ルートユーザーが発行した全ての API キーと API トークンの無効化に成功しました。
        "400":
          description: 誤ったオペレーター ID が指定されました。
      security:
      - api_key: []
        api_token: []
      summary: ルートユーザーが発行した全ての API キーと API トークンを無効化します。
      tags:
      - Operator
      x-soracom-cli:
      - operator revoke-operator-auth-tokens
  /operators/{operator_id}/users:
    get:
      description: SAM ユーザー一覧を返す。
      operationId: listUsers
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/UserDetailResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List Users
      tags:
      - User
      x-soracom-cli:
      - users list
  /operators/{operator_id}/users/{user_name}:
    delete:
      description: SAM ユーザーを削除する。
      operationId: deleteUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定された SAM ユーザーは削除されました。
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: SAM ユーザーが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: Delete User
      tags:
      - User
      x-soracom-cli:
      - users delete
    get:
      description: SAM ユーザーを返す。
      operationId: getUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/UserDetailResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get User
      tags:
      - User
      x-soracom-cli:
      - users get
    post:
      description: SAM ユーザーを新しく追加する。
      operationId: createUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        description: description
        required: true
      responses:
        "201":
          description: SAM ユーザーが新しく追加されました。
      security:
      - api_key: []
        api_token: []
      summary: Create User
      tags:
      - User
      x-soracom-cli:
      - users create
    put:
      description: SAM ユーザーを更新する。
      operationId: updateUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        description: description
        required: true
      responses:
        "200":
          description: OK
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: SAM User not found.
      security:
      - api_key: []
        api_token: []
      summary: Update User
      tags:
      - User
      x-soracom-cli:
      - users update
  /operators/{operator_id}/users/{user_name}/auth_keys:
    get:
      description: SAM ユーザーの AuthKey 一覧を返す。
      operationId: listUserAuthKeys
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/AuthKeyResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List User AuthKeys
      tags:
      - User
      x-soracom-cli:
      - users auth-keys list
    post:
      description: SAM ユーザーの AuthKey を生成する。
      operationId: generateUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GenerateUserAuthKeyResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Generate AuthKey
      tags:
      - User
      x-soracom-cli:
      - users auth-keys generate
  /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}:
    delete:
      description: SAM ユーザーの AuthKey を削除する。
      operationId: deleteUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定された AuthKey が削除されました。
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: AuthKey が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: Delete User AuthKey
      tags:
      - User
      x-soracom-cli:
      - users auth-keys delete
    get:
      description: SAM ユーザーの AuthKey を返す。
      operationId: getUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AuthKeyResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get AuthKey
      tags:
      - User
      x-soracom-cli:
      - users auth-keys get
  /operators/{operator_id}/users/{user_name}/mfa:
    delete:
      description: SAM ユーザーの MFA を無効にする
      operationId: revokeUserMFA
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: MFA を無効にしました
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
        api_token: []
      summary: Revoke SAM user's MFA
      tags:
      - User
      x-soracom-cli:
      - users mfa revoke
    get:
      description: SAM ユーザーの MFA の使用状態を取得する
      operationId: getUserMFAStatus
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAStatusOfUseResponse'
          description: OK
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
        api_token: []
      summary: Get SAM user's MFA status
      tags:
      - User
      x-soracom-cli:
      - users mfa get
    post:
      description: SAM ユーザーの MFA を有効にする。
      operationId: enableUserMFA
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableMFAOTPResponse'
          description: OK
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
        api_token: []
      summary: Enable SAM user's MFA
      tags:
      - User
      x-soracom-cli:
      - users mfa enable
  /operators/{operator_id}/users/{user_name}/mfa/verify:
    post:
      description: SAM ユーザーの MFA を有効にした後に MFA OTP が正しく受理されるかを検証する
      operationId: verifyUserMFA
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAAuthenticationRequest'
        description: request
        required: true
      responses:
        "204":
          description: 検証に成功しました
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
        api_token: []
      summary: Verify SAM user's MFA OTP code when MFA activation phase
      tags:
      - User
      x-soracom-cli:
      - users mfa verify
  /operators/{operator_id}/users/{user_name}/password:
    delete:
      description: ユーザーのパスワードを削除する。
      operationId: deleteUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ユーザーのパスワードを削除しました。
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: パスワードが登録されていません。
      security:
      - api_key: []
        api_token: []
      summary: Delete Password
      tags:
      - User
      x-soracom-cli:
      - users password delete
    get:
      description: SAM ユーザーのパスワードがセットされているかを取得する。
      operationId: hasUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetUserPasswordResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Has User Password
      tags:
      - User
      x-soracom-cli:
      - users password configured
    post:
      description: SAM ユーザーのパスワードを作成する。
      operationId: createUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserPasswordRequest'
        description: password
        required: true
      responses:
        "201":
          description: SAM ユーザーのパスワードが登録されました。
      security:
      - api_key: []
        api_token: []
      summary: Create Password
      tags:
      - User
      x-soracom-cli:
      - users password create
    put:
      description: SAM ユーザーのパスワードを更新する。
      operationId: updateUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        description: password
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Update Password
      tags:
      - User
      x-soracom-cli:
      - users password update
  /operators/{operator_id}/users/{user_name}/permission:
    delete:
      description: SAM ユーザーの権限を削除する。
      operationId: deleteUserPermission
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 権限を削除しました。
        "400":
          description: 不正なオペレーター ID または SAM ユーザー名です。
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの権限を削除する
      tags:
      - User
      x-soracom-cli:
      - users permissions delete
    get:
      description: SAM ユーザーの権限設定を取得する。
      operationId: getUserPermission
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetUserPermissionResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get User Permission
      tags:
      - User
      x-soracom-cli:
      - users permissions get
    put:
      description: SAM ユーザーの権限を更新する。
      operationId: updateUserPermission
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserPermissionRequest'
        description: 権限
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの権限を更新する
      tags:
      - User
      x-soracom-cli:
      - users permissions update
  /operators/{operator_id}/users/{user_name}/roles:
    get:
      description: ユーザーのロールの一覧を取得する。
      operationId: listUserRoles
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/RoleResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List User Roles
      tags:
      - Role
      x-soracom-cli:
      - users list-roles
    post:
      description: ユーザーにロールをアタッチする。
      operationId: attachRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachRoleRequest'
        description: role_id
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Attach Role to User
      tags:
      - Role
      x-soracom-cli:
      - users attach-role
  /operators/{operator_id}/users/{user_name}/roles/{role_id}:
    delete:
      description: ユーザーからロールをデタッチする。
      operationId: detachRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Detach Role from User
      tags:
      - Role
      x-soracom-cli:
      - users detach-role
  /operators/{operator_id}/users/{user_name}/tokens:
    delete:
      description: 指定された SAM ユーザーが発行した全ての API キーと API トークンを無効化します。無効化されたあとは、有効期間に関わらず
        API キーと API トークンを用いて SORACOM API を呼び出すことはできません。
      operationId: revokeUserAuthTokens
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定されたユーザーが発行した全ての API キーと API トークンの無効化に成功しました。
        "400":
          description: 誤ったオペレーター ID または SAM ユーザー名が指定されました。
      security:
      - api_key: []
        api_token: []
      summary: 指定された SAM ユーザーが発行した全ての API キーと API トークンを無効化します。
      tags:
      - User
      x-soracom-cli:
      - users revoke-user-auth-tokens
  /operators/{operator_id}/users/default_permissions:
    delete:
      description: すべての SAM ユーザーに適用されるデフォルト権限を削除する。
      operationId: deleteDefaultPermissions
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 削除しました。
        "403":
          description: 許可されていません。
        "404":
          description: オペレーターが存在しません。
      security:
      - api_key: []
        api_token: []
      summary: すべての SAM ユーザーに適用されるデフォルト権限を削除する
      tags:
      - User
      x-soracom-cli:
      - users default-permissions delete
    get:
      description: すべての SAM ユーザーに適用されるデフォルト権限を取得する。
      operationId: getDefaultPermissions
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetDefaultPermissionsResponse'
          description: OK
        "403":
          description: 許可されていません
        "404":
          description: オペレーターが存在しません
      security:
      - api_key: []
        api_token: []
      summary: すべての SAM ユーザーに適用されるデフォルト権限を取得する
      tags:
      - User
      x-soracom-cli:
      - users default-permissions get
    put:
      description: すべての SAM ユーザーに適用されるデフォルト権限を更新する。
      operationId: updateDefaultPermissions
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultPermissionsRequest'
        description: request
        required: true
      responses:
        "202":
          description: 受理されました
        "400":
          description: 不正なリクエストです
        "403":
          description: 許可されていません
      security:
      - api_key: []
        api_token: []
      summary: Update the default permissions
      tags:
      - User
      x-soracom-cli:
      - users default-permissions update
  /operators/add_email_token/issue:
    post:
      description: メールアドレス追加用のワンタイムトークンをメールで送付する。
      operationId: issueAddEmailToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueAddEmailTokenRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: メール登録数の最大を超過しました。
      security:
      - api_key: []
        api_token: []
      summary: Issue a token to add an email address
      tags:
      - Email
      x-soracom-cli:
      - emails issue-add-email-token
  /operators/add_email_token/verify:
    post:
      description: メールアドレス追加用のトークンを確認して、メールアドレスを追加する。
      operationId: verifyAddEmailToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyAddEmailTokenRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
      summary: Verify a token to add an email address
      tags:
      - Email
      x-soracom-cli:
      - emails verify-add-email-token
  /operators/mfa_revoke_token/issue:
    post:
      description: オペレーターの MFA を無効化するためのトークンを発行します。この API が呼ばれた後、トークンはメールで送信されます。
      operationId: issueMFARevokingToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAIssueRevokingTokenRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Operator not found
      summary: Issue Operator's MFA Revoke Token.
      tags:
      - Operator
      x-soracom-cli:
      - operator issue-mfa-revoke-token
  /operators/mfa_revoke_token/verify:
    post:
      description: MFA を無効化するためのワンタイムトークン、アカウントのメールアドレス、パスワードおよびバックアップコードの組み合わせによって
        MFA を無効化します。
      operationId: verifyMFARevokingToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFARevokingTokenVerifyRequest'
        description: request
        required: true
      responses:
        "200":
          description: Revoked
        "400":
          description: Bad request
        "403":
          description: Invalid username or password
      summary: Verify Operator's MFA revoke token.
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-mfa-revoke-token
  /operators/verify:
    post:
      description: Operator 登録の確認を行う。メールで送られてくる確認用ワンタイムトークンをパラメーターに含めて呼び出しを行う。
      operationId: verifyOperator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOperatorsRequest'
        description: token
        required: true
      responses:
        "200":
          description: 登録成功
        "400":
          description: ワンタイムトークンが不正
        "404":
          description: ワンタイムトークンが期限切れ
      summary: Verify Operator
      tags:
      - Operator
      x-soracom-cli:
      - operator verify
  /orders:
    get:
      description: |
        発注確定済みの注文履歴の一覧を取得します。

        **Warning**: 取得できる注文履歴は、過去 18 か月までです。それ以前の注文履歴が必要な場合は、[SORACOM サポート](/ja-jp/docs/support/) に問い合わせてください。
      operationId: listOrders
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListOrderResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 発注確定済みの注文履歴の一覧を取得する
      tags:
      - Order
      x-soracom-cli:
      - orders list
    post:
      description: 新規で発注見積もりの作成を行います。orderId を/confirm に PUT すると発注が完了します。
      operationId: createQuotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEstimatedOrderRequest'
        description: 注文品リストと配送先 ID
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EstimatedOrderModel'
          description: 発注見積もりが作成されました。
      security:
      - api_key: []
        api_token: []
      summary: Create Quotation
      tags:
      - Order
      x-soracom-cli:
      - orders create
  /orders/{order_id}:
    get:
      description: |
        発注確定済みの注文履歴を 1 件だけ取得します。

        **Warning**: 取得できる注文履歴は、過去 18 か月までです。それ以前の注文履歴が必要な場合は、[SORACOM サポート](/ja-jp/docs/support/) に問い合わせてください。
      operationId: getOrder
      parameters:
      - description: 発注 ID。[`Order:listOrders API`](#/Order/listOrders) を呼び出すと取得できます。
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 発注確定済みの発注情報を 1 件だけ取得する
      tags:
      - Order
      x-soracom-cli:
      - orders get
  /orders/{order_id}/cancel:
    put:
      description: 発注をキャンセルします。既に発送済みの場合はエラーが返されます。
      operationId: cancelOrder
      parameters:
      - description: 発注 ID。[`Order:listOrders API`](#/Order/listOrders) を呼び出すと取得できます。
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
          description: 発注がキャンセルされました。
      security:
      - api_key: []
        api_token: []
      summary: Cancel order.
      tags:
      - Order
      x-soracom-cli:
      - orders cancel
  /orders/{order_id}/confirm:
    put:
      description: 与信を実施し、問題ない場合に発注を確定します。
      operationId: confirmOrder
      parameters:
      - description: 発注 ID。[`Order:listOrders API`](#/Order/listOrders) を呼び出すと取得できます。
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Confirm order.
      tags:
      - Order
      x-soracom-cli:
      - orders confirm
  /orders/{order_id}/subscribers:
    get:
      description: 発注した SIM の Subscriber 一覧を返します。
      operationId: listOrderedSubscribers
      parameters:
      - description: 発注 ID。[`Order:listOrders API`](#/Order/listOrders) を呼び出すと取得できます。
        in: path
        name: order_id
        required: true
        schema:
          type: string
      - description: 直前のリクエストで取得したうち、最後の Subscriber の製造番号。レスポンスヘッダの X-Soracom-Next-Key
          に含まれる値
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: レスポンスに含まれる最大 Subscriber 数
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListOrderedSubscriberResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List ordered subscribers.
      tags:
      - Order
      x-soracom-cli:
      - orders list-subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /orders/{order_id}/subscribers/register:
    post:
      description: 発注した SIM をオペレーターに登録します。
      operationId: registerOrderedSim
      parameters:
      - description: 発注 ID。[`Order:listOrders API`](#/Order/listOrders) を呼び出すと取得できます。
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
          description: 発注した SIM がオペレーターに登録されました。
      security:
      - api_key: []
        api_token: []
      summary: Register subscribers for operator.
      tags:
      - Order
      x-soracom-cli:
      - orders register-subscribers
  /payment_history/transactions/{payment_transaction_id}:
    get:
      description: 課金処理の結果を返します。
      operationId: getPaymentTransaction
      parameters:
      - description: 課金処理 ID。[Billing:getBillingHistory API](#/Billing/getBillingHistory) や [Billing:getBilling API](#/Billing/getBilling) で取得できます。
        in: path
        name: payment_transaction_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetPaymentTransactionResult'
          description: OK.
        "400":
          description: 無効な課金処理 ID です。
        "404":
          description: 課金処理の結果が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: Get payment transaction result.
      tags:
      - Payment
      x-soracom-cli:
      - payment-history get
  /payment_methods/current:
    get:
      description: 現在の支払い方法を返します。properties に詳細情報が入っています。
      operationId: getPaymentMethod
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetPaymentMethodResult'
          description: OK.
        "404":
          description: 支払い方法が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: Get payment method information.
      tags:
      - Payment
      x-soracom-cli:
      - payment-methods get-current
  /payment_methods/current/activate:
    post:
      description: エラーのある現在の支払い方法を有効化します。
      operationId: activatePaymentMethod
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                type: object
          description: OK.
        "404":
          description: 支払い方法が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: Activate payment method.
      tags:
      - Payment
      x-soracom-cli:
      - payment-methods reactivate-current
  /payment_statements:
    get:
      description: 課金明細の一覧を返します。
      operationId: listPaymentStatements
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListPaymentStatementResponse'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: List payment statements.
      tags:
      - Payment
      x-soracom-cli:
      - payment-statements list
  /payment_statements/{payment_statement_id}/export:
    post:
      description: 課金明細を出力します。
      operationId: exportPaymentStatement
      parameters:
      - description: 課金明細 ID
        in: path
        name: payment_statement_id
        required: true
        schema:
          type: string
      - description: 出力モード (非同期, 同期)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK
        "400":
          description: 無効な課金明細 ID です。
      security:
      - api_key: []
        api_token: []
      summary: Export payment statement.
      tags:
      - Payment
      x-soracom-cli:
      - payment-statements export
  /payment_statements/payer_information:
    get:
      description: 課金明細に出力する支払い者情報を取得します。
      operationId: getPayerInformation
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RegisterPayerInformationModel'
          description: OK
        "400":
          description: 支払い者情報が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: Export payer information.
      tags:
      - Payment
      x-soracom-cli:
      - payer-information get
    post:
      description: 課金明細に出力する支払い者情報を設定します。
      operationId: registerPayerInformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPayerInformationModel'
        description: 課金明細に登録する支払い者情報
        required: true
      responses:
        "201":
          description: Created.
        "400":
          description: 無効な支払い者情報です。
      security:
      - api_key: []
        api_token: []
      summary: Register payer information.
      tags:
      - Payment
      x-soracom-cli:
      - payer-information register
  /port_mappings:
    get:
      description: Returns a list of port mappings.
      operationId: listPortMappings
      parameters:
      - description: Maximum number of results per response page.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The last Port Mapping ID retrieved on the current page. By specifying
          this parameter, you can continue to retrieve the list from the next group
          onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PortMapping'
                type: array
          description: A list of port mappings.
      security:
      - api_key: []
        api_token: []
      summary: List Port Mapping Entries.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Create a new port mapping.
      operationId: createPortMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePortMappingRequest'
        description: Port mapping to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortMapping'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create Port Mapping.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings create
  /port_mappings/{ip_address}/{port}:
    delete:
      description: Deletes the specified port mapping entry
      operationId: deletePortMapping
      parameters:
      - description: IP address of the target port mapping entry
        in: path
        name: ip_address
        required: true
        schema:
          type: string
      - description: Port of the target port mapping entry
        in: path
        name: port
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion of specified port mapping entry complete.
        "404":
          description: The specified port mapping entry does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete PortMapping.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings delete
  /port_mappings/subscribers/{imsi}:
    get:
      description: Returns the port mapping entries for a subscriber.
      operationId: listPortMappingsForSubscriber
      parameters:
      - description: Target subscriber IMSI.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortMapping'
          description: List of port mapping entries for the subscriber.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Get Port Mapping entries for a subscriber.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings get
  /products:
    get:
      description: 商品一覧を返します。
      operationId: listProducts
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListProductResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List products
      tags:
      - Order
      x-soracom-cli:
      - products list
  /query/devices:
    get:
      description: SORACOM Inventory デバイスをクエリに応じて検索します。部分一致したものを返却します。この API 権限が付与された場合、すべての
        SORACOM Inventory デバイスに対して group も含めた検索/一覧取得を行える権限が与えられます。
      operationId: searchDevices
      parameters:
      - description: 検索したい SORACOM Inventory デバイスの名前
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したいグループの名前
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい SORACOM Inventory デバイスの ID
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したいタグの値の文字列
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい SORACOM Inventory デバイスの bootstrap 時の IMSI
        explode: true
        in: query
        name: imsi
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい SORACOM Inventory デバイスの bootstrap 時の IMEI
        explode: true
        in: query
        name: imei
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 取得する結果の上限数
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: 現ページで取得した最後の SORACOM Inventory デバイスの ID。このパラメータを指定することで次の SORACOM
          Inventory デバイス以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 検索の種別 (AND 検索もしくは OR 検索)
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: 正常に検索結果を返却
        "400":
          description: 不正な検索クエリ
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Inventory デバイスをクエリに応じて検索します。
      tags:
      - Query
      x-soracom-cli:
      - query devices
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/sigfox_devices:
    get:
      description: Sigfox デバイスをクエリに応じて検索します。部分一致したものを返却します。この API 権限が付与された場合、すべての
        Sigfox デバイスに対して group も含めた検索/一覧取得を行える権限が与えられます。
      operationId: searchSigfoxDevices
      parameters:
      - description: 検索したい Sigfox デバイスの名前
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したいグループの名前
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい Sigfox デバイスの ID
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したいタグの値の文字列
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい Sigfox デバイスの状態
        in: query
        name: status
        required: false
        schema:
          default: and
          enum:
          - active
          - inactive
          - suspended
          - terminated
          - shipped
          - ready
          - inStock
          - banned
          - standby
          type: string
      - description: 検索したい Sigfox デバイスの登録状態
        in: query
        name: registration
        required: false
        schema:
          default: and
          enum:
          - notStarted
          - pending
          - success
          - failed
          type: string
      - description: 取得する結果の上限数
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: 現ページで取得した最後の Sigfox デバイスの ID。このパラメータを指定することで次の Sigfox デバイス以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 検索の種別 (AND 検索もしくは OR 検索)
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/SigfoxDevice'
                type: array
          description: 正常に検索結果を返却
        "400":
          description: 不正な検索クエリ
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスをクエリに応じて検索します。
      tags:
      - Query
      x-soracom-cli:
      - query sigfox-devices
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/sims:
    get:
      description: SIM をクエリに応じて検索します。部分一致したものを返却します。この API 権限が付与された場合、すべての SIM に対して
        group も含めた検索/一覧取得を行える権限が与えられます。
      operationId: searchSims
      parameters:
      - description: 検索したい SIM の名前
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したいグループの名前
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい SIM ID
        explode: true
        in: query
        name: sim_id
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい IMSI
        explode: true
        in: query
        name: imsi
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい MSISDN
        explode: true
        in: query
        name: msisdn
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい ICCID
        explode: true
        in: query
        name: iccid
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい製造番号
        explode: true
        in: query
        name: serial_number
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したいタグの値の文字列
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したいバンドルタイプ
        explode: true
        in: query
        name: bundles
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したいセッションステータス (ONLINE もしくは OFFLINE)
        in: query
        name: session_status
        required: false
        schema:
          default: NA
          enum:
          - NA
          - ONLINE
          - OFFLINE
          format: string
          type: string
      - description: 取得する結果の上限数
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: 現ページで取得した最後の SIM の SIM ID。このパラメータを指定することで次の SIM 以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 検索の種別 (AND 検索もしくは OR 検索)
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/Sim'
                type: array
          description: 正常に検索結果を返却
        "400":
          description: 不正な検索クエリ
      security:
      - api_key: []
        api_token: []
      summary: SIM をクエリに応じて検索します。
      tags:
      - Query
      x-soracom-cli:
      - query sims
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers:
    get:
      deprecated: true
      description: (非推奨の API です。代わりに `/query/sims` API を利用することを検討してください) Subscriber
        をクエリに応じて検索します。部分一致したものを返却します。この API 権限が付与された場合、すべての SIM に対して group も含めた検索/一覧取得を行える権限が与えられます。
      operationId: searchSubscribers
      parameters:
      - description: 検索したい Subscriber の名前
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したいグループの名前
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい IMSI
        explode: true
        in: query
        name: imsi
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい MSISDN
        explode: true
        in: query
        name: msisdn
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい ICCID
        explode: true
        in: query
        name: iccid
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したい製造番号
        explode: true
        in: query
        name: serial_number
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索したいタグの値の文字列
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: '検索したいサブスクリプション (例: `plan01s`)'
        explode: true
        in: query
        name: subscription
        required: false
        schema:
          items:
            type: string
          type: array
      - description: '検索したいモジュールタイプ (例: `mini`, `virtual`)'
        explode: true
        in: query
        name: module_type
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 取得する結果の上限数
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: 現ページで取得した最後の Subscriber の IMSI。このパラメータを指定することで次の Subscriber 以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 検索の種別 (AND 検索もしくは OR 検索)
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/Subscriber'
                type: array
          description: 正常に検索結果を返却
        "400":
          description: 不正な検索クエリ
      security:
      - api_key: []
        api_token: []
      summary: (非推奨) Subscriber をクエリに応じて検索します。
      tags:
      - Query
      x-soracom-alternative-cli: query sims
      x-soracom-cli:
      - query subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers/traffic_volume/ranking:
    get:
      description: 指定された期間の Subscriber の通信量ランキングを検索して返却します。
      operationId: searchSubscriberTrafficVolumeRanking
      parameters:
      - description: 検索期間の始点 (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: true
        schema:
          format: int64
          type: integer
      - description: 検索期間の終点 (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: true
        schema:
          format: int64
          type: integer
      - description: 取得する結果の上限数
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 500
          type: integer
      - description: ランキングの順序
        in: query
        name: order
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/TrafficVolumeRanking'
                type: array
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Subscriber の通信量ランキングを返却します。
      tags:
      - Query
      x-soracom-cli:
      - query subscribers traffic-volume-ranking
      - query traffic-ranking
  /resource_summaries/{resource_summary_type}:
    get:
      description: resource_summary_type で指定された種別のリソースの要約を取得します。
      operationId: getResourceSummary
      parameters:
      - description: |
          リソースの要約の種別

          - `simsPerStatus`: ステータスごとの IoT SIM の数
        in: path
        name: resource_summary_type
        required: true
        schema:
          enum:
          - simsPerStatus
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSummary'
          description: リソースの要約を取得しました
        "404":
          description: 指定のリソースの要約は存在しません
      security:
      - api_key: []
        api_token: []
      summary: resource_summary_type で指定された種別のリソースの要約を取得します。
      tags:
      - ResourceSummary
      x-soracom-cli:
      - resource-summaries get
  /sigfox_devices:
    get:
      description: 条件にマッチする Sigfox device のリストを返す。Sigfox device の総数が 1 ページに収まらない場合は、レスポンス中に次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: listSigfoxDevices
      parameters:
      - description: 検索対象にするタグの名前(完全一致)
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: 取得する Sigfox device の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現ページで取得した最後の Sigfox device の Device ID。このパラメータを指定することで次の Sigfox
          device 以降のリストを取得できる
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SigfoxDevice'
                type: array
          description: 条件にマッチする Sigfox device のリスト
      security:
      - api_key: []
        api_token: []
      summary: List Sigfox devices
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sigfox_devices/{device_id}:
    get:
      description: 指定された Sigfox device の情報を返す。
      operationId: getSigfoxDevice
      parameters:
      - description: 対象の Sigfox device の Device ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 指定された Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Get Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices get
  /sigfox_devices/{device_id}/data:
    get:
      description: 指定された Sigfox デバイスから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が 1 ページに収まらない場合は、次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: getDataFromSigfoxDevice
      parameters:
      - description: データ取得対象の Sigfox デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: Get data sent from a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 指定したデバイスにデータを送信する。データはサーバに保持され、次に当該デバイスがデータ送信リクエストを行った際に送信される。未送信のデータがサーバにあった場合には、最新のデータで上書きされる。
      operationId: sendDataToSigfoxDevice
      parameters:
      - description: 送信先デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigfoxData'
        description: 16 進数でエンコードされたバイナリデータの文字列。バイナリデータのサイズは 8 octets（16 進数エンコードされた文字列で
          16 文字）である必要がある。
        required: true
      responses:
        "204":
          description: データがサーバにセットされ、対象のデバイスによる取得待ち状態になったことを示す。
        "404":
          description: 指定された Sigfox デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Send data to a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices send-data
  /sigfox_devices/{device_id}/disable_termination:
    post:
      description: 指定された Sigfox device を Terminate 不可能に設定する
      operationId: disableTerminationOnSigfoxDevice
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Disable Termination of Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices disable-termination
  /sigfox_devices/{device_id}/enable_termination:
    post:
      description: 指定された Sigfox device を Terminate 可能に設定する
      operationId: enableTerminationOnSigfoxDevice
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Enable Termination of Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices enable-termination
  /sigfox_devices/{device_id}/register:
    post:
      description: Sigfox デバイスを登録する
      operationId: registerSigfoxDevice
      parameters:
      - description: 登録対象の Sigfox デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigfoxRegistrationRequest'
        description: Sigfox デバイスの登録リクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: Sigfox デバイスが正しく登録されました
        "400":
          description: PAC が指定されていません
      security:
      - api_key: []
        api_token: []
      summary: Register a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices register
  /sigfox_devices/{device_id}/set_group:
    post:
      description: 指定された Sigfox device のグループを設定する。
      operationId: setSigfoxDeviceGroup
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group（ID のみを含めばよい）
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Set Group to Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices set-group
  /sigfox_devices/{device_id}/tags:
    put:
      description: 指定された Sigfox device のタグを追加・更新
      operationId: putSigfoxDeviceTags
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update Sigfox device Tags
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices put-tags
  /sigfox_devices/{device_id}/tags/{tag_name}:
    delete:
      description: 指定された Sigfox device のタグを削除
      operationId: deleteSigfoxDeviceTag
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定された Sigfox device あるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Sigfox device Tag
      tags:
      - SigfoxDevice
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - sigfox-devices delete-tag
  /sigfox_devices/{device_id}/terminate:
    post:
      description: 指定された Sigfox device を Terminate
      operationId: terminateSigfoxDevice
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Sigfox デバイスを即座に削除する
        in: query
        name: delete_immediately
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Terminate Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices terminate
  /sigfox_devices/{device_id}/unset_group:
    post:
      description: 指定された Sigfox device のグループ設定を解除する。
      operationId: unsetSigfoxDeviceGroup
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しないか、Sigfox device は Group に属していない
      security:
      - api_key: []
        api_token: []
      summary: Unset Group to Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices unset-group
  /sims:
    get:
      description: 条件にマッチする SIM のリストを返す。SIM の総数が 1 ページに収まらない場合は、レスポンス中に次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: listSims
      parameters:
      - description: 取得する SIM の上限。ただし、返却される SIM の個数は指定された値を下回る可能性があります。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現ページで取得した最後の SIM ID。このパラメータを指定することで次の SIM 以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sim'
                type: array
          description: A list of subscribers
        "404":
          description: No such SIM found
      security:
      - api_key: []
        api_token: []
      summary: List SIMs
      tags:
      - Sim
      x-soracom-cli:
      - sims list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 'SIM の新規作成を行います (例: SORACOM Arc のバーチャル SIM)。'
      operationId: createSim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSimRequest'
        description: SIM の作成リクエスト
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: SIM が作成されました
      security:
      - api_key: []
        api_token: []
      summary: SIM の新規作成
      tags:
      - Sim
      x-soracom-cli:
      - sims create
  /sims/{sim_id}:
    get:
      description: 指定した SIM の情報を取得する。
      operationId: getSim
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 指定した SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Get SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims get
  /sims/{sim_id}/activate:
    post:
      description: 指定した SIM のステータスを「使用中 (active)」に変更する。
      operationId: activateSim
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Activate SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims activate
  /sims/{sim_id}/credentials/arc:
    delete:
      deprecated: true
      description: (非推奨の API です。利用しないでください) SORACOM Arc のクレデンシャル (公開鍵) を SIM から除去します。
      operationId: removeArcSimCredentials
      parameters:
      - description: 対象とする SIM の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Arc のクレデンシャルが SIM から除去されたことを表します
      security:
      - api_key: []
        api_token: []
      summary: (非推奨) Arc のクレデンシャルを SIM から除去
      tags:
      - Sim
      x-soracom-cli:
      - sims remove-arc-credentials
    post:
      deprecated: true
      description: (非推奨の API です。代わりに `renewArcSimCredentials` API を利用してください) SORACOM
        Arc のクレデンシャル (公開鍵) を SIM に付与します。
      operationId: attachArcSimCredentials
      parameters:
      - description: 対象とする SIM の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArcCredentialAttachRequest'
        description: Arc のクレデンシャルの付与リクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcCredentialAttachResponse'
          description: Arc のクレデンシャル付与成功レスポンス
      security:
      - api_key: []
        api_token: []
      summary: (非推奨) Arc のクレデンシャルを SIM へ付与
      tags:
      - Sim
      x-soracom-cli:
      - sims attach-arc-credentials
    put:
      description: SIM に Arc のクレデンシャルを付与し、セッションの再初期化処理を行います
      operationId: renewArcSimCredentials
      parameters:
      - description: 対象とする SIM の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArcCredentialRenewRequest'
        description: Arc のクレデンシャルの付与リクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcCredentialRenewResponse'
          description: Arc のクレデンシャルの付与およびセッションの再初期化の成功レスポンス
      security:
      - api_key: []
        api_token: []
      summary: SIM に対する Arc のクレデンシャルを更新する
      tags:
      - Sim
      x-soracom-cli:
      - sims renew-arc-credentials
  /sims/{sim_id}/data:
    get:
      description: 指定した SIM から送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が 1 ページに収まらない場合は、次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: getDataFromSim
      parameters:
      - description: データ取得対象の SIM の ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: Get data sent from a SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sims/{sim_id}/deactivate:
    post:
      description: 指定した SIM のステータスを「休止中 (inactive)」に変更する。
      operationId: deactivateSim
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Deactivate SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims deactivate
  /sims/{sim_id}/delete_session:
    post:
      description: 指定した SIM のセッションを切断する。
      operationId: deleteSimSession
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Session
      tags:
      - Sim
      x-soracom-cli:
      - sims delete-session
  /sims/{sim_id}/disable_termination:
    post:
      description: 指定した SIM の解約プロテクションを設定する (解約できないようにする)。
      operationId: disableSimTermination
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Disable Termination of SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims disable-termination
  /sims/{sim_id}/downlink/ping:
    post:
      description: SIM に対して ICMP ping リクエストを送信する。
      operationId: sendDownlinkPing
      parameters:
      - description: 対象の SIM の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownlinkPingRequest'
        description: ping リクエストのオプション
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownlinkPingResponse'
          description: ping の結果
      security:
      - api_key: []
        api_token: []
      summary: SIM に対して ping リクエストを送信する。
      tags:
      - Sim
      x-soracom-cli:
      - sims downlink-ping
  /sims/{sim_id}/enable_termination:
    post:
      description: 指定した SIM の解約プロテクションを解除する (解約できるようにする)。
      operationId: enableSimTermination
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Enable Termination of SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims enable-termination
  /sims/{sim_id}/events/sessions:
    get:
      description: 指定した SIM に関する過去 32 日間のセッション履歴 (作成 / 変更 / 切断のイベント履歴) を返す。イベントの総数が
        1 ページに収まらない場合は、レスポンス中に次のページにアクセスするための URL を `Link` ヘッダに含めて返す。
      operationId: listSimSessionEvents
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: イベントの検索範囲時刻の始まり(unixtime)
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: イベントの検索範囲時刻の終わり(unixtime)
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: 取得するイベント数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現ページで取得した最後のイベントのタイムスタンプ。このパラメータを指定することで次のイベント以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionEvent'
                type: array
          description: A list of session events
      security:
      - api_key: []
        api_token: []
      summary: List Session Events
      tags:
      - Sim
      x-soracom-cli:
      - sims session-events
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sims/{sim_id}/packet_capture_sessions:
    get:
      description: 指定した SIM のパケットキャプチャセッションのリストを取得する。
      operationId: listSimPacketCaptureSessions
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 現ページで取得した最後のパケットキャプチャセッション。このパラメータを指定することで次のパケットキャプチャセッション以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 取得するパケットキャプチャセッションの上限
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PacketCaptureSession'
                type: array
          description: 指定した SIM のパケットキャプチャセッションのリスト
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: List packet capture sessions associated with the SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims list-packet-capture-sessions
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 指定した SIM に対するパケットキャプチャセッションを作成する。
      operationId: createSimPacketCaptureSession
      parameters:
      - description: パケットキャプチャセッションを作成する SIM の ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PacketCaptureSessionRequest'
        description: パケットキャプチャセッションリクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 指定した SIM に対して作成されたパケットキャプチャセッション
        "400":
          description: 指定した SIM に対するパケットキャプチャセッションの作成が失敗した
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Create Packet Capture Session
      tags:
      - Sim
      x-soracom-cli:
      - sims create-packet-capture-session
  /sims/{sim_id}/packet_capture_sessions/{session_id}:
    delete:
      description: 指定した SIM に対するパケットキャプチャを削除する。
      operationId: deleteSimPacketCaptureSession
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 対象のパケットキャプチャセッション ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 削除されたパケットキャプチャセッションの情報
        "400":
          description: 指定されたパケットキャプチャセッションの削除に失敗
        "404":
          description: 指定されたパケットキャプチャセッションが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Packet Capture Session
      tags:
      - Sim
      x-soracom-cli:
      - sims delete-packet-capture-session
    get:
      description: 指定した SIM に対するパケットキャプチャセッションを取得する。
      operationId: getSimPacketCaptureSession
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 対象のパケットキャプチャセッション ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 指定されたパケットキャプチャセッション
        "404":
          description: 指定されたパケットキャプチャセッションが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Get Packet Capture Session
      tags:
      - Sim
      x-soracom-cli:
      - sims get-packet-capture-session
  /sims/{sim_id}/packet_capture_sessions/{session_id}/stop:
    post:
      description: 指定した SIM に対するパケットキャプチャを停止する。
      operationId: stopSimPacketCaptureSession
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 対象のパケットキャプチャセッション ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 停止されたパケットキャプチャセッションの情報
        "400":
          description: The packet capture session can be stopped only when its status
            is CAPTURING
        "404":
          description: 指定されたパケットキャプチャセッションが存在しない
        "500":
          description: 指定されたパケットキャプチャセッションが停止できなかった
      security:
      - api_key: []
        api_token: []
      summary: Stop SIM Packet Capture Session
      tags:
      - Sim
      x-soracom-cli:
      - sims stop-packet-capture-session
  /sims/{sim_id}/profiles/{iccid}/add_subscription:
    post:
      description: 新しいセカンダリサブスクリプションを IoT SIM に追加するための OTA のアップデートをトリガします。
      operationId: addSubscription
      parameters:
      - description: 対象の SIM の ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 対象の IoT SIM の ICCID。eUICC 非対応 の IoT SIM の場合は、ICCID と SIM ID は同一です。
        in: path
        name: iccid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable:
                  description: |
                    セカンダリサブスクリプションのダウンロードが完了すると、すぐにそのセカンダリサブスクリプションを有効化 (active) するかどうかを指定します。
                    - `true`: すぐに有効化 (active) する
                    - `false`: 無効 (inactive) を維持する。次の [ネットワーク登録](/ja-jp/resources/glossary/#ネットワーク登録) 時に、セカンダリサブスクリプションが有効化 (active) されます。
                  type: boolean
                subscription:
                  description: |
                    追加する [セカンダリサブスクリプション](/ja-jp/resources/glossary/subscription/)
                    - `planP1`、`planX1`、`planX2`、`planX3`: 追加サブスクリプション
                    - `planArc01`: バーチャル SIM/Subscriber
                  enum:
                  - planP1
                  - planX1
                  - planX2
                  - planX3
                  - planArc01
                  type: string
                type:
                  description: |
                    - `virtual`: `subscription` で `planArc01` を指定した場合
                    - `cellular`: `subscription` で `planArc01` 以外を指定した場合
                  enum:
                  - virtual
                  - cellular
                  type: string
              required:
              - subscription
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimProfile'
          description: 更新された SIM プロファイル
        "400":
          description: 追加できないサブスクリプションを指定した。たとえば、plan-D の IoT SIM に `planP1` は追加できません。
        "404":
          description: 指定した SIM ID および ICCID の IoT SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: 新しいセカンダリサブスクリプションを IoT SIM に追加する
      tags:
      - Sim
      x-soracom-cli:
      - sims add-subscription
  /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/cancel_download:
    post:
      description: Cancel the download of subscription before it gets downloaded to
        the SIM. The condition is that the status of the subscription is still `shipped`
      operationId: cancelSubscriptionContainerDownload
      parameters:
      - description: SIM ID of the target subscription container.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      - description: ICCID of the target subscription container.
        in: path
        name: iccid
        required: true
        schema:
          type: string
      - description: IMSI of the target subscription container.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContainerStatus'
          description: A schema listing subscription containers and containing a map
            of PLMN codes to subscription containers.
        "404":
          description: No such SIM found
      security:
      - api_key: []
        api_token: []
      summary: Cancel subscription download to subscription container
      tags:
      - Sim
      x-soracom-cli:
      - sims cancel-subscription-container-download
  /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/terminate:
    post:
      description: セカンダリサブスクリプションの利用を終了します。現在、SORACOM Arc のセカンダリサブスクリプションのバーチャル SIM/Subscriber
        の解約のみに対応しています。
      operationId: terminateSubscriptionContainer
      parameters:
      - description: 対象のプライマリサブスクリプションの IoT SIM の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      - description: 対象のプライマリサブスクリプションの IoT SIM の ICCID
        in: path
        name: iccid
        required: true
        schema:
          type: string
      - description: 対象のセカンダリサブスクリプションのバーチャル SIM/Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "204":
          description: セカンダリサブスクリプションの利用が正常に終了されました
      security:
      - api_key: []
        api_token: []
      summary: セカンダリサブスクリプションの利用終了
      tags:
      - Sim
      x-soracom-cli:
      - sims terminate-subscription-container
  /sims/{sim_id}/profiles/{iccid}/subscription_containers:
    get:
      description: Returns a schema listing subscription containers and containing
        a map of PLMN codes to subscription containers
      operationId: listSubscriptionContainers
      parameters:
      - description: Sim Id of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Iccid of the target profile
        in: path
        name: iccid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContainerStatus'
          description: A schema listing subscription containers and containing a map
            of PLMN codes to subscription containers.
        "400":
          description: Missing parameter
        "404":
          description: No such profile or sim found
      security:
      - api_key: []
        api_token: []
      summary: Get subscription container status.
      tags:
      - Sim
      x-soracom-cli:
      - sims list-subscription-containers
  /sims/{sim_id}/profiles/{iccid}/subscription_containers/{container_id}/enable:
    post:
      description: Causes the identified container to become the active one on the
        Sim.
      operationId: enableSubscriptionContainer
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Iccid of the target profile
        in: path
        name: iccid
        required: true
        schema:
          type: string
      - description: Identifier of the target container
        in: path
        name: container_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContainerStatus'
          description: A schema listing subscription containers and containing a map
            of PLMN codes to subscription containers.
        "404":
          description: No such profile or sim found
      security:
      - api_key: []
        api_token: []
      summary: Enables a subscription container.
      tags:
      - Sim
      x-soracom-cli:
      - sims enable-subscription-container
  /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping:
    put:
      description: Inserts/updates Country (and optionally network) to subscription
        container mapping entries in the mapping table.
      operationId: putSubscriptionContainerCountryMappingEntries
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Iccid of the target profile
        in: path
        name: iccid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MappingEntries'
        description: collection of country (and optionally network) to subscription
          container mapping entries
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContainerStatus'
          description: A schema listing subscription containers and containing a map
            of PLMN codes to subscription containers.
        "400":
          description: Missing parameter
        "404":
          description: No such profile or sim found
      security:
      - api_key: []
        api_token: []
      summary: Updates subscription container country mapping entries.
      tags:
      - Sim
      x-soracom-cli:
      - sims put-country-mapping-entries
  /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping/{mcc}:
    delete:
      description: Delete subscription container country mapping entries
      operationId: deleteSubscriptionContainerCountryMappingEntry
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Iccid of the target profile
        in: path
        name: iccid
        required: true
        schema:
          type: string
      - description: mobile country code
        in: path
        name: mcc
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContainerStatus'
          description: A schema listing subscription containers and containing a map
            of PLMN codes to subscription containers.
        "400":
          description: Missing parameter
        "404":
          description: No such profile or sim found
      security:
      - api_key: []
        api_token: []
      summary: Delete subscription container mapping entries
      tags:
      - Sim
      x-soracom-cli:
      - sims delete-country-mapping-entry
  /sims/{sim_id}/register:
    post:
      description: オペレーターに SIM を登録する。
      operationId: registerSim
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSimRequest'
        description: SIM 登録リクエスト
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: SIM 登録完了
      security:
      - api_key: []
        api_token: []
      summary: Register SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims register
  /sims/{sim_id}/report_local_info:
    post:
      description: |
        SIM ローカル情報レポートを取得します。

        **Alert**: SIM ローカル情報レポート取得のリクエスト 1 件につき、IoT デバイスへの SMS 送信 1 通が発生します。IoT デバイスへの SMS 送信は有料です。利用料金について詳しくは、以下のページを参照してください。
        - [SMS 機能](https://soracom.jp/services/air/cellular/price_iot_sim/#sms) (グローバルカバレッジ)
        - [SMS 機能](https://soracom.jp/services/air/cellular/price_specific_area_sim/#price5) (日本カバレッジ)

      operationId: reportSimLocalInfo
      parameters:
      - description: 対象の SIM の ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: SIM ローカル情報レポートの更新依頼に成功しました。SIM ローカル情報レポートは、IoT SIM からのレポートが成功すると非同期に更新されます。非同期に更新された情報は、SORACOM ユーザーコンソールで確認できます。詳しくは、[SIM ローカル情報レポートを確認する](/ja-jp/docs/air/get-local-info-report/) を参照してください。
        "400":
          description: 指定した IoT SIM は、SIM ローカル情報レポート機能に対応していません。
        "404":
          description: 指定したカバレッジタイプに、指定した IoT SIM が存在しません。
      security:
      - api_key: []
        api_token: []
      summary: SIM ローカル情報レポートを取得する
      tags:
      - Sim
      x-soracom-cli:
      - sims report-local-info
  /sims/{sim_id}/send_sms:
    post:
      description: 指定した SIM 宛に SMS を送信する。
      operationId: sendSmsToSim
      parameters:
      - description: SMS 送信対象の SIM の ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsForwardingRequest'
        description: メッセージ本体とエンコーディングタイプからなる SMS 送信リクエスト
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsForwardingReport'
          description: SMS 送信を受け付け完了。メッセージに割り振られた ID を返す
        "400":
          description: 指定した SIM は SMS API をサポートしていない
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Send SMS to SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims send-sms
  /sims/{sim_id}/sessions/arc:
    post:
      description: SORACOM Arc セッションの作成を行います。すでにセッションが存在する場合は再作成を行います。
      operationId: createArcSession
      parameters:
      - description: 対象とする SIM の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcSessionCreateResponse'
          description: Arc セッションが作成されました
        "400":
          description: 作成リクエスト中に Arc のクレデンシャルが不足しています
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Arc セッションの作成
      tags:
      - Sim
      x-soracom-cli:
      - sims create-arc-session
  /sims/{sim_id}/set_expiry_time:
    post:
      description: 指定した SIM の有効期限とアクションを設定する。
      operationId: setSimExpiryTime
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpiryTime'
        description: 更新後の有効期限 (unixtime:ミリ秒単位) とアクション
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Update Expiry Time of SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims set-expiry-time
  /sims/{sim_id}/set_group:
    post:
      description: 指定した SIM のグループを設定する。
      operationId: setSimGroup
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGroupRequest'
        description: Group（ID のみを含めばよい）
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Set Group to SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims set-group
  /sims/{sim_id}/set_imei_lock:
    post:
      description: 指定した SIM の IMEI ロックを設定する。
      operationId: setSimImeiLock
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetImeiLockRequest'
        description: SIM に指定する IMEI lock の設定 （オンラインの SIM の現在の IMEI にロックするには IMEI は指定しなくてもよい）
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "400":
          description: IMEI 文字列が無効か、オフラインの SIM にも関わらず IMEI が指定されていない.
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Set IMEI lock configuration for SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims set-imei-lock
  /sims/{sim_id}/set_to_standby:
    post:
      description: 指定した SIM のステータスを「利用開始待ち (standby)」に変更する。
      operationId: setSimToStandby
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "400":
          description: 指定した SIM は「利用開始待ち (standby)」に対応していない
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Set SIM to standby mode.
      tags:
      - Sim
      x-soracom-cli:
      - sims set-to-standby
  /sims/{sim_id}/suspend:
    post:
      description: 指定した SIM のステータスを「利用中断中 (suspended)」に変更する。
      operationId: suspendSim
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Suspend SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims suspend
  /sims/{sim_id}/tags:
    put:
      description: 指定した SIM のタグを追加 / 更新する。
      operationId: putSimTags
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update SIM Tags
      tags:
      - Sim
      x-sam-operationId: putTags
      x-soracom-cli:
      - sims put-tags
  /sims/{sim_id}/tags/{tag_name}:
    delete:
      description: 指定した SIM のタグを削除する。
      operationId: deleteSimTag
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定した SIM あるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete SIM Tag
      tags:
      - Sim
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - sims delete-tag
  /sims/{sim_id}/terminate:
    post:
      description: 指定した SIM を解約する。
      operationId: terminateSim
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Terminate SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims terminate
  /sims/{sim_id}/unset_expiry_time:
    post:
      description: 指定した SIM の有効期限を解除する。
      operationId: unsetSimExpiryTime
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 当該 SIM の有効期限の解除に成功
        "404":
          description: 指定した SIM が存在しないか、SIM に有効期限がない
      security:
      - api_key: []
        api_token: []
      summary: Delete Expiry Time of SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims unset-expiry-time
  /sims/{sim_id}/unset_group:
    post:
      description: 指定した SIM のグループ設定を解除する。
      operationId: unsetSimGroup
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しないか、SIM は Group に属していない
      security:
      - api_key: []
        api_token: []
      summary: Unset Group to SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims unset-group
  /sims/{sim_id}/unset_imei_lock:
    post:
      description: 指定した SIM の IMEI ロックを解除する。
      operationId: unsetSimImeiLock
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Unset IMEI lock configuration for SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims unset-imei-lock
  /sims/{sim_id}/update_speed_class:
    post:
      description: 指定した SIM の速度クラスを変更する。
      operationId: updateSimSpeedClass
      parameters:
      - description: 対象の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpeedClassRequest'
        description: speed_class
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の SIM の詳細情報
        "400":
          description: 指定された速度クラスは、このサブスクリプションに存在しません。たとえば、plan01s のときは arc.standard
            は指定できません。
        "404":
          description: 指定した SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Update SIM speed class
      tags:
      - Sim
      x-soracom-cli:
      - sims update-speed-class
  /sora_cam/devices:
    get:
      description: |
        ソラカメ対応カメラの一覧を取得します。ライセンスを割り当てていないソラカメ対応カメラの情報も取得できます。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDevices
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              example:
              - configuration:
                  audioAlarmEnabled: false
                  motionDetectionEnabled: true
                  smokeAlarmEnabled: false
                connected: true
                deviceCategory: Camera
                deviceId: 7CDDDEADBEEF
                firmwareVersion: 4.58.0.97
                lastConnectedTime: 1664512183393
                name: My ATOM Cam 2
                productDisplayName: ATOM Cam 2
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamDevice'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの一覧を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices list
  /sora_cam/devices/{device_id}:
    get:
      description: |
        `device_id` で指定したソラカメ対応カメラの情報を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: getSoraCamDevice
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              example:
                appliedLicenses:
                - name: Cloud Continuous Recording
                  value: storage_life=14
                configuration:
                  audioAlarmEnabled: false
                  motionDetectionEnabled: true
                  smokeAlarmEnabled: false
                connected: true
                deviceCategory: Camera
                deviceId: 7CDDDEADBEEF
                firmwareVersion: 4.58.0.97
                lastConnectedTime: 1664512183393
                name: My ATOM Cam 2
                productDisplayName: ATOM Cam 2
              schema:
                $ref: '#/components/schemas/SoraCamDevice'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの情報を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices get
  /sora_cam/devices/{device_id}/exports/usage:
    get:
      description: |
        静止画の残りのエクスポート可能枚数や、録画映像の残りのエクスポート可能時間などを取得します。

        **Warning**: 静止画をエクスポートしても、録画映像をエクスポートしても、動画の視聴可能時間 (1 か月 72 時間) が消費されます。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: getSoraCamDeviceExportUsage
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              example:
              - deviceId: 7CDDDEADBEEF
                image:
                  remainingFrames: 259131
                  usedFrames: 69
                meteredYearMonth: "202209"
                video:
                  remainingSeconds: 259131
                  usedSeconds: 69
              schema:
                $ref: '#/components/schemas/SoraCamExportUsage'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの静止画のエクスポート可能枚数や録画映像のエクスポート可能時間を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices get-export-usage
  /sora_cam/devices/{device_id}/images/exports:
    get:
      description: |
        [`SoraCam:exportSoraCamDeviceRecordedImage API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedImage) で開始した「録画映像から静止画をエクスポートする処理」の現在の状況をリストで取得します。この API では、対象を 1 台のソラカメ対応カメラに限定します。

        なお、対象を 1 台のソラカメ対応カメラに限定しないで、オペレーターが所有するすべてのソラカメ対応カメラにする場合は、[SoraCam:listSoraCamDeviceImageExports API](#/SoraCam/listSoraCamDeviceImageExports) を使用してください。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDeviceImageExportsForDevice
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 前回のリクエストのレスポンスに含まれていた x-soracom-next-key ヘッダーの値。このパラメーターを指定することで、前回のリクエストの続きからリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 一回のリクエストで取得するエクスポート処理に関するデータの個数の最大値。なお、取得できるデータの個数は、指定した数を下回る可能性があります。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                (1) Initializing:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: initializing
                (2) Processing:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: processing
                    url: ""
                (3) Completed:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    expiryTime: 1663735622739
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: completed
                    url: https://sora-cam-devices-api-export-file-prod.s3.amazonaws.com/filename.jpg?...
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamImageExportInfo'
                type: array
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラで撮影した録画映像から静止画をエクスポートする処理の現在の状況をリストで取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices images list-exports-for-device
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: |
        クラウド常時録画で保存された録画映像から静止画を切り出してエクスポートする処理を開始します。エクスポート処理は非同期で処理されます。エクスポート処理の進捗や、エクスポートしたファイルの URL は、[`SoraCam:listSoraCamDeviceImageExports API`](/ja-jp/tools/api/reference/#/SoraCam/listSoraCamDeviceImageExports) で取得できます。URL には有効期限が設定されています。

        - URL を取得した時点で、ダウンロード状況にかかわらず動画の視聴可能時間 (1 か月 72 時間) が消費されます。
        - エクスポート処理の結果はキャッシュされません。同じ時間を 2 回エクスポートすると、動画の視聴可能時間 (1 か月 72 時間) は 2 回分が消費されます。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: exportSoraCamDeviceRecordedImage
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              imageFilters:
              - wide_angle_correction
              time: 1658400332905
            schema:
              $ref: '#/components/schemas/SoraCamImageExportSpecification'
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              example:
                deviceId: 7CDDDEADBEEF
                exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                operatorId: OP0012345678
                requestedTime: 1662973200000
                status: initializing
              schema:
                $ref: '#/components/schemas/SoraCamImageExportInfo'
          description: OK.
        "400":
          description: '`time` に指定した値が不適切です。'
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: クラウド常時録画で保存された録画映像から静止画をエクスポートする処理を開始する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices images export
  /sora_cam/devices/{device_id}/images/exports/{export_id}:
    get:
      description: |
        [`SoraCam:exportSoraCamDeviceRecordedImage API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedImage) で開始した「録画映像から静止画をエクスポートする処理」の現在の状況をリストで取得します。この API では、対象を 1 つのエクスポート処理に限定します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: getSoraCamDeviceExportedImage
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 対象のエクスポート処理のエクスポート ID
        in: path
        name: export_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              example:
                deviceId: 7CDDDEADBEEF
                expiryTime: 1663059600000
                exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                operatorId: OP0012345678
                requestedTime: 1662973200000
                status: completed
                url: https://soracom-sora-cam-devices-api-export-file-prod.s3.amazonaws.com/filename.jpg?...
              schema:
                $ref: '#/components/schemas/SoraCamImageExportInfo'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラ、またはエクスポート処理が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: クラウド常時録画で保存された録画映像から静止画をエクスポートする処理の現在の状況を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices images get-exported
  /sora_cam/devices/{device_id}/stream:
    get:
      description: |
        ストリーミング映像 (リアルタイム映像 / 録画映像) をダウンロードするための情報を取得します。具体的には、MPEG-DASH (Dynamic Adaptive Streaming over HTTP) と呼ばれるストリーミング方式に対応した URL の配列を取得できます。URL には有効期限が設定されています。

        - リアルタイム映像をストリーミング再生する場合は、以下の点に注意してください。
          - API を呼び出した時刻を基準に、300 秒 (5 分) のリアルタイム映像をストリーミング再生できる URL を取得できます。続きを視聴する場合は、もう一度 API を呼び出して、次の URL を取得してください。
          - URL を取得した時点で、視聴状況にかかわらず動画の視聴可能時間 (1 か月 72 時間) が 5 分消費されます。
        - 録画映像をストリーミング再生する場合は、以下の点に注意してください。
          - 最大 300 秒 (5 分) の録画映像をストリーミング再生できる URL を取得できます。
          - URL を取得した時点で、視聴状況にかかわらず動画の視聴可能時間 (1 か月 72 時間) が消費されます。

        **Warning**: リアルタイム映像は、クラウド常時録画で保存された録画映像から最新の映像を取得する機能です。したがって、リアルタイム映像を取得するには、クラウド常時録画ライセンスが必要です。ATOM アプリで再生できる「ライブ映像 (P2P)」は、リアルタイム映像とは異なる機能です。SORACOM API を利用して「ライブ映像 (P2P)」は取得できません。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: getSoraCamDeviceStreamingVideo
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: |
          録画映像の開始時刻 (UNIX 時間 (ミリ秒))

          - リアルタイム映像をダウンロードするための情報を取得するには、`from` と `to` をどちらも省略します。
        in: query
        name: from
        required: false
        schema:
          format: int64
          type: integer
      - description: |
          録画映像の終了時刻 (UNIX 時間 (ミリ秒))

          - リアルタイム映像をダウンロードするための情報を取得するには、`from` と `to` をどちらも省略します。
          - 一回の API 呼び出しで視聴できる時間は最大 300 秒 (5 分) です。`from` と `to` の差が、300 秒を超えないようにしてください。
        in: query
        name: to
        required: false
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              example:
                playList:
                - from: 1658400332905
                  to: 1658400532705
                  url: https://xxxxxxx.kinesisvideo.ap-northeast-1.amazonaws.com/dash/v1/getDASHManifest.mpd?SessionToken=foo
              schema:
                $ref: '#/components/schemas/SoraCamStreamingVideo'
          description: OK.
        "400":
          description: '`from` または `to` に指定した値が不適切です。'
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ストリーミング映像 (リアルタイム映像 / 録画映像) をダウンロードするための情報を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices get-streaming-video
  /sora_cam/devices/{device_id}/videos/exports:
    get:
      description: |
        [`SoraCam:exportSoraCamDeviceRecordedVideo API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedVideo) で開始した「録画映像をエクスポートする処理」の現在の状況をリストで取得します。この API では、対象を 1 台のソラカメ対応カメラに限定します。

        なお、対象を 1 台のソラカメ対応カメラに限定しないで、オペレーターが所有するすべてのソラカメ対応カメラにする場合は、[SoraCam:listSoraCamDeviceVideoExports API](#/SoraCam/listSoraCamDeviceVideoExports) を使用してください。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDeviceVideoExportsForDevice
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 前回のリクエストのレスポンスに含まれていた x-soracom-next-key ヘッダーの値。このパラメーターを指定することで、前回のリクエストの続きからリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 一回のリクエストで取得するエクスポート処理に関するデータの個数の最大値。なお、取得できるデータの個数は、指定した数を下回る可能性があります。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              example:
              - deviceId: 7CDDDEADBEEF
                exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                operatorId: OP0012345678
                status: initializing
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamVideoExportInfo'
                type: array
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラで撮影した録画映像をエクスポートする処理の現在の状況をリストで取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices videos list-exports-for-device
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: |
        クラウド常時録画で保存された録画映像を、ダウンロードできる方式 (mp4 ファイルを zip 形式で圧縮したファイル) でエクスポートする処理を開始します。エクスポート処理は非同期で処理されます。エクスポート処理の進捗や、エクスポートしたファイルの URL は、[`SoraCam:listSoraCamDeviceVideoExports API`](/ja-jp/tools/api/reference/#/SoraCam/listSoraCamDeviceVideoExports) で取得できます。URL には有効期限が設定されています。

        - ひとつの URL でエクスポートできる時間は最大 300 秒 (5 分) です。
        - URL を取得した時点で、ダウンロード状況にかかわらず動画の視聴可能時間 (1 か月 72 時間) が消費されます。
        - エクスポート処理の結果はキャッシュされません。同じ時間を 2 回エクスポートすると、動画の視聴可能時間 (1 か月 72 時間) は 2 回分が消費されます。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: exportSoraCamDeviceRecordedVideo
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              from: 1662962400000
              to: 1662962430000
            schema:
              $ref: '#/components/schemas/SoraCamVideoExportSpecification'
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              example:
                deviceId: 7CDDDEADBEEF
                exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                operatorId: OP0012345678
                requestedTime: 1662973200000
                status: initializing
              schema:
                $ref: '#/components/schemas/SoraCamVideoExportInfo'
          description: OK.
        "400":
          description: |
            - `from` または `to` に指定した値が不適切です。
            - 指定された時刻の範囲にはエクスポート可能な録画映像が見つかりません。
            - `Content-Type: application/json` ヘッダーが指定されていません。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: クラウド常時録画で保存された録画映像をエクスポートする処理を開始する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices videos export
  /sora_cam/devices/{device_id}/videos/exports/{export_id}:
    get:
      description: |
        [`SoraCam:exportSoraCamDeviceRecordedVideo API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedVideo) で開始した「録画映像をエクスポートする処理」の現在の状況をリストで取得します。この API では、対象を 1 つのエクスポート処理に限定します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: getSoraCamDeviceExportedVideo
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 対象のエクスポート処理のエクスポート ID
        in: path
        name: export_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              example:
                deviceId: 7CDDDEADBEEF
                expiryTime: 1663059600000
                exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                operatorId: OP0012345678
                requestedTime: 1662973200000
                status: completed
                url: https://soracom-sora-cam-devices-api-export-file-prod.s3.amazonaws.com/filename.zip?...
              schema:
                $ref: '#/components/schemas/SoraCamVideoExportInfo'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラ、またはエクスポート処理が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: クラウド常時録画で保存された録画映像をエクスポートする処理の現在の状況を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices videos get-exported
  /sora_cam/devices/images/exports:
    get:
      description: |
        [`SoraCam:exportSoraCamDeviceRecordedImage API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedImage) で開始した「録画映像から静止画をエクスポートする処理」の現在の状況をリストで取得します。この API では、対象をオペレーターが所有するすべてのデバイスにしたり、1 台のソラカメ対応カメラに限定したりできます。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDeviceImageExports
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。省略した場合はオペレーターが所有するすべてのデバイスが対象となります。
        in: query
        name: device_id
        required: false
        schema:
          type: string
      - description: 前回のリクエストのレスポンスに含まれていた x-soracom-next-key ヘッダーの値。このパラメーターを指定することで、前回のリクエストの続きからリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 一回のリクエストで取得するエクスポート処理に関するデータの個数の最大値。なお、取得できるデータの個数は、指定した数を下回る可能性があります。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              example:
              - deviceId: 7CDDDEADBEEF
                exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                operatorId: OP0012345678
                requestedTime: 1663649222739
                status: initializing
              - deviceId: 7CDDDEADBEEF
                exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                operatorId: OP0012345678
                requestedTime: 1663649222739
                status: processing
                url: ""
              - deviceId: 7CDDDEADBEEF
                expiryTime: 1663735622739
                exportId: 5ed62746-6c53-47e5-94e6-90697057cf5c
                operatorId: OP0012345678
                requestedTime: 1663649222739
                status: completed
                url: https://sora-cam-devices-api-export-file-prod.s3.amazonaws.com/filename.jpg?...
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamImageExportInfo'
                type: array
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラで撮影した録画映像から静止画をエクスポートする処理の現在の状況をリストで取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices images list-exports
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sora_cam/devices/videos/exports:
    get:
      description: |
        [`SoraCam:exportSoraCamDeviceRecordedVideo API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedVideo) で開始した「録画映像をエクスポートする処理」の現在の状況をリストで取得します。この API では、対象をオペレーターが所有するすべてのデバイスにしたり、1 台のソラカメ対応カメラに限定したりできます。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDeviceVideoExports
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。省略した場合はオペレーターが所有するすべてのデバイスが対象となります。
        in: query
        name: device_id
        required: false
        schema:
          type: string
      - description: 前回のリクエストのレスポンスに含まれていた x-soracom-next-key ヘッダーの値。このパラメーターを指定することで、前回のリクエストの続きからリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 一回のリクエストで取得するエクスポート処理に関するデータの個数の最大値。なお、取得できるデータの個数は、指定した数を下回る可能性があります。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              example:
                deviceId: 7CDDDEADBEEF
                expiryTime: 1663059600000
                exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                operatorId: OP0012345678
                requestedTime: 1662973200000
                status: completed
                url: https://soracom-sora-cam-devices-api-export-file-prod.s3.amazonaws.com/filename.zip?...
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamVideoExportInfo'
                type: array
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラで撮影した録画映像をエクスポートする処理の現在の状況をリストで取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices videos list-exports
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sora_cam/license_packs:
    get:
      description: 利用可能なライセンスパックの一覧を取得します。 現在、この API は日本カバレッジでのみ利用可能です。
      operationId: listSoraCamLicensePacks
      responses:
        "200":
          content:
            application/json:
              example:
              - id: CR7-SC
                name: Cloud Recording License (7 Days)
                quantity: 0
                salesChannel: SORACOM Inc.
              - id: CR14-SC
                name: Cloud Recording License (14 Days)
                quantity: 1
                salesChannel: SORACOM Inc.
              - id: CR30-SC
                name: Cloud Recording License (30 Days)
                quantity: 2
                salesChannel: SORACOM Inc.
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamLicensePackResponse'
                type: array
          description: ライセンスパックの一覧を取得しました。
        "400":
          description: リクエストが不正です。
      security:
      - api_key: []
        api_token: []
      summary: Soracom Cloud Camera Services のライセンスパックの一覧を取得します。
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam license-packs list
  /sora_cam/license_packs/{license_pack_id}/quantity:
    put:
      description: license_pack_id で指定されたライセンスパックのライセンス数を更新します。 ライセンス数に応じて月額費用が発生します。
        現在、この API は日本カバレッジでのみ利用可能です。
      operationId: updateSoraCamLicensePackQuantity
      parameters:
      - description: ライセンスパックの ID
        in: path
        name: license_pack_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoraCamLicensePackQuantityUpdatingRequest'
        description: ライセンス数の更新内容
        required: true
      responses:
        "204":
          description: ライセンス数を更新しました。
        "400":
          description: 更新リクエストが不正です。
      security:
      - api_key: []
        api_token: []
      summary: Soracom Cloud Camera Services のライセンス数を更新します。
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam license-packs update-quantity
  /soralets:
    get:
      description: Soralet の一覧を取得します。
      operationId: listSoralets
      parameters:
      - description: Sort order
        in: query
        name: sort
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: 一度のレスポンスに含まれる項目数の最大値
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現在のページで最後に取得された Soralet の識別子を指定します。このパラメータを指定することで、Soralet のリストの続きを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/Soralet'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Soralet の一覧を取得します。
      tags:
      - Soralet
      x-soracom-cli:
      - soralets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Soralet を作成します。
      operationId: createSoralet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSoraletRequest'
        description: request
        required: true
      responses:
        "201":
          description: 新しい Soralet が作成されました。
        "400":
          description: 指定された Soralet はすでに存在しているか、不正な soralet_id が指定されました。
      security:
      - api_key: []
        api_token: []
      summary: Soralet を作成します。
      tags:
      - Soralet
      x-soracom-cli:
      - soralets create
  /soralets/{soralet_id}:
    delete:
      description: Soralet を削除します。
      operationId: deleteSoralet
      parameters:
      - description: 削除したい Soralet の識別子
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定された Soralet が削除されました。
        "404":
          description: 指定された Soralet が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Soralet を削除します。
      tags:
      - Soralet
      x-soracom-cli:
      - soralets delete
    get:
      description: Soralet を取得します。
      operationId: getSoralet
      parameters:
      - description: 取得したい Soralet の識別子
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Soralet'
          description: OK.
        "404":
          description: 指定された Soralet が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Soralet を取得します。
      tags:
      - Soralet
      x-soracom-cli:
      - soralets get
  /soralets/{soralet_id}/logs:
    get:
      description: 指定された Soralet からのログメッセージの一覧を取得します。
      operationId: getSoraletLogs
      parameters:
      - description: Soralet の識別子
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: Sort order
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: 一度のレスポンスに含まれる項目数の最大値
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現在のページで最後に取得されたログの識別子を指定します。このパラメータを指定することで、ログのリストの続きを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/SoraletLog'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Soralet のログメッセージを取得します。
      tags:
      - Soralet
      x-soracom-cli:
      - soralets get-logs
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /soralets/{soralet_id}/test:
    post:
      description: 引数を指定して Soralet をテスト実行します。
      operationId: testSoralet
      parameters:
      - description: Soralet の識別子
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteSoraletRequest'
        description: 実行リクエスト
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ExecuteSoraletResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 引数を指定して Soralet をテスト実行します。
      tags:
      - Soralet
      x-soracom-cli:
      - soralets test
      - soralets exec
  /soralets/{soralet_id}/versions:
    get:
      description: Soralet のバージョン一覧を取得します。
      operationId: listSoraletVersions
      parameters:
      - description: バージョン一覧を取得したい Soralet の識別子
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: Sort order
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: 一度のレスポンスに含まれる項目数の最大値
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現在のページで最後に取得された Soralet の識別子を指定します。このパラメータを指定することで、Soralet のリストの続きを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/SoraletVersion'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Soralet のバージョン一覧を取得します。
      tags:
      - Soralet
      x-soracom-cli:
      - soralets list-versions
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: コードをアップロードし、新しいバージョンを作成します。
      operationId: uploadSoraletCode
      parameters:
      - description: コードのアップロード先の Soralet の識別子
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: アップロードするファイルの Content-Type。.wasm ファイルをアップロードする場合は `application/json`
          を指定してください。
        in: header
        name: content-type
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              format: binary
              type: string
        description: アップロードしたいファイルの内容
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/SoraletVersion'
          description: Successfully created a new version.
      security:
      - api_key: []
        api_token: []
      summary: コードをアップロードし、新しいバージョンを作成します。
      tags:
      - Soralet
      x-soracom-cli:
      - soralets upload
  /soralets/{soralet_id}/versions/{version}:
    delete:
      description: Soralet のバージョンを削除します。
      operationId: deleteSoraletVersion
      parameters:
      - description: Soralet の識別子
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: 削除したい Soralet のバージョン
        in: path
        name: version
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: 指定された Soralet のバージョンが削除されました。
        "404":
          description: 指定された Soralet のバージョンが見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Soralet のバージョンを削除します。
      tags:
      - Soralet
      x-soracom-cli:
      - soralets delete-version
  /stats/air/operators/{operator_id}/export:
    post:
      description: Operator が保有する全 Subscriber の通信量をファイルで取得する。取得対象の期間は from, to の unixtime
        で指定する。履歴の詳細度は月単位。ファイルの出力先は AWS S3。ファイルの出力形式は CSV。
      operationId: exportAirStats
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
        description: 出力するデータの期間
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Export Air Usage Report of All Subscribers
      tags:
      - Stats
      x-soracom-cli:
      - stats air export
  /stats/air/sims/{sim_id}:
    get:
      description: simId で指定した SIM の通信量履歴を取得する。
      operationId: getAirStatsOfSim
      parameters:
      - description: SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 集計対象時刻の始まりを UNIX 時間 (秒) で与える
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 集計対象時刻の終わりを UNIX 時間 (秒) で与える
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: 集計単位。minutes は最も細かい粒度で通信量履歴を出力します。ただし、デバイスが SORACOM プラットフォームに接続している間は、約
          5 分間隔で通信量が記録されます。
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AirStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Air Usage Report of SIM
      tags:
      - Stats
      x-soracom-cli:
      - stats air sims get
  /stats/air/subscribers/{imsi}:
    get:
      description: IMSI で指定した Subscriber の通信量履歴を取得する。
      operationId: getAirStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 集計対象時刻の始まりを unixtime で与える
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 集計対象時刻の終わりを unixtime で与える
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: 集計単位。minutes は最も細かい粒度で通信量履歴を出力します。ただし、デバイスが SORACOM プラットフォームに接続している間は、約
          5 分間隔で通信量が記録されます。
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AirStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Air Usage Report of Subscriber
      tags:
      - Stats
      x-soracom-cli:
      - stats air get
  /stats/beam/operators/{operator_id}/export:
    post:
      description: Operator が保有する全 Subscriber の SORACOM Beam 利用量履歴をファイルで取得する。取得対象の期間は
        from, to の unixtime で指定する。履歴の詳細度は月単位。ファイルの出力先は AWS S3。ファイルの出力形式は CSV。
      operationId: exportBeamStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
        description: 出力するデータの期間
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Export Beam Usage Report of All Subscribers
      tags:
      - Stats
      x-soracom-cli:
      - stats beam export
  /stats/beam/subscribers/{imsi}:
    get:
      description: IMSI で指定した Subscriber の SORACOM Beam 利用量履歴を取得する。
      operationId: getBeamStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 集計対象時刻の始まりを unixtime で与える
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 集計対象時刻の終わりを unixtime で与える
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: 集計単位。minutes は最も細かい粒度で利用量履歴を出力します。ただし、デバイスが SORACOM プラットフォームに接続している間は、約
          5 分間隔で利用量が記録されます。
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BeamStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Beam Usage Report of Subscriber
      tags:
      - Stats
      x-soracom-cli:
      - stats beam get
  /stats/funk/operators/{operator_id}/export:
    post:
      description: Operator が保有する全 Subscriber の SORACOM Funk 利用量履歴をファイルで取得する。取得対象の期間は
        from, to の unixtime で指定する。履歴の詳細度は月単位。ファイルの出力先は AWS S3。ファイルの出力形式は CSV。
      operationId: exportFunkStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
        description: 出力するデータの期間
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Export Funk Usage Report of All Subscribers
      tags:
      - Stats
      x-soracom-cli:
      - stats funk export
  /stats/funk/subscribers/{imsi}:
    get:
      description: IMSI で指定した Subscriber の SORACOM Funk 利用量履歴を取得する。
      operationId: getFunkStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 集計対象時刻の始まりを unixtime で与える
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 集計対象時刻の終わりを unixtime で与える
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: 集計単位。minutes は最も細かい粒度で利用量履歴を出力します。ただし、デバイスが SORACOM プラットフォームに接続している間は、約
          5 分間隔で利用量が記録されます。
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FunkStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Funk Usage Report of Subscriber
      tags:
      - Stats
      x-soracom-cli:
      - stats funk get
  /stats/funnel/operators/{operator_id}/export:
    post:
      description: Operator が保有する全 Subscriber の SORACOM Funnel 利用量履歴をファイルで取得する。取得対象の期間は
        from, to の unixtime で指定する。履歴の詳細度は月単位。ファイルの出力先は AWS S3。ファイルの出力形式は CSV。
      operationId: exportFunnelStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
        description: 出力するデータの期間
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Export Funnel Usage Report of All Subscribers
      tags:
      - Stats
      x-soracom-cli:
      - stats funnel export
  /stats/funnel/subscribers/{imsi}:
    get:
      description: IMSI で指定した Subscriber の SORACOM Funnel 利用量履歴を取得する。
      operationId: getFunnelStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 集計対象時刻の始まりを unixtime で与える
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 集計対象時刻の終わりを unixtime で与える
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: 集計単位。minutes は最も細かい粒度で利用量履歴を出力します。ただし、デバイスが SORACOM プラットフォームに接続している間は、約
          5 分間隔で利用量が記録されます。
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FunnelStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Funnel Usage Report of Subscriber
      tags:
      - Stats
      x-soracom-cli:
      - stats funnel get
  /stats/harvest/operators/{operator_id}:
    get:
      description: 指定された Operator の指定された年月における Harvest データの読み込みデータ通信量を byte 単位で取得します。
      operationId: getHarvestExportedDataStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: 年月を YYYYMM 形式で指定します。
        in: query
        name: year_month
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarvestExportedDataStatsResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Harvest の利用統計情報を取得します。
      tags:
      - Stats
      x-soracom-cli:
      - stats harvest get
  /stats/harvest/subscribers/{imsi}:
    get:
      description: IMSI で指定した Subscriber の SORACOM Harvest 利用量履歴を取得する。
      operationId: getHarvestStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 集計対象時刻の始まりを unixtime で与える
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 集計対象時刻の終わりを unixtime で与える
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: 集計単位。minutes は最も細かい粒度で利用量履歴を出力します。ただし、デバイスが SORACOM プラットフォームに接続している間は、約
          5 分間隔で利用量が記録されます。
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HarvestStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Harvest Usage Report of Subscriber
      tags:
      - Stats
      x-soracom-cli:
      - stats harvest get
  /stats/napter/audit_logs:
    get:
      description: 指定された年月における Napter 監査ログの読み込みデータ通信量を byte 単位で取得する。
      operationId: getNapterAuditLogsExportedDataStats
      parameters:
      - description: 年月を YYYYMM 形式で指定します。
        in: query
        name: year_month
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NapterAuditLogsExportedDataStatsResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Napter 監査ログの月次読み込みデータ量を取得する。
      tags:
      - Stats
      x-soracom-cli:
      - stats napter audit-logs get
  /subscribers:
    get:
      description: 条件にマッチする Subscriber のリストを返す。Subscriber の総数が 1 ページに収まらない場合は、レスポンス中に次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: listSubscribers
      parameters:
      - description: 検索対象にするタグの名前(完全一致)。
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件。
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: '検索対象にする status。`|`で区切って複数指定することができる。指定可能な値の一覧は以下のとおり: `active`,
          `inactive`, `ready`, `instock`, `shipped`, `suspended`, `terminated`'
        in: query
        name: status_filter
        required: false
        schema:
          type: string
      - description: '検索対象にする速度クラス。`|`で区切って複数指定することができる。指定可能な値の一覧は以下のとおり: `s1.minimum`,
          `s1.slow`, `s1.standard`, `s1.fast`'
        in: query
        name: speed_class_filter
        required: false
        schema:
          type: string
      - description: 検索対象にする製造番号。`|`で区切って複数指定することができる。指定された値で始まる製造番号を持つ Subscriber
          の一覧を返す。
        in: query
        name: serial_number_filter
        required: false
        schema:
          type: string
      - description: 取得する Subscriber の上限。ただし、返却される Subscriber の個数は指定された値を下回る可能性があります。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現ページで取得した最後の Subscriber の IMSI。このパラメータを指定することで次の Subscriber 以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscriber'
                type: array
          description: A list of subscribers
      security:
      - api_key: []
        api_token: []
      summary: List Subscribers
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}:
    get:
      description: 指定した Subscriber の情報を取得する。
      operationId: getSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 指定した Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Get Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers get
  /subscribers/{imsi}/activate:
    post:
      description: 指定した Subscriber のステータスを「使用中 (active)」に変更する。
      operationId: activateSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Activate Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers activate
  /subscribers/{imsi}/bundles:
    put:
      description: 指定した Subscriber にバンドルを設定する。
      operationId: putBundles
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                description: 設定するバンドル。以下のいずれかを指定します。
                enum:
                - D-300MB
                - DU-10GB
                - DU-50GB
                type: string
              type: array
        description: 設定するバンドルの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "400":
          description: 指定されたバンドルは、この Subscriber のサブスクリプションではサポートされていない
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Set Bundles to Subscriber.
      tags:
      - Subscriber
      x-sam-operationId: putBundles
      x-soracom-cli:
      - subscribers put-bundles
  /subscribers/{imsi}/data:
    get:
      description: 指定したサブスクライバーから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が 1 ページに収まらない場合は、次のページにアクセスするための
        URL を`Link`ヘッダに含めて返す。
      operationId: getDataFromSubscriber
      parameters:
      - description: データ取得対象のサブスクライバーの IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: Get data sent from a subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - data get
      - subscribers get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}/deactivate:
    post:
      description: 指定した Subscriber のステータスを「休止中 (inactive)」に変更する。
      operationId: deactivateSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Deactivate Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers deactivate
  /subscribers/{imsi}/delete_session:
    post:
      description: 指定した Subscriber のセッションを切断する。
      operationId: deleteSubscriberSession
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Session
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers delete-session
  /subscribers/{imsi}/disable_termination:
    post:
      description: 指定した Subscriber の解約プロテクションを設定する (解約できないようにする)。
      operationId: disableTermination
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Disable Termination of Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers disable-termination
  /subscribers/{imsi}/downlink/ping:
    post:
      description: 指定した Subscriber に ICMP ping リクエストを送信する。
      operationId: subscriberDownlinkPingToUserEquipment
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownlinkPingRequest'
        description: ping リクエストのオプション
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownlinkPingResponse'
          description: ping の結果
      security:
      - api_key: []
        api_token: []
      summary: Subscriber に対して ping リクエストを送信する。
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers downlink-ping
  /subscribers/{imsi}/enable_termination:
    post:
      description: 指定した Subscriber の解約プロテクションを解除する (解約できるようにする)。
      operationId: enableTermination
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Enable Termination of Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers enable-termination
  /subscribers/{imsi}/events/sessions:
    get:
      description: 指定した Subscriber に関する過去 32 日間のセッション履歴 (作成 / 変更 / 切断のイベント履歴) を返す。イベントの総数が
        1 ページに収まらない場合は、レスポンス中に次のページにアクセスするための URL を `Link` ヘッダに含めて返す。
      operationId: listSessionEvents
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: イベントの検索範囲時刻の始まり(unixtime)
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: イベントの検索範囲時刻の終わり(unixtime)
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: 取得するイベント数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現ページで取得した最後のイベントのタイムスタンプ。このパラメータを指定することで次のイベント以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionEvent'
                type: array
          description: A list of session events
      security:
      - api_key: []
        api_token: []
      summary: List Session Events
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers session-events
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}/register:
    post:
      description: オペレーターに Subscriber を登録する。
      operationId: registerSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSubscribersRequest'
        description: subscriber
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Subscriber 登録完了
      security:
      - api_key: []
        api_token: []
      summary: Register Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers register
  /subscribers/{imsi}/report_local_info:
    post:
      description: サブスクライバーに対し、SIM ローカル情報をレポートするように指示する。
      operationId: reportLocalInfo
      parameters:
      - description: 対象のサブスクライバーの IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: SIM ローカル情報レポートの指示に成功。Subscriber の情報は SIM からのレポートが成功した時点で非同期に更新される
        "400":
          description: Subscriber が SIM ローカル情報レポート機能に対応していない
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Triggers Subscriber to report SIM local info.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers report-local-info
  /subscribers/{imsi}/send_sms:
    post:
      description: 指定したサブスクライバー宛に SMS を送信する。
      operationId: sendSms
      parameters:
      - description: SMS 送信対象のサブスクライバーの IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsForwardingRequest'
        description: メッセージ本体とエンコーディングタイプからなる SMS 送信リクエスト
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsForwardingReport'
          description: SMS 送信を受け付け完了。メッセージに割り振られた ID を返す
        "400":
          description: 指定したサブスクライバーは SMS API をサポートしていない
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Send SMS to Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers send-sms
  /subscribers/{imsi}/set_expiry_time:
    post:
      description: 指定した Subscriber の有効期限とアクションを設定する。
      operationId: setExpiryTime
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpiryTime'
        description: 更新後の有効期限 (unixtime:ミリ秒単位) とアクション
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Update Expiry Time of Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-expiry-time
  /subscribers/{imsi}/set_group:
    post:
      description: 指定した Subscriber のグループを設定する。
      operationId: setGroup
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGroupRequest'
        description: Group（ID のみを含めばよい）
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Set Group to Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-group
  /subscribers/{imsi}/set_imei_lock:
    post:
      description: 指定した Subscriber の IMEI ロックを設定する。
      operationId: setImeiLock
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetImeiLockRequest'
        description: Subscriber に指定する IMEI lock の設定 （オンラインの Subscriber の現在の IMEI にロックするには
          IMEI は指定しなくてもよい）
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "400":
          description: IMEI 文字列が無効か、オフラインの Subscriber にも関わらず IMEI が指定されていない.
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Set IMEI lock configuration for Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-imei-lock
  /subscribers/{imsi}/set_to_standby:
    post:
      description: 指定した Subscriber のステータスを「利用開始待ち (standby)」に変更する。
      operationId: setSubscriberToStandby
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "400":
          description: 指定した Subscriber は「利用開始待ち (standby)」に対応していない
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Set Subscriber to standby mode.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-to-standby
  /subscribers/{imsi}/suspend:
    post:
      description: 指定した Subscriber のステータスを「利用中断中 (suspended)」に変更する。
      operationId: suspendSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Suspend Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers suspend
  /subscribers/{imsi}/tags:
    put:
      description: 指定した Subscriber のタグを追加 / 更新する。
      operationId: putSubscriberTags
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update Subscriber Tags
      tags:
      - Subscriber
      x-sam-operationId: putTags
      x-soracom-cli:
      - subscribers put-tags
  /subscribers/{imsi}/tags/{tag_name}:
    delete:
      description: 指定した Subscriber のタグを削除する。
      operationId: deleteSubscriberTag
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定した Subscriber あるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Subscriber Tag
      tags:
      - Subscriber
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - subscribers delete-tag
  /subscribers/{imsi}/terminate:
    post:
      description: 指定した Subscriber を解約する。
      operationId: terminateSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Terminate Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers terminate
  /subscribers/{imsi}/unset_expiry_time:
    post:
      description: 指定した Subscriber の有効期限を解除する。
      operationId: unsetExpiryTime
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定した Subscriber の有効期限の解除に成功
        "404":
          description: 指定した Subscriber が存在しないか、Subscriber に有効期限がない
      security:
      - api_key: []
        api_token: []
      summary: Delete Expiry Time of Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-expiry-time
  /subscribers/{imsi}/unset_group:
    post:
      description: 指定した Subscriber のグループ設定を解除する。
      operationId: unsetGroup
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しないか、Subscriber は Group に属していない
      security:
      - api_key: []
        api_token: []
      summary: Unset Group to Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-group
  /subscribers/{imsi}/unset_imei_lock:
    post:
      description: 指定した Subscriber の IMEI ロックを解除する。
      operationId: unsetImeiLock
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Unset IMEI lock configuration for Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-imei-lock
  /subscribers/{imsi}/update_speed_class:
    post:
      description: 指定した Subscriber の速度クラスを変更する。
      operationId: updateSpeedClass
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpeedClassRequest'
        description: speed_class
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Update Subscriber speed class
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers update-speed-class
  /subscribers/export:
    post:
      description: すべての Subscriber を CSV ファイルとしてエクスポートする
      operationId: exportSubscribers
      parameters:
      - description: エクスポート方法 (非同期, 同期)
        in: query
        name: export_mode
        required: false
        schema:
          default: sync
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: Subscriber のエクスポート先
      security:
      - api_key: []
        api_token: []
      summary: Export all subscribers.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers export
  /subscribers/msisdn/{msisdn}/send_sms:
    post:
      description: MSISDN で指定したサブスクライバー宛に SMS を送信する。
      operationId: sendSmsByMsisdn
      parameters:
      - description: SMS 送信対象のサブスクライバーの MSISDN
        in: path
        name: msisdn
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsForwardingRequest'
        description: メッセージ本体とエンコーディングタイプからなる SMS 送信リクエスト
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsForwardingReport'
          description: SMS 送信を受け付け完了。メッセージに割り振られた ID を返す
        "400":
          description: 指定したサブスクライバーは SMS API をサポートしていない
        "404":
          description: 指定した Subscriber が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Send SMS to Subscriber by MSISDN
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers send-sms-by-msisdn
  /subscribers/transfer_token/{token}:
    delete:
      description: Subscriber のオペレーター間移管トークンを削除し、移管をキャンセルする。
      operationId: deleteSubscriberTransferToken
      parameters:
      - description: token
        in: path
        name: token
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 削除を実行
        "404":
          description: トークンが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Subscribers Transfer Token
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers delete-transfer-token
  /subscribers/transfer_token/issue:
    post:
      description: Subscriber のオペレーター間移管用トークンを、移管先オペレーターにメールで送付する。
      operationId: issueSubscriberTransferToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueSubscriberTransferTokenRequest'
        description: 移管先オペレーターのメールアドレス、オペレーターID、移管対象の IMSI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueSubscriberTransferTokenResponse'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Issue Subscribers Transfer Token
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers issue-transfer-token
  /subscribers/transfer_token/verify:
    post:
      description: Subscriber 移管用のトークンを確認して、移管を実施する。この API は移管先の Operator で呼び出しを行う。
      operationId: verifySubscriberTransferToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifySubscriberTransferTokenRequest'
        description: 移管先に送付されたトークン
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifySubscriberTransferTokenResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Verify Subscriber Transfer Token
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers verify-transfer-token
  /virtual_private_gateways:
    get:
      description: VPG の一覧を返す
      operationId: listVirtualPrivateGateways
      parameters:
      - description: VPG についた Tag 名。完全一致する Tag 名が検索対象となる。tag_name を指定した場合、tag_value
          が必須。
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: VPG についた Tag の値。
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件。
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: レスポンス 1 ページあたりの最大数
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現ページで取得した最後の Group の ID。このパラメータを指定することで次の VPG から始まるリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualPrivateGateway'
                type: array
          description: VPG の一覧
      security:
      - api_key: []
        api_token: []
      summary: List Virtual Private Gateways
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: VPG を新規作成する
      operationId: createVirtualPrivateGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVirtualPrivateGatewayRequest'
        description: 作成対象の VPG の情報を含むリクエスト
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create Virtual Private Gateway
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create
  /virtual_private_gateways/{vpg_id}:
    get:
      description: 指定された VPG の情報を取得する
      operationId: getVirtualPrivateGateway
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: FIXME
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Get Virtual Private Gateway
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg get
  /virtual_private_gateways/{vpg_id}/gate/close:
    post:
      description: 指定した VPG で SORACOM Gate を無効化し、Gate を閉じる
      operationId: closeGate
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: SORACOM Gate の無効化が完了
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Close SORACOM Gate.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg close-gate
  /virtual_private_gateways/{vpg_id}/gate/disable_privacy_separator:
    post:
      description: 指定された VPG に対して SORACOM Gate のプライバシーセパレーター機能を無効にする。これにより Gate D2D
        機能を有効化する。
      operationId: disableGatePrivacySeparator
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          format: VpgId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: プライバシーセパレーター機能の無効化に成功
        "404":
          description: 指定された VPG が存在しない
      security:
      - api_key: []
        api_token: []
      summary: 指定された VPG に対して SORACOM Gate のプライバシーセパレーター機能を無効にする。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg disable-gate-privacy-separator
  /virtual_private_gateways/{vpg_id}/gate/enable_privacy_separator:
    post:
      description: 指定された VPG に対して SORACOM Gate のプライバシーセパレーター機能を有効にする。これにより Gate D2D
        機能を無効化する。
      operationId: enableGatePrivacySeparator
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          format: VpgId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: プライバシーセパレーター機能の有効化に成功
        "404":
          description: 指定された VPG が存在しない
      security:
      - api_key: []
        api_token: []
      summary: 指定された VPG に対して SORACOM Gate のプライバシーセパレーター機能を有効にする。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg enable-gate-privacy-separator
  /virtual_private_gateways/{vpg_id}/gate/open:
    post:
      description: 指定した VPG で SORACOM Gate を有効化し、Gate を開く
      operationId: openGate
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenGateRequest'
        description: オプショナルな Gate の設定パラメータ。
      responses:
        "200":
          description: SORACOM Gate の有効化が完了
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Open SORACOM Gate
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg open-gate
  /virtual_private_gateways/{vpg_id}/gate/peers:
    get:
      description: VPG に登録された Gate Peer の一覧を取得する
      operationId: listGatePeers
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GatePeer'
                type: array
          description: 正しく VPG に登録された Gate Peer のリストが取得できた
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: List VPG Gate peers
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-gate-peers
    post:
      description: VPG に Gate Peer を登録する
      operationId: registerGatePeer
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterGatePeerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatePeer'
          description: VPG に Gate Peer の登録が完了した
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Register VPG Gate Peer
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg register-gate-peer
  /virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address}:
    delete:
      description: Gate Peer を VPG から登録解除する
      operationId: unregisterGatePeer
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 対象の Peer の ID
        in: path
        name: outer_ip_address
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Gate Peer の登録解除に成功
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG あるいは Peer は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Unregister VPG Gate Peer
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unregister-gate-peer
  /virtual_private_gateways/{vpg_id}/ip_address_map:
    get:
      description: 指定された VPG の IP アドレスマップのエントリーを取得する
      operationId: listVirtualPrivateGatewayIpAddressMapEntries
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IpAddressMapEntry'
                type: array
          description: IP アドレスのリスト取得に成功
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG あるいは Peer は存在しない
      security:
      - api_key: []
        api_token: []
      summary: List VPG IP address map entries
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-ip-address-map-entries
    post:
      description: VPG の IP アドレスマップのエントリーを追加する
      operationId: putVirtualPrivateGatewayIpAddressMapEntry
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutIpAddressMapEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAddressMapEntry'
          description: IP アドレスマップのエントリー追加に成功
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Put VPG IP address map entry
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg put-ip-address-map-entry
  /virtual_private_gateways/{vpg_id}/ip_address_map/{key}:
    delete:
      description: VPG の IP アドレスマップからエントリーを削除する
      operationId: deleteVirtualPrivateGatewayIpAddressMapEntry
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 対象の Key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAddressMapEntry'
          description: IP アドレスマップのエントリー削除に成功
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG あるいは Peer は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete VPG IP address map entry
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-ip-address-map-entry
  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers:
    post:
      description: Junction ミラーリング peer を追加します。
      operationId: createMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JunctionMirroringPeer'
        description: ミラーリング peer に関する情報
        required: true
      responses:
        "201":
          description: ミラーリング peer が作成または更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction ミラーリング peer を追加します。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-mirroring-peer
  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr}:
    delete:
      description: Junction ミラーリング peer を削除します。
      operationId: deleteMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 削除したいミラーリング peer の IP アドレス
        in: path
        name: ipaddr
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ミラーリング peer が削除されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction ミラーリング peer を削除します。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-mirroring-peer
    put:
      description: Junction ミラーリング peer を更新します。
      operationId: updateMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 更新したいミラーリング peer の IP アドレス
        in: path
        name: ipaddr
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AttributeUpdate'
              type: array
        description: 更新する属性のリスト
        required: true
      responses:
        "200":
          description: ミラーリング peer の情報が更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction ミラーリング peer を更新します。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg update-mirroring-peer
  /virtual_private_gateways/{vpg_id}/junction/set_inspection:
    post:
      description: Junction インスペクション機能の設定を行います。
      operationId: setInspectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JunctionInspectionConfiguration'
        description: インスペクション設定内容
        required: true
      responses:
        "200":
          description: 設定内容が追加または更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction インスペクション機能の設定を行います。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-inspection
  /virtual_private_gateways/{vpg_id}/junction/set_redirection:
    post:
      description: Junction リダイレクション機能の設定を行います。
      operationId: setRedirectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JunctionRedirectionConfiguration'
        description: リダイレクション設定内容
        required: true
      responses:
        "200":
          description: 設定内容が追加または更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction リダイレクション機能の設定を行います。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-redirection
  /virtual_private_gateways/{vpg_id}/junction/unset_inspection:
    post:
      description: Junction インスペクション機能の設定を解除します。
      operationId: unsetInspectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 設定が解除されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction インスペクション機能の設定を解除します。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unset-inspection
  /virtual_private_gateways/{vpg_id}/junction/unset_redirection:
    post:
      description: Junction リダイレクション機能の設定を行います。
      operationId: unsetRedirectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 設定が解除されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction リダイレクション機能の設定を行います。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unset-redirection
  /virtual_private_gateways/{vpg_id}/packet_capture_sessions:
    get:
      description: 指定された VPG のパケットキャプチャセッションのリストを取得する。
      operationId: listPacketCaptureSessions
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 現ページで取得した最後のパケットキャプチャセッション。このパラメータを指定することで次のパケットキャプチャセッション以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          default: "null"
          type: string
      - description: 取得するパケットキャプチャセッションの上限
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PacketCaptureSession'
                type: array
          description: 指定された VPG のパケットキャプチャセッションのリスト
        "400":
          description: Failed to list packet capture sessions associated with the
            VPG
        "404":
          description: 指定された VPG が存在しない
      security:
      - api_key: []
        api_token: []
      summary: List Packet Capture Sessions
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-packet-capture-sessions
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 指定された VPG に対するパケットキャプチャセッションを作成する。
      operationId: createPacketCaptureSession
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PacketCaptureSessionRequest'
        description: パケットキャプチャセッションリクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 指定された VPG に対するパケットキャプチャセッションの作成が失敗した
        "400":
          description: 指定された VPG に対するパケットキャプチャセッションの作成が失敗した
        "404":
          description: 指定された VPG が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Create Packet Capture Session
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-packet-capture-session
  /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}:
    delete:
      description: 指定した VPG 対するパケットキャプチャを削除する。
      operationId: deletePacketCaptureSession
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 対象のパケットキャプチャセッション ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 削除されたパケットキャプチャセッションの情報
        "400":
          description: 指定されたパケットキャプチャセッションの削除に失敗
        "404":
          description: 指定されたパケットキャプチャセッションが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete Packet Capture Session
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-packet-capture-session
    get:
      description: 指定した VPG に対するパケットキャプチャを取得する。
      operationId: getPacketCaptureSession
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: パケットキャプチャセッションリクエスト
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 指定されたパケットキャプチャセッション
        "404":
          description: 指定されたパケットキャプチャセッションが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Get Packet Capture Session
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg get-packet-capture-session
  /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}/stop:
    post:
      description: 指定した SIM に対するパケットキャプチャを停止する。
      operationId: stopPacketCaptureSession
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 対象のパケットキャプチャセッション ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 停止されたパケットキャプチャセッションの情報
        "400":
          description: The packet capture session can be stopped only when its status
            is CAPTURING
        "404":
          description: 指定されたパケットキャプチャセッションが存在しない
        "500":
          description: 指定されたパケットキャプチャセッションが停止できなかった
      security:
      - api_key: []
        api_token: []
      summary: Stop Packet Capture Session
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg stop-packet-capture-session
  /virtual_private_gateways/{vpg_id}/set_routing_filter:
    post:
      description: VPG の Outbound ルーティングフィルタを設定する
      operationId: setRoutingFilter
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoutingFilterEntry'
              type: array
        description: ルーティングフィルタエントリのリスト
        required: true
      responses:
        "200":
          description: ルーティングフィルタが正しく設定された
        "400":
          description: 引数が不正
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Sets Virtual Private Gateway outbound routing filter.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-routing-filter
  /virtual_private_gateways/{vpg_id}/terminate:
    post:
      description: 指定された VPG を Terminate する
      operationId: terminateVirtualPrivateGateway
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 指定された VPG の Terminate 作業を開始
        "400":
          description: 指定された VPG の Terminate できない理由が存在
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Terminate Virtual Private Gateway
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg terminate
  /virtual_private_gateways/{vpg_id}/vpc_peering_connections:
    post:
      description: 指定された VPG に VPC Peering Connection を作成
      operationId: createVpcPeeringConnection
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVpcPeeringConnectionRequest'
        description: 作成対象の VPC Peering Connection
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVpcPeeringConnectionRequest'
          description: 作成された VPC Peering Connection
        "404":
          description: 指定された VPC Peering Connection は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Create VPC Peering Connection
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-vpc-peering-connection
  /virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id}:
    delete:
      description: 指定された VPC Peering Connection を削除
      operationId: deleteVpcPeeringConnection
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 削除対象の VPC Peering Connection の ID
        in: path
        name: pcx_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定された VPC Peering Connection の削除完了
        "404":
          description: 指定された VPC Peering Connection は存在しない
      security:
      - api_key: []
        api_token: []
      summary: Delete VPC Peering Connection
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-vpc-peering-connection
  /volume_discounts:
    get:
      description: 契約済みの長期利用割引リストを返します。
      operationId: listVolumeDiscounts
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListVolumeDiscountResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List long term discounts.
      tags:
      - Payment
      x-soracom-cli:
      - volume-discounts list
    post:
      description: 新規で長期利用割引の見積もりの作成を行います。orderId を/confirm に PUT すると発注が完了します。(現時点では、長期利用割引は
        plan-D バンドルなし、plan-K でのみ利用できます。)
      operationId: createVolumeDiscountQuotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEstimatedVolumeDiscountRequest'
        description: 長期割引契約詳細
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EstimatedVolumeDiscountModel'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create long term discount quotation.
      tags:
      - Order
      x-soracom-cli:
      - volume-discounts create
  /volume_discounts/{contract_id}:
    get:
      description: 契約済みの長期利用割引を返します。
      operationId: getVolumeDiscount
      parameters:
      - description: contract_id
        in: path
        name: contract_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetVolumeDiscountResponse'
          description: OK.
        "400":
          description: 長期利用割引が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: Get long term discount.
      tags:
      - Payment
      x-soracom-cli:
      - volume-discounts get
  /volume_discounts/{order_id}/confirm:
    put:
      description: 与信を実施し、問題ない場合に発注を確定します。
      operationId: confirmVolumeDiscountOrder
      parameters:
      - description: 発注 ID
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetVolumeDiscountResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Confirm long term discount order.
      tags:
      - Order
      x-soracom-cli:
      - volume-discounts confirm
  /volume_discounts/available_discounts:
    get:
      description: 購入可能な長期利用割引のリストを返します。
      operationId: listAvailableDiscounts
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AvailableLongTermDiscountResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List available long term discounts.
      tags:
      - Order
      x-soracom-cli:
      - volume-discounts available-discounts
components:
  examples:
    APITokenCredentials:
      value:
        credentials:
          token: sample_token
        type: api-token-credentials
    AWSCredentials:
      value:
        credentials:
          accessKeyId: sampleAccessKeyId
          secretAccessKey: sampleSecret
        type: aws-credentials
    AzureCredentials:
      value:
        credentials:
          key: your_key
          policyName: your_policy_name
        type: azure-credentials
    AzureIoTCredentials:
      value:
        credentials:
          sharedAccessKey: sample_access_key
          sharedAccessKeyName: sample
        type: azureIoT-credentials
    EsrijCredentials:
      value:
        credentials:
          refererUrl: https://example.com
        type: esrij-credentials
    GoogleIoTCredentials:
      value:
        credentials:
          algorithm: RS256
          deviceId: sample_device
          privateKey: your_private_key
          projectId: sample_projectID
          region: asia-east1
          registryId: sample
        type: googleIoT-credentials
    GoogleServiceAccountJson:
      value:
        credentials:
          credentials: '{"sample": "value"}'
        type: google-service-account-json
    IAMRoleCredentials:
      value:
        credentials:
          externalId: your_external_id
          roleArn: sample_role
        type: aws-iam-role-credentials
    InfoteriaPlatioCredentials:
      value:
        credentials:
          secretToken: sample_secret
          tokenId: sample_token
        type: infoteria-platio-credentials
    KiiThingifCredentials:
      value:
        credentials:
          app_id: sample_app
          app_key: sample_key
          client_id: sample_id
          client_secret: sample_secret
        type: kii-thingif-credentials
    LandlogCredentials:
      value:
        credentials:
          client_id: sample_id
          client_secret: sample_secret
        type: landlog-credentials
    MmcloudCredentials:
      value:
        credentials:
          commandcode: sample_code
          customerid: sample_customer
          machineid: sample_id
          machineidtype: sample_type
        type: mmcloud-credentials
    MockmockDatarecorderCredentials:
      value:
        credentials:
          ca: sample_ca
          cert: sample_cert
          key: sample_key
        type: mockmock-datarecorder-credentials
    MotionboardCredentials:
      value:
        credentials:
          authkey: sample_auth
          template: temple_temp
          tenant: sample_tenant
        type: motionboard-credentials
    OptimCloudCredentials:
      value:
        credentials:
          client_id: sample_client
          client_secret: sample_secret
        type: optim-cloud-IoT-OS-credentials
    PreSharedKey:
      value:
        credentials:
          key: sample_key
        type: psk
    PubnubCredentials:
      value:
        credentials:
          pubKey: sample
          subKey: sample_sub
        type: pubnub-credentials
    SensorcorpusCredentials:
      value:
        credentials:
          session_code: sample_code
        type: sensorcorpus-credentials
    UsernamePasswordCredentials:
      value:
        credentials:
          password: sample_pass
          username: sample_user
        type: username-password-credentials
    WatsonIoTCredentials:
      value:
        credentials:
          authToken: sample_token
          deviceId: sample_id
          deviceType: sample_type
        type: watsonIoT-credentials
    X509Certificate:
      value:
        credentials:
          ca: sample_ca
          cert: sample_cert
          key: sample_key
        type: x509
  requestBodies:
    CreateAndUpdateCredentialsModel:
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'
      description: credentials
      required: true
    DeviceObjectModel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeviceObjectModel'
        application/xml:
          schema:
            $ref: '#/components/schemas/DeviceObjectModel'
      description: Device object model definition in either XML or JSON format.
      required: true
    ExpiryTime:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExpiryTime'
      description: 'Expiry time after the update (unixtime: in milliseconds).'
      required: true
    Group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Group'
      description: Group (may include ID only).
      required: true
    LagoonPlanChangingRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LagoonPlanChangingRequest'
      description: req
      required: true
    MFAAuthenticationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MFAAuthenticationRequest'
      description: request
      required: true
  schemas:
    APIAuditLogEntry:
      properties:
        apiKind:
          description: 'API 種別 (例: `/v1/auth`)。'
          type: string
        operatorId:
          description: API を呼び出したオペレーターID。
          type: string
        remoteIpAddress:
          description: API の呼び出し元 IP アドレス。
          type: string
        requestPath:
          description: リクエストされた API のパス。
          type: string
        requestedTimeEpochMs:
          description: API が呼び出された時刻。この値はページネーションのために `last_evaluated_key` リクエストパラメーターに利用することができます。
          format: int64
          type: integer
        userName:
          description: API を呼び出した SAM ユーザー名。もしこの値が空の場合は呼び出しユーザーは root ユーザーです。
          type: string
      type: object
    APICallError:
      properties:
        errorMessage:
          $ref: '#/components/schemas/APICallErrorMessage'
        httpStatus:
          format: int32
          type: integer
      type: object
    APICallErrorMessage:
      properties:
        code:
          description: エラーコード
          type: string
        message:
          description: エラーメッセージ。リクエスト時に X-Soracom-Lang ヘッダーに言語(en,ja)を設定するとその言語のメッセージがセットされます。
          type: string
      required:
      - code
      - message
      type: object
    ActionConfig:
      properties:
        properties:
          $ref: '#/components/schemas/ActionConfigProperty'
        type:
          enum:
          - ChangeSpeedClassAction
          - InvokeAWSLambdaAction
          - ExecuteWebRequestAction
          - SendMailAction
          - SendMailToOperatorAction
          - ActivationAction
          - DeactivationAction
          - StandbyAction
          - SuspendAction
          type: string
      required:
      - properties
      - type
      type: object
    ActionConfigProperty:
      properties:
        accessKey:
          description: InvokeAWSLambdaAction の時のみ有効
          type: string
        body:
          description: ExecuteWebRequestAction の時のみ有効(任意)
          type: string
        contentType:
          description: ExecuteWebRequestAction の時のみ有効
          type: string
        endpoint:
          description: InvokeAWSLambdaAction の時のみ有効
          type: string
        executionDateTimeConst:
          description: executionDateTimeConst で指定したタイミングから指定分後に実行
          enum:
          - IMMEDIATELY
          - BEGINNING_OF_NEXT_MONTH
          - BEGINNING_OF_NEXT_DAY
          - AFTER_ONE_DAY
          - NEVER
          type: string
        executionOffsetMinutes:
          description: Run in the minutes after the timing of executionDateTimeConst
          type: string
        functionName:
          description: InvokeAWSLambdaAction の時のみ有効
          type: string
        headers:
          description: ExecuteWebRequestAction の時のみ有効(任意)
          type: object
        httpMethod:
          description: ExecuteWebRequestAction の時のみ有効
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          type: string
        message:
          description: SendMailAction, SendMailToOperatorAction の時のみ有効
          type: string
        parameter1:
          description: InvokeAWSLambdaAction の時のみ有効
          type: string
        parameter2:
          description: InvokeAWSLambdaAction の時のみ有効
          type: string
        parameter3:
          description: InvokeAWSLambdaAction の時のみ有効
          type: string
        parameter4:
          description: InvokeAWSLambdaAction の時のみ有効
          type: string
        parameter5:
          description: InvokeAWSLambdaAction の時のみ有効
          type: string
        secretAccessKey:
          description: InvokeAWSLambdaAction の時のみ有効
          type: string
        speedClass:
          description: ChangeSpeedClassAction の時のみ有効
          enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
          - s1.4xfast
          type: string
        title:
          description: SendMailAction, SendMailToOperatorAction の時のみ有効
          type: string
        to:
          description: SendMailAction の時のみ有効
          type: string
        url:
          description: 接続先 URL とパラメーター ExecuteWebRequestAction の時のみ有効
          type: string
      required:
      - executionDateTimeConst
      type: object
    AirStatsResponse:
      properties:
        dataTrafficStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/DataTrafficStats'
          type: object
        date:
          description: 日時 (協定世界時 (UTC))
          type: string
        unixtime:
          format: int64
          type: integer
      type: object
    ArcCredentialAttachRequest:
      properties:
        arcClientPeerPublicKey:
          description: if this parameter is missing, the sever generates keypair
          type: string
      type: object
    ArcCredentialAttachResponse:
      properties:
        arcClientPeerPrivateKey:
          type: string
        arcClientPeerPublicKey:
          type: string
      type: object
    ArcCredentialRenewRequest:
      properties:
        arcClientPeerPublicKey:
          description: SIM に付与する Arc クライアントの公開鍵。もしこの値が空の場合はサーバーがキーペアを生成します。
          type: string
      type: object
    ArcCredentialRenewResponse:
      properties:
        arcClientPeerPrivateKey:
          type: string
        arcClientPeerPublicKey:
          type: string
      type: object
    ArcSessionCreateResponse:
      properties:
        arcAllowedIPs:
          items:
            type: string
          type: array
        arcClientPeerIpAddress:
          type: string
        arcClientPeerPublicKey:
          type: string
        arcServerEndpoint:
          type: string
        arcServerPeerPublicKey:
          type: string
      type: object
    ArcSessionStatus:
      properties:
        arcAllowedIPs:
          items:
            type: string
          type: array
        arcClientPeerIpAddress:
          type: string
        arcClientPeerPublicKey:
          type: string
        arcServerEndpoint:
          type: string
        arcServerPeerPublicKey:
          type: string
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        lastUpdatedAt:
          format: int64
          type: integer
        vpgId:
          type: string
      type: object
    AttachRoleRequest:
      properties:
        roleId:
          type: string
      type: object
    AttributeUpdate:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    AuthKeyResponse:
      properties:
        authKeyId:
          type: string
        createDateTime:
          format: int64
          type: integer
        lastUsedDateTime:
          format: int64
          type: integer
      type: object
    AuthRequest:
      properties:
        authKey:
          type: string
        authKeyId:
          type: string
        email:
          type: string
        mfaOTPCode:
          type: string
        operatorId:
          type: string
        password:
          type: string
        tokenTimeoutSeconds:
          default: 86400
          format: int64
          maximum: 172800
          type: integer
        userName:
          type: string
      type: object
    AuthResponse:
      properties:
        apiKey:
          example: api-abcde123-45fg-hij6-7890-klmno12345pq
          type: string
        operatorId:
          example: OPXXXXXXXXXX
          type: string
        token:
          example: abcde12345fghij67890klmno12345pqrst67890uvwxy12345abcde67890fghi...
          type: string
        userName:
          example: SORACOMAPI
          type: string
      type: object
    AvailableLongTermDiscountModel:
      properties:
        contractTermMonth:
          default: 12
          description: 契約月数
          format: int32
          type: integer
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        taxIncludedUnitPrice:
          description: 税込単価
          format: double
          type: number
        unitPrice:
          description: 単価
          format: double
          type: number
        volumeDiscountPaymentType:
          description: お支払い方法
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: 料金計算方法
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      type: object
    AvailableLongTermDiscountResponse:
      properties:
        availableLongTermDiscounts:
          description: 購入可能な長期利用割引のリスト
          items:
            $ref: '#/components/schemas/AvailableLongTermDiscountModel'
          type: array
      type: object
    BeamStatsResponse:
      properties:
        beamStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/SoracomBeamStats'
          type: object
        date:
          type: string
        unixtime:
          format: int64
          type: integer
      type: object
    Capabilities:
      properties:
        data:
          description: |
            - `true`: データ通信あり
            - `false`: データ通信なし
          type: boolean
        sms:
          description: |
            - `true`: SMS あり
            - `false`: SMS なし
          type: boolean
      type: object
    Cell:
      properties:
        ci:
          description: The Cell Identity (for 2G and 3G networks), a 16 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 4.3)
          type: integer
        eci:
          description: The E-UTRAN Cell Identifier (for LTE networks), a 28 bit value
            represented in decimal form as a long. (See 3GPP TS 23.003 19.6)
          type: integer
        lac:
          description: The Location Area Code (for 2G and 3G networks), a 16 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 4.1)
          type: integer
        mcc:
          description: The Mobile Country Code, a 3 digit number.
          type: integer
        mnc:
          description: The Mobile Network Code, a 2 or 3 digit number. If the value
            returned is only 1 digit in length, then you should prepend the value
            with a leading zero.
          type: integer
        rac:
          description: The Routing Area Code (for 2G and 3G networks), an 8 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 4.2)
          type: integer
        radioType:
          description: The Radio Access Technology or type of network that the device
            is connected to. Possible values are "gsm" for 2G or 3G networks, or "lte"
            for LTE networks. Unfortunately, it is not possible to differentiate 2G
            from 3G, or LTE from LTE Cat-M1.
          type: string
        sac:
          description: The Service Area Code (for 2G and 3G networks), a 16 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 12.5)
          type: integer
        tac:
          description: The Tracking Area Code (for LTE networks), a 16 bit value represented
            in decimal form as an integer. (See 3GPP TS 23.003 19.4.2.3)
          type: integer
      type: object
    CellIdentifier:
      properties:
        cid:
          type: string
        eci:
          type: string
        ecid:
          type: string
        identifier:
          description: リクエストとそれに対する結果を結びつけるための識別子。オプショナルです。
          type: string
        lac:
          type: string
        mcc:
          type: string
        mnc:
          type: string
        tac:
          type: string
      type: object
    CellLocation:
      properties:
        avg_strength:
          description: セルで観測された平均の信号強度。dBm 単位の整数値。
          format: int32
          type: integer
        created:
          description: このレコードが最初に作られたときのタイムスタンプ。
          format: date-time
          type: string
        exact:
          description: セルの位置情報が測定値から推定されたもので今後予告なく変わる可能性のあるもの (`0`) か、信頼できる情報源から得られた確定した情報か
            (`1`)。
          format: int32
          type: integer
        lat:
          description: 推定座標の緯度
          format: double
          type: number
        lon:
          description: 推定座標の経度
          format: double
          type: number
        range:
          description: 基地局のエリアの範囲（推定座標からの半径。メートル単位）。測定値から推定された値の場合と、信頼できる情報源から得た値の場合がある。
          format: int32
          type: integer
        samples:
          description: 推定座標、範囲、平均信号強度を計算するために使われた測定値の総数。
          format: int32
          type: integer
        updated:
          description: このレコードが最後に更新されたときのタイムスタンプ。
          format: date-time
          type: string
      type: object
    CompanyInformationModel:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        companyName:
          type: string
        contactPersonName:
          type: string
        countryCode:
          type: string
        department:
          type: string
        phoneNumber:
          type: string
        state:
          type: string
        vatIdentificationNumber:
          type: string
        zipCode:
          type: string
      required:
      - companyName
      - countryCode
      - zipCode
      - department
      - contactPersonName
      - phoneNumber
      type: object
    ContractUpdatedResponse:
      properties:
        contractDetail:
          type: object
        contractName:
          type: string
      type: object
    ContractUpdatingRequest:
      properties:
        contractDetail:
          type: object
        contractName:
          type: string
      type: object
    CouponResponse:
      properties:
        amount:
          description: クーポン額
          format: double
          type: number
        balance:
          description: 残高
          format: double
          type: number
        billItemName:
          description: 対象課金アイテム
          type: string
        couponCode:
          description: クーポンコード
          type: string
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        expiryYearMonth:
          description: 有効期限
          format: yyyyMM
          type: string
        orderId:
          description: 発注 ID
          type: string
      type: object
    CreateAndUpdateCredentialsModel:
      properties:
        credentials:
          type: object
        description:
          type: string
        type:
          enum:
          - aws-credentials
          - azure-credentials
          - psk
          - x509
          type: string
      type: object
    CreateEstimatedCouponRequest:
      properties:
        amount:
          description: クーポン額
          format: double
          type: number
      required:
      - amount
      type: object
    CreateEstimatedOrderRequest:
      properties:
        orderItemList:
          description: 発注商品リスト
          items:
            $ref: '#/components/schemas/OrderItemModel'
          type: array
        shippingAddressId:
          description: 商品発送先 ID
          type: string
      type: object
    CreateEstimatedVolumeDiscountRequest:
      properties:
        contractTermMonth:
          default: 12
          description: 契約月数
          format: int32
          type: integer
        quantity:
          description: 数量
          format: int32
          type: integer
        startDate:
          description: 適用開始日
          example: yyyyMMdd
          type: string
        volumeDiscountPaymentType:
          description: お支払い方法
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: 料金計算方法
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      required:
      - volumeDiscountType
      - volumeDiscountPaymentType
      - contractTermMonth
      - quantity
      type: object
    CreateEventHandlerRequest:
      properties:
        actionConfigList:
          items:
            $ref: '#/components/schemas/ActionConfig'
          type: array
        description:
          type: string
        name:
          type: string
        ruleConfig:
          $ref: '#/components/schemas/RuleConfig'
        status:
          enum:
          - inactive
          - active
          type: string
        targetGroupId:
          type: string
        targetImsi:
          type: string
        targetOperatorId:
          type: string
        targetSimId:
          type: string
      required:
      - actionConfigList
      - ruleConfig
      - status
      type: object
    CreateGroupRequest:
      properties:
        tags:
          $ref: '#/components/schemas/TagSet'
      type: object
    CreateOrUpdateRoleRequest:
      properties:
        description:
          type: string
        permission:
          description: Permission の JSON
          type: string
      required:
      - permission
      type: object
    CreatePortMappingRequest:
      properties:
        destination:
          $ref: '#/components/schemas/PortMappingDestination'
        duration:
          description: Specify the duration, in seconds, that remote access should
            be enabled.
          type: number
        source:
          $ref: '#/components/schemas/PortMappingSource'
        tlsRequired:
          description: Specify whether access uses TLS.
          type: boolean
      required:
      - destination
      type: object
    CreateRoleResponse:
      properties:
        roleId:
          type: string
      type: object
    CreateSimRequest:
      properties:
        subscription:
          type: string
        type:
          enum:
          - virtual
          type: string
      required:
      - type
      - subscription
      type: object
    CreateSoraletRequest:
      properties:
        description:
          type: string
        soraletId:
          type: string
      required:
      - soraletId
      type: object
    CreateUserPasswordRequest:
      properties:
        password:
          type: string
      type: object
    CreateUserRequest:
      properties:
        description:
          type: string
      type: object
    CreateVirtualPrivateGatewayRequest:
      properties:
        deviceSubnetCidrRange:
          default: 10.128.0.0/9
          type: string
        type:
          description: |
            VPG のタイプ

            - `14` : Type-E
             - `15` : Type-F
          enum:
          - 14
          - 15
          type: integer
        useInternetGateway:
          default: true
          type: boolean
      required:
      - type
      type: object
    CreateVpcPeeringConnectionRequest:
      properties:
        destinationCidrBlock:
          type: string
        peerOwnerId:
          type: string
        peerRegion:
          type: string
        peerVpcId:
          type: string
      type: object
    CredentialsModel:
      properties:
        createDateTime:
          format: int64
          type: integer
        credentials:
          type: object
        credentialsId:
          type: string
        description:
          type: string
        lastUsedDateTime:
          format: int64
          type: integer
        type:
          enum:
          - aws-credentials
          - azure-credentials
          - psk
          - x509
          type: string
        updateDateTime:
          format: int64
          type: integer
      type: object
    CreditCard:
      properties:
        cvc:
          type: string
        expireMonth:
          format: int32
          type: integer
        expireYear:
          format: int32
          type: integer
        name:
          type: string
        number:
          type: string
      type: object
    DailyBill:
      properties:
        amount:
          description: 金額
          format: int64
          type: integer
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        date:
          description: 年月日
          format: yyyyMMdd
          type: string
      type: object
    DailyBillResponse:
      properties:
        billList:
          description: 日ごとの利用料金
          items:
            $ref: '#/components/schemas/DailyBill'
          type: array
      type: object
    DataEntry:
      properties:
        content:
          type: string
        contentType:
          type: string
        time:
          format: int64
          type: integer
      type: object
    DataSourceResourceMetadata:
      properties:
        attributeNames:
          items:
            type: string
          type: array
        lastModifiedTime:
          format: int64
          type: integer
        resourceId:
          type: string
        resourceType:
          type: string
      type: object
    DataTrafficStats:
      properties:
        downloadByteSizeTotal:
          format: int64
          type: integer
        downloadPacketSizeTotal:
          format: int64
          type: integer
        uploadByteSizeTotal:
          format: int64
          type: integer
        uploadPacketSizeTotal:
          format: int64
          type: integer
      type: object
    Device:
      properties:
        device_id:
          type: string
        endpoint:
          type: string
        firmwareVersion:
          type: string
        groupId:
          type: string
        ipAddress:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        lastRegistrationUpdate:
          format: date-time
          type: string
        manufacturer:
          type: string
        modelNumber:
          type: string
        objects:
          type: object
        online:
          default: false
          type: boolean
        operatorId:
          type: string
        registrationId:
          type: string
        registrationLifeTime:
          format: int64
          type: integer
        serialNumber:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    DeviceObjectModel:
      properties:
        createdTime:
          format: date-time
          type: string
        format:
          enum:
          - xml
          - json
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        objectId:
          type: string
        objectName:
          type: string
        operatorId:
          type: string
        scope:
          type: string
      type: object
    DiagnosticRequest:
      properties:
        from:
          description: 診断対象期間の始まり (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        resourceId:
          description: |
            resourceType に応じた識別子

            - resourceType が `sim` の場合は、SIM ID を指定します。
          type: string
        resourceType:
          enum:
          - sim
          type: string
        service:
          enum:
          - Air
          type: string
        to:
          description: 診断対象期間の終わり (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
      required:
      - service
      - resourceType
      - resourceId
      type: object
    DiagnosticResponse:
      properties:
        diagnosticId:
          type: string
        from:
          description: 診断対象期間の始まり (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        insights:
          items:
            additionalProperties:
              $ref: '#/components/schemas/Insight'
            type: object
          type: array
        resourceId:
          description: resourceType に応じた識別子
          type: string
        resourceType:
          enum:
          - sim
          type: string
        service:
          enum:
          - Air
          type: string
        status:
          enum:
          - diagnosing
          - done
          - failed
          type: string
        to:
          description: 診断対象期間の終わり (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
      type: object
    DownlinkPingRequest:
      properties:
        numberOfPingRequests:
          default: 1
          description: ping の試行回数
          maximum: 5
          type: integer
        timeoutSeconds:
          default: 1
          description: 各 ping 実行のタイムアウト秒数
          maximum: 3
          type: integer
      type: object
    DownlinkPingResponse:
      properties:
        rtt:
          description: ping の RTT 的な結果
          type: string
        stat:
          description: ping の統計的な結果
          type: string
        success:
          description: ping の成功可否
          type: boolean
      type: object
    EmailsModel:
      properties:
        createDateTime:
          format: int64
          type: integer
        email:
          type: string
        emailId:
          type: string
        updateDateTime:
          format: int64
          type: integer
        verified:
          description: メールアドレス宛てに送られたトークンを用いて認証済みかどうか
          type: boolean
      type: object
    EnableMFAOTPResponse:
      properties:
        totpUri:
          type: string
      type: object
    Error:
      properties:
        code:
          format: int32
          type: integer
        fields:
          type: string
        message:
          type: string
      type: object
    EstimatedCouponModel:
      properties:
        amount:
          description: クーポン額
          format: double
          type: number
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        expiryYearMonth:
          description: 有効期限
          format: yyyyMM
          type: string
        orderId:
          description: 発注 ID
          type: string
        taxAmount:
          description: 消費税
          format: double
          type: number
        totalAmount:
          description: 合計金額
          format: double
          type: number
      type: object
    EstimatedOrderItemModel:
      properties:
        product:
          $ref: '#/components/schemas/ProductModel'
          description: 商品
        productAmount:
          description: 商品金額
          format: double
          type: number
        quantity:
          description: 購入数
          format: int32
          type: integer
        taxIncludedProductAmount:
          type: number
      type: object
    EstimatedOrderModel:
      properties:
        appliedShippingOptions:
          description: Applied shipping options
          items:
            type: object
          type: array
        balanceDue:
          description: Balance due
          format: double
          type: number
        currency:
          description: Currency
          enum:
          - JPY
          - USD
          - EUR
          type: string
        email:
          description: メールアドレス
          type: string
        orderChannel:
          description: Order channel
          type: string
        orderId:
          description: 発注 ID
          type: string
        orderItemList:
          description: 発注商品リスト
          items:
            $ref: '#/components/schemas/EstimatedOrderItemModel'
          type: array
        preferredDeliveryDate:
          description: Preferred delivery date
          type: string
        purchaseOrderNumber:
          description: Purchase order number
          type: string
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressModel'
          description: 発送先
        shippingAddressId:
          description: 商品発送先 ID
          type: string
        shippingCost:
          description: 配送料
          format: double
          type: number
        taxAmount:
          description: 消費税
          format: double
          type: number
        taxIncludedInShippingCost:
          description: Tax included in shipping cost
          format: double
          type: number
        taxOnShippingCost:
          description: Whether shipping cost is taxable
          type: boolean
        totalAmount:
          description: 合計金額
          format: double
          type: number
        withholdingTaxAmount:
          description: Withholding tax amount
          format: double
          type: number
      type: object
    EstimatedVolumeDiscountModel:
      properties:
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        orderId:
          description: 発注 ID
          type: string
        taxAmount:
          description: 消費税
          format: double
          type: number
        totalAmount:
          description: 合計金額
          format: double
          type: number
        volumeDiscount:
          $ref: '#/components/schemas/VolumeDiscountModel'
          description: 長期利用割引
      type: object
    EventHandlerModel:
      properties:
        actionConfigList:
          items:
            $ref: '#/components/schemas/ActionConfig'
          type: array
        description:
          type: string
        handlerId:
          type: string
        name:
          type: string
        ruleConfig:
          $ref: '#/components/schemas/RuleConfig'
        status:
          enum:
          - inactive
          - active
          type: string
        targetGroupId:
          type: string
        targetImsi:
          type: string
        targetOperatorId:
          type: string
        targetSimId:
          type: string
      required:
      - actionConfigList
      - handlerId
      - ruleConfig
      - status
      - name
      type: object
    ExecuteSoraletRequest:
      properties:
        contentType:
          type: string
        direction:
          enum:
          - uplink
          - downlink
          type: string
        encodingType:
          enum:
          - text
          - binary
          type: string
        payload:
          type: string
        source:
          additionalProperties:
            $ref: '#/components/schemas/SoraletDataSource'
          type: object
        userdata:
          type: string
        version:
          type: string
      required:
      - version
      - direction
      - contentType
      - payload
      - source
      type: object
    ExecuteSoraletResponse:
      properties:
        body:
          type: string
        contentType:
          type: string
        encodingType:
          type: string
        resultCode:
          format: int32
          type: integer
      type: object
    ExpiryTime:
      properties:
        expiryAction:
          description: |
            期限切れ時のアクション。以下のいずれかを指定します。各設定について詳しくは、[IoT SIM の有効期限とアクションを設定する](/ja-jp/docs/air/set-expiry/) を参照してください。なお、`terminate` を指定する場合は、あらかじめ解約プロテクションを解除してください。

            省略した場合は、null 値が設定されます。
            - `doNothing` : 保留
            - `deleteSession` : セッション切断
            - `deactivate` : 休止
            - `suspend` : 利用中断
            - `terminate` : 解約
            - null 値 : (なし) (`doNothing` と同じ動作です)
          enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
          - (null value)
          nullable: true
          type: string
        expiryTime:
          description: 有効期限として設定された日付のタイムスタンプ (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
      required:
      - expiryTime
      type: object
    ExportRequest:
      properties:
        from:
          format: int64
          type: integer
        period:
          enum:
          - month
          - day
          - minutes
          type: string
        to:
          format: int64
          type: integer
      type: object
    FileEntry:
      properties:
        contentLength:
          description: コンテントの長さ
          format: int64
          type: integer
        contentType:
          description: コンテントタイプ
          type: string
        createdTime:
          description: ファイルの作成時刻
          format: int64
          type: integer
        directory:
          description: 親ディレクトリ名
          type: string
        etag:
          description: ファイルの ETag
          type: string
        filePath:
          description: ファイルの絶対パス
          type: string
        filename:
          description: ファイル名
          type: string
        isDirectory:
          description: ディレクトリか否か
          type: boolean
        lastModifiedTime:
          description: ファイルの更新時刻
          format: int64
          type: integer
      type: object
    FileExportResponse:
      properties:
        exportedFileId:
          description: ファイルエクスポート ID。この ID を [`Files:getExportedFile API`](#/Files/getExportedFile)
            を呼び出すときに指定すると、ファイルをダウンロードするための URL を取得できます。`export_mode` に `async` を指定した場合のみ含まれます。
          type: string
        exportedFilePath:
          description: 出力済みファイルのパス。`export_mode` に `async` を指定した場合のみ含まれます。
          type: string
        url:
          description: ファイルをダウンロードするための URL。`export_mode` に `sync` を指定した場合のみ含まれます。
          type: string
      type: object
    FunkStatsResponse:
      properties:
        funkStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/SoracomFunkStats'
          type: object
        unixtime:
          format: int64
          type: integer
      type: object
    FunnelAWSFirehoseDestination:
      properties:
        provider:
          enum:
          - aws
          type: string
        resourceUrl:
          example: https://firehose.<region>.amazonaws.com/<delivery stream name>
          type: string
        service:
          enum:
          - firehose
          type: string
      type: object
    FunnelAWSIoTDestination:
      properties:
        provider:
          enum:
          - aws
          type: string
        resourceUrl:
          example: https://<id>.iot.<region>.amazonaws.com/<topic>
          type: string
        service:
          enum:
          - aws-iot
          type: string
      type: object
    FunnelAWSKinesisDestination:
      properties:
        provider:
          enum:
          - aws
          type: string
        randomizePartitionKey:
          type: boolean
        resourceUrl:
          example: https://kinesis.<region>.amazonaws.com/<delivery stream name>
          type: string
        service:
          enum:
          - kinesis
          type: string
      type: object
    FunnelAcroquestTorrentioDestination:
      properties:
        endpointId:
          type: string
        provider:
          enum:
          - acroquest
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - torrentio
          type: string
        tenantId:
          type: string
      type: object
    FunnelAppressoDataSpiderDestination:
      properties:
        provider:
          enum:
          - appresso
          type: string
        resourceUrl:
          example: https://ss.dataspidercloud.com/ws/trigger/funnel?cid=<cid>&sid=<sid>
          type: string
        service:
          enum:
          - dataspider
          type: string
      type: object
    FunnelAzureEventHubDestination:
      properties:
        provider:
          enum:
          - azure
          type: string
        resourceUrl:
          example: https://<namespace>.servicebus.windows.net/<event hubs name>/messages
          type: string
        service:
          enum:
          - eventhubs
          type: string
      type: object
    FunnelBrainsTechImpulseDestination:
      properties:
        provider:
          enum:
          - brains-tech
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - impulse
          type: string
      type: object
    FunnelConfiguration:
      properties:
        addSimId:
          default: false
          type: boolean
        contentType:
          $ref: '#/components/schemas/FunnelContentType'
        credentialsId:
          type: string
        destination:
          oneOf:
          - $ref: '#/components/schemas/FunnelDestination'
          - $ref: '#/components/schemas/FunnelAWSFirehoseDestination'
          - $ref: '#/components/schemas/FunnelAWSIoTDestination'
          - $ref: '#/components/schemas/FunnelAWSKinesisDestination'
          - $ref: '#/components/schemas/FunnelAzureEventHubDestination'
          - $ref: '#/components/schemas/FunnelGooglePubSubDestination'
          - $ref: '#/components/schemas/FunnelAcroquestTorrentioDestination'
          - $ref: '#/components/schemas/FunnelAppressoDataSpiderDestination'
          - $ref: '#/components/schemas/FunnelBrainsTechImpulseDestination'
          - $ref: '#/components/schemas/FunnelEsrijArcgisOnlineDestination'
          - $ref: '#/components/schemas/FunnelFusicMockmockDatarecorderDestination'
          - $ref: '#/components/schemas/FunnelInfoteriaPlatioDestination'
          - $ref: '#/components/schemas/FunnelKiiThingifDestination'
          - $ref: '#/components/schemas/FunnelLandlogDestination'
          - $ref: '#/components/schemas/FunnelOptimCloudiotosDestination'
          - $ref: '#/components/schemas/FunnelTeradataIntellicloudDestination'
          - $ref: '#/components/schemas/FunnelWingarcMotionboardDestination'
          - $ref: '#/components/schemas/FunnelYaskawaMmcloudDestination'
          - $ref: '#/components/schemas/FunnelSensorCorpusDestination'
        enabled:
          default: false
          type: boolean
      type: object
    FunnelContentType:
      enum:
      - json
      - text
      - unspecified
      - binary
      - application/x-soracom-bf-v1
      type: string
    FunnelDestination:
      properties:
        provider:
          type: string
        resourceUrl:
          type: string
        service:
          type: string
      type: object
    FunnelEsrijArcgisOnlineDestination:
      properties:
        config:
          type: string
        provider:
          enum:
          - esrij
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - arcgis-online
          type: string
      type: object
    FunnelFusicMockmockDatarecorderDestination:
      properties:
        provider:
          enum:
          - fusic
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - mockmock-datarecorder
          type: string
      type: object
    FunnelGooglePubSubDestination:
      properties:
        provider:
          enum:
          - google
          type: string
        resourceUrl:
          example: your_topic_name
          type: string
        service:
          enum:
          - pubsub
          type: string
      type: object
    FunnelInfoteriaPlatioDestination:
      properties:
        applicationId:
          type: string
        collectionId:
          type: string
        passAll:
          type: boolean
        provider:
          enum:
          - infoteria
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - platio
          type: string
        values:
          type: string
      type: object
    FunnelKiiThingifDestination:
      properties:
        provider:
          enum:
          - kii
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - thingif
          type: string
      type: object
    FunnelLandlogDestination:
      properties:
        channel_id:
          type: string
        data_format:
          enum:
          - json
          - text
          - xml
          type: string
        provider:
          enum:
          - landlog
          type: string
        resourceUrl:
          example: https://api.landlog.info
          type: string
        service:
          enum:
          - landlog
          type: string
      type: object
    FunnelOptimCloudiotosDestination:
      properties:
        channel_id:
          type: string
        data_format:
          type: string
        provider:
          enum:
          - optim
          type: string
        resourceUrl:
          example: https://messaging.optimcloudapis.com
          type: string
        service:
          enum:
          - cloudiotos
          type: string
      type: object
    FunnelSensorCorpusDestination:
      properties:
        additionalData:
          type: string
        provider:
          enum:
          - infocorpus
          type: string
        resourceUrl:
          example: https://www.sensorcorpus.net/
          type: string
        service:
          enum:
          - sensorcorpus
          type: string
      type: object
    FunnelStatsResponse:
      properties:
        funnelStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/SoracomFunnelStats'
          type: object
        unixtime:
          format: int64
          type: integer
      type: object
    FunnelTeradataIntellicloudDestination:
      properties:
        provider:
          enum:
          - teradata
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - intellicloud
          type: string
      type: object
    FunnelWingarcMotionboardDestination:
      properties:
        provider:
          enum:
          - wingarc
          type: string
        resourceUrl:
          example: https://iot-cloud.motionboard.jp/motionboard/
          type: string
        service:
          enum:
          - motionboard
          type: string
      type: object
    FunnelYaskawaMmcloudDestination:
      properties:
        desthost:
          type: string
        destport:
          maximum: 0
          minimum: 65535
          type: integer
        provider:
          enum:
          - yaskawa
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - mmcloud
          type: string
      type: object
    Gadget:
      properties:
        attributes:
          type: object
        groupId:
          type: string
        id:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        lastSeen:
          type: object
        operatorId:
          type: string
        product_id:
          type: string
        serial_number:
          type: string
        status:
          enum:
          - active
          - terminated
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        terminationEnabled:
          default: false
          type: boolean
      type: object
    GadgetRegistrationRequest:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    GatePeer:
      properties:
        innerIpAddress:
          type: string
        netmask:
          type: string
        outerIpAddress:
          type: string
        ownedByCustomer:
          type: boolean
      type: object
    GenerateOperatorsAuthKeyResponse:
      properties:
        authKey:
          type: string
        authKeyId:
          type: string
      type: object
    GenerateTokenRequest:
      properties:
        tokenTimeoutSeconds:
          default: 86400
          description: |
            新しい API トークンの有効期限の長さ（秒単位）。
            指定しなければデフォルトは 86400 [秒]（24 時間）。
            最大値は 172800 [秒]（48 時間）。
          maximum: 172800
          type: integer
      type: object
    GenerateTokenResponse:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    GenerateUserAuthKeyResponse:
      properties:
        authKey:
          type: string
        authKeyId:
          type: string
      type: object
    GetBillingHistoryResponse:
      properties:
        billList:
          description: 月ごとの利用料金
          items:
            $ref: '#/components/schemas/MonthlyBill'
          type: array
      type: object
    GetDefaultPermissionsResponse:
      properties:
        defaultPermissions:
          type: string
      type: object
    GetExportedFileResponse:
      properties:
        status:
          description: ファイル出力ステータス
          enum:
          - processing
          - exported
          - failed
          type: string
        url:
          description: ファイルダウンロード URL
          type: string
      type: object
    GetLatestBill:
      properties:
        amount:
          description: 金額
          format: int64
          type: integer
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        lastEvaluatedTime:
          description: 利用額計算を実施した時間
          example: yyyyMMddHHmmss
          type: string
      type: object
    GetOperatorResponse:
      properties:
        createDate:
          type: string
        description:
          type: string
        email:
          type: string
        operatorId:
          type: string
        rootOperatorId:
          type: string
        updateDate:
          type: string
      required:
      - createDate
      - description
      - email
      - operatorId
      - rootOperatorId
      - updateDate
      type: object
    GetOrderResponse:
      properties:
        appliedShippingOptions:
          description: 適用済み配送オプション
          items:
            type: object
          type: array
        balanceDue:
          description: 差引請求額
          format: double
          type: number
        containsTaxIncludedAmounts:
          type: boolean
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        email:
          description: メールアドレス
          type: string
        orderChannel:
          description: 発注チャンネル
          type: string
        orderDateTime:
          description: 発注日時 (yyyyMMddHHmmss)
          format: yyyyMMddHHmmss
          type: string
        orderId:
          description: 発注 ID
          type: string
        orderItemList:
          description: 発注商品リスト
          items:
            $ref: '#/components/schemas/EstimatedOrderItemModel'
          type: array
        orderStatus:
          description: 発注ステータス
          enum:
          - ordering
          - ordered
          - kitting
          - shipped
          - received
          - cancelling
          - cancelled
          - failed
          type: string
        preferredDeliveryDate:
          description: 希望納品日
          type: string
        purchaseOrderNumber:
          description: 注文番号
          type: string
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressModel'
          description: 発送先
        shippingAddressId:
          description: 商品発送先 ID
          type: string
        shippingCost:
          description: 配送料
          format: double
          type: number
        shippingLabelNumber:
          description: 宅配便送り状番号 (代表)
          type: string
        shippingLabelNumbers:
          description: 宅配便送り状番号
          items:
            type: string
          type: array
        taxAmount:
          description: 税額
          format: double
          type: number
        taxIncludedInShippingCost:
          description: 送料に含まれる税額
          format: double
          type: number
        taxOnShippingCost:
          description: 配送料の課税有無
          type: boolean
        totalAmount:
          description: 合計額 (税込)
          format: double
          type: number
        withholdingTaxAmount:
          description: 源泉徴収税額
          format: double
          type: number
      type: object
    GetPaymentMethodResult:
      properties:
        errorCode:
          description: エラーコード（支払い情報が無効な場合のみ）
          enum:
          - success
          - processing
          - invalid_request
          - invalid_number
          - incorrect_number
          - invalid_name
          - invalid_expiry_month
          - invalid_expiry_year
          - invalid_expiry
          - incorrect_expiry
          - invalid_cvc
          - incorrect_cvc
          - card_declined
          - missing
          - processing_error
          type: string
        errorMessage:
          description: エラーメッセージ（支払い情報が無効な場合のみ
          type: string
        properties:
          description: 支払い情報
          type: string
        providerType:
          description: 課金プロバイダ種別
          enum:
          - WebPay
          type: string
        updateDate:
          description: 登録日
          example: yyyyMMddHHmmss
          type: string
      type: object
    GetPaymentTransactionResult:
      properties:
        amount:
          $ref: '#/components/schemas/PaymentAmount'
          description: 課金額
        description:
          $ref: '#/components/schemas/PaymentDescription'
          description: 課金内容詳細
        message:
          description: メッセージ
          type: string
        messageCode:
          description: メッセージコード
          enum:
          - success
          - processing
          - invalid_request
          - invalid_number
          - incorrect_number
          - invalid_name
          - invalid_expiry_month
          - invalid_expiry_year
          - invalid_expiry
          - incorrect_expiry
          - invalid_cvc
          - incorrect_cvc
          - card_declined
          - missing
          - processing_error
          type: string
        status:
          description: ステータス
          enum:
          - success
          - error
          type: string
      type: object
    GetShippingAddressResponse:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        companyName:
          type: string
        department:
          type: string
        fullName:
          type: string
        phoneNumber:
          type: string
        shippingAddressId:
          description: 配送先 ID
          type: string
        shippingArea:
          description: 配送先エリア
          type: string
        state:
          type: string
        zipCode:
          type: string
      required:
      - addressLine1
      - city
      - phoneNumber
      - shippingAddressId
      - shippingArea
      - state
      - zipCode
      type: object
    GetUserPasswordResponse:
      properties:
        hasPassword:
          type: boolean
      type: object
    GetUserPermissionResponse:
      properties:
        permission:
          description: Permission の JSON
          type: string
      required:
      - permission
      type: object
    GetVolumeDiscountResponse:
      properties:
        contractDateTime:
          description: 契約日時
          example: yyyyMMddHHmmss
          type: string
        contractId:
          description: 契約 ID
          type: string
        contractTermMonth:
          default: 12
          description: 契約月数
          format: int32
          type: integer
        currency:
          description: Currency
          enum:
          - JPY
          - USD
          - EUR
          type: string
        endDate:
          description: 適用終了日
          example: yyyyMMdd
          type: string
        initialCost:
          description: 初期費用
          format: double
          type: number
        quantity:
          description: 数量
          format: int32
          type: integer
        startDate:
          description: 適用開始日
          example: yyyyMMdd
          type: string
        status:
          description: ステータス
          enum:
          - active
          - expired
          type: string
        unitPrice:
          description: 単価
          format: double
          type: number
        volumeDiscountPaymentType:
          description: お支払い方法
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: 料金計算方法
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      type: object
    GlobalSimAppletPLMNRecord:
      properties:
        containerId:
          format: int64
          type: integer
        mcc:
          type: string
        mnc:
          type: string
      required:
      - mcc
      - containerId
      type: object
    Group:
      properties:
        configuration:
          $ref: '#/components/schemas/Map'
        createdTime:
          format: int64
          type: integer
        groupId:
          type: string
        lastModifiedTime:
          format: int64
          type: integer
        operatorId:
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
      type: object
    GroupConfigurationUpdateRequest:
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    HarvestExportedDataStatsResponse:
      properties:
        exportedBytes:
          description: exportedBytes
          type: integer
        yearMonth:
          description: yearMonth
          type: string
      type: object
    HarvestStatsResponse:
      properties:
        harvestStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/SoracomHarvestStats'
          type: object
        unixtime:
          format: int64
          type: integer
      type: object
    ImeiLock:
      properties:
        imei:
          type: string
      type: object
    IndividualInformationModel:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        countryCode:
          type: string
        fullName:
          type: string
        phoneNumber:
          type: string
        state:
          type: string
        zipCode:
          type: string
      required:
      - fullName
      - countryCode
      - zipCode
      - phoneNumber
      type: object
    Insight:
      properties:
        anomalyDetectedTimes:
          description: 異常と思われる状況を検出した時間。フォーマットは category に関するイベントのタイムスタンプに依存します。（例：session
            の場合は UNIX 時間 (ミリ秒)）
          items:
            type: string
          type: array
        category:
          enum:
          - data
          - session
          - sim
          - others
          - unknown
          type: string
        insightId:
          type: string
        message:
          type: string
        referenceUrls:
          description: インサイトに関連のある参考情報の URL
          items:
            additionalProperties:
              $ref: '#/components/schemas/ReferenceUrl'
            type: object
          type: array
        severity:
          enum:
          - error
          - warning
          - info
          - none
          - unknown
          type: string
      type: object
    IpAddressMapEntry:
      properties:
        ipAddress:
          type: string
        key:
          type: string
        type:
          enum:
          - static
          - dynamic
          - customerGatePeer
          - gatePeer
          type: string
      type: object
    IssueAddEmailTokenRequest:
      properties:
        email:
          description: 追加するメールアドレス
          type: string
        password:
          description: ルートユーザーのパスワード
          type: string
      required:
      - email
      - password
      type: object
    IssuePasswordResetTokenRequest:
      properties:
        email:
          type: string
      required:
      - email
      type: object
    IssueSubscriberTransferTokenRequest:
      properties:
        transferDestinationOperatorEmail:
          description: 移管先オペレーターEmail
          type: string
        transferDestinationOperatorId:
          description: 移管先オペレーターID
          type: string
        transferImsi:
          description: 移管する IMSI リスト
          items:
            type: string
          type: array
      required:
      - transferDestinationOperatorEmail
      - transferDestinationOperatorId
      - transferImsi
      type: object
    IssueSubscriberTransferTokenResponse:
      properties:
        token:
          description: トークン
          type: string
      required:
      - token
      type: object
    JunctionInspectionConfiguration:
      properties:
        enabled:
          default: false
          type: boolean
        report:
          $ref: '#/components/schemas/FunnelConfiguration'
      type: object
    JunctionMirroringConfiguration:
      properties:
        peers:
          additionalProperties:
            $ref: '#/components/schemas/JunctionMirroringPeer'
          type: object
      type: object
    JunctionMirroringPeer:
      properties:
        description:
          type: string
        enabled:
          default: false
          type: boolean
        ipAddress:
          type: string
        protocol:
          enum:
          - gre
          type: string
      type: object
    JunctionRedirectionConfiguration:
      properties:
        description:
          type: string
        enabled:
          default: false
          type: boolean
        gateway:
          type: string
      type: object
    LagoonDashboardPermissionsResponse:
      properties:
        dashboardId:
          format: int64
          type: number
        dashboardTitle:
          type: string
        permissions:
          items:
            properties:
              dashboardId:
                format: int64
                type: number
              dashboardTitle:
                type: string
              permissionName:
                enum:
                - View
                - Edit
                - Admin
                type: string
              userEmail:
                type: string
              userId:
                format: int64
                type: number
            type: object
          type: array
      type: object
    LagoonDashboardPermissionsUpdatingRequest:
      properties:
        permissions:
          items:
            properties:
              permission:
                type: string
              userId:
                format: int64
                type: integer
            type: object
          type: array
      type: object
    LagoonLicensePackStatusResponse:
      properties:
        licensePackName:
          type: string
        quantity:
          format: int32
          type: integer
      type: object
    LagoonLicensePacksUpdatingRequest:
      properties:
        licensePackQuantities:
          items:
            properties:
              desiredQuantity:
                format: int32
                type: integer
              licensePackName:
                description: |
                  個数を変更するライセンスパックを指定します。
                  - `basicUser`: ユーザー追加パック
                  - `basicDashboard`: ダッシュボード追加パック
                enum:
                - basicUser
                - basicDashboard
                type: string
            type: object
          type: array
      type: object
    LagoonMigrationFromClassicRequest:
      properties:
        dashboardIds:
          description: A list of dashboard IDs to migrate
          items:
            type: string
          type: array
      type: object
    LagoonPlanChangingRequest:
      properties:
        plan:
          enum:
          - maker
          - pro
          - free
          type: string
      type: object
    LagoonRegistrationRequest:
      properties:
        plan:
          enum:
          - free
          - maker
          - pro
          type: string
        userPassword:
          description: This password is used by the initial user's login.
          type: string
      type: object
    LagoonRegistrationResponse:
      properties:
        lagoonUserEmail:
          description: This email address is used on login with the initial user.
          type: string
      type: object
    LagoonUser:
      properties:
        email:
          description: This value used on login.
          type: string
        id:
          type: number
        lastSeenAt:
          description: The last login datetime.
          type: string
        lastSeenAtAge:
          description: The last login datetime as age.
          type: string
        role:
          description: A role that represents the permission.
          enum:
          - Viewer
          - Editor
          type: string
      type: object
    LagoonUserCreationRequest:
      properties:
        role:
          description: A role that represents the permission.
          enum:
          - Viewer
          - Editor
          type: string
        userEmail:
          type: string
        userPassword:
          type: string
      type: object
    LagoonUserCreationResponse:
      properties:
        id:
          description: Lagoon user ID assigned to the created user.
          type: integer
      type: object
    LagoonUserEmailUpdatingRequest:
      properties:
        userEmail:
          type: string
      type: object
    LagoonUserPasswordUpdatingRequest:
      properties:
        newPassword:
          type: string
        oldPassword:
          type: string
      type: object
    LagoonUserPermissionUpdatingRequest:
      properties:
        role:
          description: A role that represents the permission.
          enum:
          - Viewer
          - Editor
          type: string
      type: object
    LastSeen:
      properties:
        rssi:
          format: int32
          type: integer
        snr:
          format: int32
          type: integer
        time:
          format: date-time
          type: string
      type: object
    ListCouponResponse:
      properties:
        couponList:
          description: クーポンリスト
          items:
            $ref: '#/components/schemas/CouponResponse'
          type: array
      type: object
    ListOrderResponse:
      properties:
        orderList:
          description: 発注リスト
          items:
            $ref: '#/components/schemas/GetOrderResponse'
          type: array
      type: object
    ListOrderedSubscriberResponse:
      properties:
        orderedSubscriberList:
          description: 発注した SIM のリスト
          items:
            $ref: '#/components/schemas/OrderedSubscriber'
          type: array
      type: object
    ListPaymentStatementResponse:
      properties:
        paymentStatementsList:
          description: 課金明細リスト
          items:
            $ref: '#/components/schemas/PaymentStatementResponse'
          type: array
      type: object
    ListProductResponse:
      properties:
        productList:
          items:
            $ref: '#/components/schemas/ProductModel'
          type: array
        shippingCostList:
          items:
            $ref: '#/components/schemas/ShippingCostModel'
          type: array
      type: object
    ListRolesResponse:
      properties:
        createDateTime:
          format: int64
          type: integer
        description:
          type: string
        roleId:
          type: string
        updateDateTime:
          format: int64
          type: integer
      type: object
    ListShippingAddressResponse:
      properties:
        shippingAddresses:
          items:
            $ref: '#/components/schemas/GetShippingAddressResponse'
          type: array
      type: object
    ListVolumeDiscountResponse:
      properties:
        volumeDiscountList:
          description: 契約済み長期利用割引リスト
          items:
            $ref: '#/components/schemas/GetVolumeDiscountResponse'
          type: array
      type: object
    LocationRegistrationStatus:
      properties:
        cs:
          $ref: '#/components/schemas/LocationRegistrationStatusForNetwork'
          description: CS ネットワークへのネットワーク登録状況
        eps:
          $ref: '#/components/schemas/LocationRegistrationStatusForNetwork'
          description: EPS ネットワークへのネットワーク登録状況
        ps:
          $ref: '#/components/schemas/LocationRegistrationStatusForNetwork'
          description: PS ネットワークへのネットワーク登録状況
      type: object
    LocationRegistrationStatusForNetwork:
      properties:
        lastModifiedTime:
          description: 最後にネットワーク登録が成功したときのタイムスタンプ（ミリ秒単位の Unix 時間）
          format: int64
          type: integer
        vplmn:
          description: ローミング先の PLMN ID
          type: string
      type: object
    LogEntry:
      properties:
        body:
          type: object
        resourceId:
          type: string
        resourceType:
          enum:
          - Subscriber
          - EventHandler
          - VirtualPrivateGateway
          type: string
        service:
          enum:
          - Air
          - Beam
          - Canal
          - Direct
          - Door
          - Endorse
          - Funnel
          - Gate
          type: string
        time:
          format: int64
          type: integer
      type: object
    LoraData:
      properties:
        data:
          type: string
        fPort:
          default: 2
          type: integer
      type: object
    LoraDevice:
      properties:
        device_id:
          type: string
        groupId:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        lastSeen:
          $ref: '#/components/schemas/LastSeen'
        operatorId:
          type: string
        status:
          enum:
          - active
          - ready
          - terminated
          - instock
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        terminationEnabled:
          default: false
          type: boolean
      type: object
    LoraGateway:
      properties:
        address:
          type: string
        createdTime:
          format: date-time
          type: string
        gatewayId:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        networkSetId:
          type: string
        online:
          default: false
          type: boolean
        operatorId:
          type: string
        owned:
          default: false
          type: boolean
        status:
          enum:
          - active
          - terminated
          - ready
          - instock
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        terminationEnabled:
          default: false
          type: boolean
      type: object
    LoraNetworkSet:
      properties:
        allowedOperators:
          items:
            type: string
          type: array
          uniqueItems: true
        createdTime:
          format: date-time
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        networkSetId:
          type: string
        operatorId:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    MFAAuthenticationRequest:
      properties:
        mfaOTPCode:
          type: string
      type: object
    MFAIssueRevokingTokenRequest:
      properties:
        email:
          type: string
        password:
          type: string
      type: object
    MFARevokingTokenVerifyRequest:
      properties:
        backupCode:
          type: string
        email:
          type: string
        password:
          type: string
        token:
          type: string
      type: object
    MFAStatusOfUseResponse:
      properties:
        status:
          type: string
      type: object
    Map:
      additionalProperties:
        type: string
      type: object
    MappingEntries:
      properties:
        mappingEntries:
          items:
            $ref: '#/components/schemas/GlobalSimAppletPLMNRecord'
          type: array
      type: object
    MonthlyBill:
      properties:
        amount:
          description: 利用料金
          format: int64
          type: integer
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        paymentStatus:
          description: |
            お支払い状況。詳しくは、[ご利用料金のお支払状況について](https://soracom.zendesk.com/hc/ja/articles/360029337031) を参照してください。

            - `lessThanMinimumCharge`: 翌月以降請求 (最低課金額に満たないため)
            - `paying`: 支払い処理中
            - `paid`: 支払い済み
            - `fail`: 処理失敗
            - `refunding`: リファンド処理中
            - `refunded`: リファンド済み
            - `refund_fail`: リファンド処理失敗
            - `delegating_to_third_party`: 債権譲渡中
            - `delegated_to_third_party`: 債権譲渡済み
            - `charging`: 請求実施中
            - `canceling`: キャンセル中
            - `cancelled`: キャンセル済み
            - `cancel_failed`: キャンセル処理失敗
          enum:
          - lessThanMinimumCharge
          - paying
          - paid
          - fail
          - refunding
          - refunded
          - refund_fail
          - delegating_to_third_party
          - delegated_to_third_party
          - charging
          - canceling
          - cancelled
          - cancel_failed
          type: string
        paymentTransactionId:
          description: 課金処理 ID。この ID を指定して [Payment:getPaymentTransaction API](#/Payment/getPaymentTransaction) を呼び出すと課金詳細が取得できます。
          type: string
        state:
          description: |
            利用料金の集計状況

            - `temporary`: 集計中
            - `closed`: 確定済み
          enum:
          - temporary
          - closed
          type: string
        yearMonth:
          description: 年月
          format: yyyyMM
          type: string
      type: object
    NapterAuditLogDirection:
      properties:
        destinationIPAddress:
          type: string
        destinationPort:
          format: int64
          type: integer
        sourceIPAddress:
          type: string
        sourcePort:
          format: int64
          type: integer
      type: object
    NapterAuditLogEntry:
      properties:
        connectionId:
          type: string
        createdAt:
          format: int64
          type: integer
        direction:
          $ref: '#/components/schemas/NapterAuditLogDirection'
        imsi:
          type: string
        isTLS:
          type: boolean
        operatorId:
          type: string
        type:
          enum:
          - ACCESS
          - DENIED
          - CONNECTED
          - CLOSED
          - REFUSED
          - CREATED
          - DELETED
          - EXPIRED
          type: string
      type: object
    NapterAuditLogsExportedDataStatsResponse:
      properties:
        exportedBytes:
          description: exportedBytes
          type: integer
        yearMonth:
          description: yearMonth
          type: string
      type: object
    ObjectInstance:
      properties:
        id:
          format: int32
          type: integer
        observed:
          default: false
          type: boolean
        resources:
          additionalProperties:
            $ref: '#/components/schemas/ResourceInstance'
          type: object
      type: object
    OpenGateRequest:
      properties:
        privacySeparatorEnabled:
          default: false
          type: boolean
        vxlanId:
          default: 10
          format: int32
          type: integer
      type: object
    OperatorMFAVerifyingResponse:
      properties:
        backupCodes:
          items:
            type: string
          type: array
      type: object
    OrderItemModel:
      properties:
        productCode:
          description: 商品コード
          type: string
        quantity:
          description: 購入数
          format: int32
          type: integer
      type: object
    OrderedSubscriber:
      properties:
        imsi:
          description: IMSI
          type: string
        msisdn:
          description: MSISDN
          type: string
        serialNumber:
          description: serialNumber
          type: string
      type: object
    PacketCaptureSession:
      properties:
        createdTime:
          format: date-time
          type: string
        duration:
          format: int32
          type: integer
        endedTime:
          format: date-time
          type: string
        failedReason:
          type: string
        prefix:
          type: string
        startedTime:
          format: date-time
          type: string
        status:
          enum:
          - REQUESTED
          - ACCEPTED
          - CAPTURING
          - POST_PROCESSING
          - DONE
          - FAILED
          type: string
        url:
          format: uri
          type: string
      type: object
    PacketCaptureSessionRequest:
      properties:
        duration:
          format: int32
          maximum: 86400
          minimum: 30
          type: integer
        prefix:
          pattern: ^[0-9A-Za-z_\-]{0,100}$
          type: string
      required:
      - duration
      type: object
    PaymentAmount:
      description: Payment amount
      properties:
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        paymentAmount:
          type: number
        subTotalAmount:
          type: number
        taxAmount:
          description: 税額
          format: double
          type: number
        taxFreeSubTotalAmount:
          description: 非課税小計
          format: double
          type: number
        taxRate:
          type: object
        taxableSubTotalAmount:
          description: 課税小計
          format: double
          type: number
        totalAmount:
          description: 合計額 (税込)
          format: double
          type: number
        withholdingTaxAmount:
          description: 源泉徴収税額
          format: double
          type: number
      type: object
    PaymentDescription:
      description: Payment description
      properties:
        description:
          type: string
        itemList:
          items:
            type: string
          type: array
      type: object
    PaymentStatementResponse:
      properties:
        amount:
          description: 金額
          format: double
          type: number
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        paymentDateTime:
          description: 課金日時
          format: int64
          type: integer
        paymentInstrument:
          description: 支払情報
          type: string
        paymentMethod:
          description: 支払方法
          type: string
        paymentStatementId:
          description: 課金明細 ID
          type: string
        paymentStatementInfo:
          description: 支払内容
          type: string
      type: object
    Placement:
      properties:
        infrastructureProvider:
          type: string
          enum:
          - aws
        region:
          description: |
            `infrastructureProvider` が `aws` の場合は、ランデブーポイントです。

            - `ap-northeast-1`: 東京（日本）
            - `eu-central-1`: フランクフルト (ドイツ)
            - `us-west-2`: オレゴン (米国)
            - `ap-southeast-2`: シドニー (オーストラリア)
          enum:
          - ap-northeast-1
          - eu-central-1
          - us-west-2
          - ap-southeast-2
          default: eu-central-1
          type: string
      type: object
    PortMapping:
      properties:
        destination:
          $ref: '#/components/schemas/PortMappingDestination'
        duration:
          description: The duration that remote access is enabled, in seconds.
          type: number
        endpoint:
          description: SORACOM Napter endpoint (IP address and port number) for remote
            access.
          type: string
        hostname:
          description: SORACOM Napter hostname for remote access.
          type: string
        ipAddress:
          description: SORACOM Napter IP Address for remote access.
          type: string
        port:
          description: SORACOM Napter port number for remote access.
          type: number
        source:
          $ref: '#/components/schemas/PortMappingSource'
        tlsRequired:
          description: Indicates TLS is required.
          type: boolean
      type: object
    PortMappingDestination:
      properties:
        imsi:
          description: The target IMSI of the subscriber.
          type: string
        port:
          description: The port on your device used for access.
          type: number
      required:
      - imsi
      - port
      type: object
    PortMappingSource:
      properties:
        ipRanges:
          description: The range of IP addresses in CIDR notation which will be allowed
            to access the port mapping.
          items:
            type: string
          type: array
      type: object
    PreviousSessionStatus:
      properties:
        cell:
          $ref: '#/components/schemas/Cell'
        createdTime:
          description: The time when the previous session was created.
          format: int64
          type: integer
        deletedTime:
          description: The time when the previous session was deleted.
          format: int64
          type: integer
        dnsServers:
          description: Array of IP address of the DNS servers.
          items:
            type: string
          type: array
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        imei:
          description: The IMEI of the device using the SIM.
          type: string
        ueIpAddress:
          description: The IP address of the device.
          type: string
        vpgId:
          description: The Virtual Private Gateway IP address configured.
          type: string
      type: object
    PriceByQuantity:
      properties:
        minQuantity:
          description: 最低数量
          format: int32
          type: integer
        price:
          description: 販売価格
          format: double
          type: number
        taxIncludedPrice:
          description: 税込販売価格
          format: double
          type: number
      type: object
    ProductModel:
      description: Product
      properties:
        campaignCode:
          description: キャンペーンコード
          type: string
        consignorId:
          description: 委託者 ID
          type: string
        consignorName:
          description: 委託者名
          type: string
        count:
          description: 入数
          format: double
          type: number
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        description:
          description: 商品詳細
          type: string
        maxQuantity:
          description: 注文あたりの最大購入数量
          format: int32
          type: integer
        price:
          description: 販売価格
          format: double
          type: number
        priceByQuantityList:
          description: 数量別価格リスト
          items:
            $ref: '#/components/schemas/PriceByQuantity'
          type: array
        productCode:
          description: 商品コード
          type: string
        productInfoURL:
          description: 商品説明ページ URL
          type: string
        productName:
          description: 商品名
          type: string
        productType:
          description: 商品種別
          enum:
          - sim
          - lora
          - sigfox
          - network_module
          - misc
          type: string
        properties:
          additionalProperties:
            type: string
          description: 商品プロパティ
          type: object
        regularPrice:
          description: 通常価格
          format: double
          type: number
        taxIncludedPrice:
          description: 税込販売価格
          format: double
          type: number
        taxIncludedRegularPrice:
          description: 税込通常価格
          format: double
          type: number
      type: object
    PutIpAddressMapEntryRequest:
      properties:
        ipAddress:
          type: string
        key:
          type: string
      required:
      - key
      - ipAddress
      type: object
    ReferenceUrl:
      properties:
        title:
          type: string
        url:
          type: string
      type: object
    RegisterGatePeerRequest:
      properties:
        innerIpAddress:
          type: string
        outerIpAddress:
          type: string
      required:
      - outerIpAddress
      type: object
    RegisterLoraDeviceRequest:
      properties:
        groupId:
          type: string
        registrationSecret:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    RegisterOperatorsRequest:
      properties:
        email:
          type: string
        password:
          description: パスワードは以下の条件を満たしている必要があります：長さ 8 文字以上 100 文字以内、アルファベット小文字 (a-z)
            を 1 文字以上使用、アルファベット大文字 (A-Z) を 1 文字以上使用、数字を 1 文字以上使用。記号なども使用できます。
          type: string
      required:
      - email
      - password
      type: object
    RegisterPayerInformationModel:
      properties:
        companyName:
          description: 企業名
          type: string
        department:
          description: 部署
          type: string
        fullName:
          description: 氏名
          type: string
      type: object
    RegisterSimRequest:
      properties:
        groupId:
          type: string
        registrationSecret:
          description: PUK or PASSCODE on SIM card
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
      required:
      - registrationSecret
      type: object
    RegisterSubscribersRequest:
      properties:
        groupId:
          type: string
        registrationSecret:
          description: PUK or PASSCODE on SIM card
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
      required:
      - registrationSecret
      type: object
    ResourceInstance:
      properties:
        description:
          type: string
        id:
          format: int32
          type: integer
        mandatory:
          default: false
          type: boolean
        multiple:
          default: false
          type: boolean
        name:
          type: string
        observed:
          default: false
          type: boolean
        operations:
          enum:
          - NONE
          - R
          - W
          - RW
          - E
          - RE
          - WE
          - RWE
          type: string
        rangeEnumeration:
          type: string
        type:
          enum:
          - STRING
          - INTEGER
          - FLOAT
          - BOOLEAN
          - OPAQUE
          - TIME
          - OBJLNK
          type: string
        units:
          type: string
        value:
          type: object
        values:
          type: object
      type: object
    ResourceSummary:
      properties:
        resourceSummaryItems:
          description: リソースの要約アイテムの一覧
          items:
            $ref: '#/components/schemas/ResourceSummaryItem'
          type: array
        resourceSummaryType:
          description: |
            リソースの要約の種別

            - `simsPerStatus`: ステータスごとの IoT SIM の数
          example: simsPerStatus
          type: string
      type: object
    ResourceSummaryItem:
      properties:
        dimensions:
          description: リソースの要約アイテムのディメンションの一覧
          example: []
          items:
            $ref: '#/components/schemas/ResourceSummaryItemDimension'
          type: array
        updatedTime:
          description: リソースの要約アイテムの最終更新日時 (unixtime ミリ秒単位)
          example: 1654007722000
          format: int64
          type: integer
        values:
          description: リソースの要約アイテムの集計値の一覧
          items:
            $ref: '#/components/schemas/ResourceSummaryItemValue'
          type: array
      type: object
    ResourceSummaryItemDimension:
      properties:
        name:
          description: リソースの要約アイテムのディメンションの名前
          type: string
        value:
          description: リソースの要約アイテムのディメンションの値
          type: string
      type: object
    ResourceSummaryItemValue:
      properties:
        name:
          description: |
            リソースの要約アイテムの集計値の名前

            - `resourceSummaryType` が `simsPerStatus` の場合:
              - `readySims`: ステータスが「準備完了 (ready)」の IoT SIM の数
              - `activeSims`: ステータスが「使用中 (active)」の IoT SIM の数
              - `inactiveSims`: ステータスが「休止中 (inactive)」の IoT SIM の数
              - `standbySims`: ステータスが「利用開始待ち (standby)」の IoT SIM の数
              - `suspendedSims`: ステータスが「利用中断中 (suspended)」の IoT SIM の数
          example: activeSims
          type: string
        value:
          description: リソースの要約アイテムの集計値の値
          example: 1
          type: number
      type: object
    RoleResponse:
      properties:
        createDateTime:
          format: int64
          type: integer
        description:
          type: string
        permission:
          description: Permission の JSON
          type: string
        roleId:
          type: string
        updateDateTime:
          format: int64
          type: integer
      type: object
    RoutingFilterEntry:
      properties:
        action:
          description: Whether to allow or deny the outbound packets with a destination
            in the specified range
          enum:
          - allow
          - deny
          type: string
        ipRange:
          description: IPv4 address range in CIDR format, e.g. a.b.c.d/x
          type: string
      required:
      - action
      - ipRange
      type: object
    RuleConfig:
      properties:
        properties:
          $ref: '#/components/schemas/RuleConfigProperty'
        type:
          enum:
          - SubscriberDailyTrafficRule
          - SubscriberMonthlyTrafficRule
          - SubscriberCumulativeTrafficRule
          - SubscriberFirstTrafficRule
          - SubscriberStatusAttributeRule
          - SubscriberSpeedClassAttributeRule
          - SubscriberExpiredRule
          - SubscriberImeiMismatchedRule
          - SimDailyTotalTrafficRule
          - SimMonthlyTotalTrafficRule
          - SimCumulativeTotalTrafficRule
          - SimStatusAttributeRule
          - SimSpeedClassAttributeRule
          - SimExpiredRule
          - SimImeiMismatchedRule
          - SimSubscriptionStatusRule
          - DailyTotalTrafficRule
          - MonthlyTotalTrafficRule
          - MonthlyChargeRule
          type: string
      required:
      - properties
      - type
      type: object
    RuleConfigProperty:
      properties:
        inactiveTimeoutDateConst:
          enum:
          - IMMEDIATELY
          - BEGINNING_OF_NEXT_MONTH
          - BEGINNING_OF_NEXT_DAY
          - AFTER_ONE_DAY
          - NEVER
          type: string
        inactiveTimeoutOffsetMinutes:
          type: string
        limitTotalAmount:
          type: string
        limitTotalTrafficMegaByte:
          type: string
        runOnceAmongTarget:
          enum:
          - true
          - false
          type: string
        targetOtaStatus:
          description: SimSubscriptionStatusRule の時のみ有効
          enum:
          - started
          - finished
          - failed
          type: string
        targetSpeedClass:
          description: SubscriberSpeedClassAttributeRule の時のみ有効
          enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
          - s1.4xfast
          type: string
        targetStatus:
          description: SubscriberStatusAttributeRule の時のみ有効
          enum:
          - ready
          - active
          - inactive
          - standby
          - suspended
          - terminated
          type: string
      required:
      - inactiveTimeoutDateConst
      type: object
    SessionEvent:
      properties:
        apn:
          description: The Access Point Name configured.
          type: string
        dns0:
          description: First IP address of DNS servers.
          type: string
        dns1:
          description: Second IP address of DNS servers.
          type: string
        event:
          description: The type of behavior for the event. Possible values are "Created"
            indicates the device created a new session, "Modified" indicates that
            an existing connection was modified, "Deleted" indicates a network connection
            was closed.
          type: string
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        imei:
          description: The IMEI of the device using the SIM.
          type: string
        imsi:
          description: The IMSI of the SIM.
          type: string
        operatorId:
          description: The operator ID of the session event.
          type: string
        time:
          description: The timestamp of the session event.
          format: int64
          type: integer
        ueIpAddress:
          description: The IP address of the device.
          type: string
        vpgId:
          description: The Virtual Private Gateway IP address configured.
          type: string
      type: object
    SessionStatus:
      properties:
        cell:
          $ref: '#/components/schemas/Cell'
        dnsServers:
          description: Array of IP address of the DNS servers.
          items:
            type: string
          type: array
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        imei:
          description: The IMEI of the device using the SIM.
          type: string
        imsi:
          description: IMSI
          type: string
        lastUpdatedAt:
          format: int64
          type: integer
        location:
          type: object
        online:
          description: |
            セッション状態
            - `true`: オンライン
            - `false`: オフライン
          type: boolean
        placement:
          $ref: '#/components/schemas/Placement'
        subscription:
          description: サブスクリプション
          type: string
        ueIpAddress:
          description: The IP address of the device.
          type: string
        vpgId:
          description: The Virtual Private Gateway IP address configured.
          type: string
      type: object
    SetDeviceObjectModelScopeRequest:
      properties:
        scope:
          type: string
      type: object
    SetGroupRequest:
      properties:
        groupId:
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
      type: object
    SetImeiLockRequest:
      properties:
        imei:
          type: string
      type: object
    SetNetworkSetRequest:
      properties:
        networkSetId:
          type: string
      type: object
    SetSystemNotificationsRequest:
      properties:
        emailIdList:
          items:
            type: string
          type: array
        password:
          description: オペレータのパスワード。primary タイプの設定時のみ必要。
          type: string
      required:
      - emailIdList
      type: object
    SetUserPermissionRequest:
      properties:
        description:
          type: string
        permission:
          description: Permission の JSON
          type: string
      required:
      - permission
      type: object
    ShippingAddressModel:
      description: お届け先
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        companyName:
          type: string
        countryCode:
          type: string
        department:
          type: string
        email:
          type: string
        fullName:
          type: string
        phoneNumber:
          type: string
        state:
          type: string
        zipCode:
          type: string
      required:
      - addressLine1
      - city
      - state
      - zipCode
      type: object
    ShippingCostModel:
      description: 発送料
      properties:
        appliedShippingOptions:
          description: 適用済み配送オプション
          items:
            type: object
          type: array
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        shippingArea:
          description: (日本カバレッジのみ) 発送先エリア
          enum:
          - hokkaido
          - kita_tohoku
          - minami_tohoku
          - kanto
          - shinetsu
          - chubu
          - hokuriku
          - kansai
          - chugoku
          - shikoku
          - kyushu
          - okinawa
          type: string
        shippingAreaName:
          description: 発送先エリア名称
          type: string
        shippingCost:
          description: 送料
          format: double
          type: number
        size:
          description: 発送サイズ
          format: int32
          type: integer
      type: object
    SigfoxData:
      properties:
        data:
          type: string
      type: object
    SigfoxDevice:
      properties:
        device_id:
          type: string
        groupId:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        lastSeen:
          $ref: '#/components/schemas/LastSeen'
        operatorId:
          type: string
        status:
          enum:
          - active
          - ready
          - terminated
          - instock
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        terminationEnabled:
          default: false
          type: boolean
      type: object
    SigfoxRegistrationRequest:
      properties:
        registrationSecret:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    Sim:
      properties:
        activeProfileId:
          type: string
        arcSessionStatus:
          $ref: '#/components/schemas/ArcSessionStatus'
        capabilities:
          $ref: '#/components/schemas/Capabilities'
        createdTime:
          format: int64
          type: integer
        expiryAction:
          enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
          - (null value)
          type: string
        expiryTime:
          format: int64
          type: integer
        groupId:
          type: string
        imeiLock:
          $ref: '#/components/schemas/ImeiLock'
        lastModifiedTime:
          format: int64
          type: integer
        lastPortMappingCreatedTime:
          format: int64
          type: integer
        localInfo:
          $ref: '#/components/schemas/Map'
        moduleType:
          type: string
        operatorId:
          type: string
        otaSerialNumber:
          type: string
        pcapEndTime:
          format: int64
          type: integer
        pcapStartTime:
          format: int64
          type: integer
        previousSession:
          $ref: '#/components/schemas/PreviousSessionStatus'
        profiles:
          additionalProperties:
            $ref: '#/components/schemas/SimProfile'
          type: object
        serialNumber:
          type: string
        sessionStatus:
          $ref: '#/components/schemas/SessionStatus'
        simId:
          type: string
        speedClass:
          type: string
        status:
          description: |
            IoT SIM のステータス
            - `ready`: 準備完了
            - `active`: 使用中
            - `inactive`: 休止中
            - `standby`: 利用開始待ち
            - `suspended`: 利用中断中
            - `terminated`: 解約済み
          enum:
          - ready
          - active
          - inactive
          - standby
          - suspended
          - terminated
        tags:
          $ref: '#/components/schemas/TagSet'
        terminationEnabled:
          type: boolean
        type:
          enum:
          - euicc
          - uicc
          - virtual
          type: string
      type: object
    SimProfile:
      properties:
        arcClientPeerPrivateKey:
          type: string
        arcClientPeerPublicKey:
          type: string
        iccid:
          type: string
        otaSupported:
          type: boolean
        primaryImsi:
          type: string
        subscribers:
          additionalProperties:
            $ref: '#/components/schemas/SimplifiedSubscriber'
          type: object
      type: object
    SimplifiedSubscriber:
      properties:
        bundles:
          items:
            type: string
          type: array
        capabilities:
          $ref: '#/components/schemas/Capabilities'
        imsi:
          type: string
        msisdn:
          type: string
        status:
          type: string
        subscription:
          type: string
      type: object
    SmsForwardingReport:
      properties:
        messageId:
          type: string
      type: object
    SmsForwardingRequest:
      properties:
        encodingType:
          default: 2
          description: |
            メッセージ本体のエンコーディングタイプ。デフォルトは `2` (`DCS_UCS2`)。
            - `1`: GSM 7 ビット標準アルファベットを送信できます。漢字やキリル文字、アラビア文字などは送信できません。最大 160 文字 (最大 140 バイト)。

                例: `{"encodingType":1, "payload":"Test message."}`
            - `2`: UCS-2 で送信する。漢字やキリル文字、アラビア文字などを送信できます。最大 70 文字。

                例: `{"encodingType":2, "payload":"テストメッセージ"}`
          type: integer
        payload:
          type: string
      type: object
    SoraCamDevice:
      properties:
        appliedLicenses:
          description: |
            ソラカメ対応カメラに適用されているライセンス。この情報は、[`SoraCam:listSoraCamDevices API`](/ja-jp/tools/api/reference/#/SoraCam/listSoraCamDevices) を使用しても取得できません。[`SoraCam:getSoraCamDevice API`](/ja-jp/tools/api/reference/#/SoraCam/getSoraCamDevice) を使用してください。
          items:
            $ref: '#/components/schemas/SoraCamDeviceLicenseInfo'
          type: array
        configuration:
          $ref: '#/components/schemas/SoraCamDeviceConfiguration'
          description: ソラカメ対応カメラの現在のコンフィグレーション
        connected:
          description: ソラカメ対応カメラが現在クラウドに接続されているかどうか
          type: boolean
        deviceCategory:
          description: |
            ソラカメ対応カメラの種類

            - `Camera`
          type: string
        deviceId:
          description: ソラカメ対応カメラのデバイス ID
          type: string
        firmwareVersion:
          description: ソラカメ対応カメラの現在のファームウェアバージョン
          type: string
        lastConnectedTime:
          description: ソラカメ対応カメラが最後にクラウドに接続した UNIX 時間 (ミリ秒)
          format: int64
          type: integer
        name:
          description: ソラカメ対応カメラの名前
          type: string
        productDisplayName:
          description: ソラカメ対応カメラの製品名
          type: string
      type: object
    SoraCamDeviceConfiguration:
      description: ソラカメ対応カメラのコンフィグレーション
      properties:
        audioAlarmEnabled:
          description: 音声アラームが有効化されているかどうか
          type: boolean
        motionDetectionEnabled:
          description: モーション検知が有効化されているかどうか
          type: boolean
        smokeAlarmEnabled:
          description: 煙検知が有効化されているかどうか
          type: boolean
      type: object
    SoraCamDeviceLicenseInfo:
      properties:
        name:
          description: |
            ソラカメ対応カメラに適用されているライセンスの名前

            - `Cloud Continuous Recording`: クラウド常時録画ライセンス
          type: string
        value:
          description: |
            ソラカメ対応カメラに適用されているライセンスのプロパティ

            `name` が `Cloud Continuous Recording` の場合:

            - `storage_life`: 保存期間
          type: string
      type: object
    SoraCamExportUsage:
      properties:
        deviceId:
          description: ソラカメ対応カメラのデバイス ID
          type: string
        image:
          $ref: '#/components/schemas/SoraCamImageExportUsage'
          description: 静止画のエクスポート可能枚数
        meteredYearMonth:
          description: '静止画の残りのエクスポート可能枚数や、録画映像の残りのエクスポート可能時間などを取得した年月 (フォーマット: ''YYYYMM'')'
          type: string
        video:
          $ref: '#/components/schemas/SoraCamVideoExportUsage'
          description: 録画映像のエクスポート可能時間
      type: object
    SoraCamImageExportInfo:
      properties:
        deviceId:
          description: ソラカメ対応カメラのデバイス ID
          type: string
        expiryTime:
          description: URL の有効期限 (UNIX 時間 (ミリ秒))。`status` が `completed` の場合のみ含まれます。
          format: int64
          type: integer
        exportId:
          description: |
            エクスポート ID。[`SoraCam:exportSoraCamDeviceRecordedImage API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedImage) で取得したエクスポート ID を、[`SoraCam:getSoraCamDeviceExportedImage API`](/ja-jp/tools/api/reference/#/SoraCam/getSoraCamDeviceExportedImage) で指定すると、jpg ファイルをダウンロードするための URL を取得できます。
          type: string
        operatorId:
          description: |
            [`SoraCam:exportSoraCamDeviceRecordedImage API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedImage) を呼び出したオペレーターの ID
          type: string
        requestedTime:
          description: |
            [`SoraCam:exportSoraCamDeviceRecordedImage API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedImage) によるエクスポートのリクエストを SORACOM プラットフォームが受け付けた日時 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        status:
          description: |
            エクスポート処理の現在の状況。

            - `initializing`: 初期状態
            - `processing`: 処理中
            - `completed`: エクスポート完了
            - `failed`: エクスポート失敗
            - `expired`: URL の有効期限切れ
          enum:
          - initializing
          - processing
          - completed
          - failed
          - expired
          type: string
        url:
          description: エクスポートされた jpg ファイルをダウンロードするための URL。`status` が `completed` の場合のみ含まれます。
          type: string
      type: object
    SoraCamImageExportSpecification:
      properties:
        imageFilters:
          description: エクスポートした静止画に適用するフィルタ
          items:
            enum:
            - wide_angle_correction
            type: string
          type: array
        time:
          description: エクスポート対象の時刻 (UNIX 時間 (ミリ秒))。指定した時刻に撮影された録画映像から静止画がエクスポートされます。
          format: int64
          type: integer
      required:
      - time
      type: object
    SoraCamImageExportUsage:
      properties:
        remainingFrames:
          description: 今月中にエクスポート可能な静止画の残りの枚数
          type: integer
        usedFrames:
          description: 今月消費した動画の視聴可能時間をすべて静止画でエクスポートしたと仮定した場合の静止画の枚数
          type: integer
      type: object
    SoraCamLicensePackQuantityUpdatingRequest:
      properties:
        currentQuantity:
          description: 現在のライセンス数
          example: 1
          format: int32
          type: integer
        desiredQuantity:
          description: 変更後のライセンス数
          example: 2
          format: int32
          type: integer
      type: object
    SoraCamLicensePackResponse:
      properties:
        id:
          description: ライセンスパックの ID
          example: CR7-SC
          type: string
        name:
          description: ライセンスパックの名前
          example: Cloud Recording License (7 Days)
          type: string
        quantity:
          description: 現在のライセンス数
          example: 1
          format: int32
          type: integer
        salesChannel:
          description: ライセンスパックの販売元
          example: SORACOM Inc.
          type: string
      type: object
    SoraCamPlayListEntry:
      properties:
        from:
          description: 録画映像の開始時刻 (UNIX 時間 (ミリ秒))。リアルタイム映像の場合は省略されます。
          format: int64
          type: integer
        to:
          description: 録画映像の終了時刻 (UNIX 時間 (ミリ秒))。リアルタイム映像の場合は省略されます。
          format: int64
          type: integer
        url:
          description: |
            ストリーミング映像 (リアルタイム映像 / 録画映像) の mpd ファイルを取得するための URL

            - 以下の場合は URL が返されません。
              - リアルタイム映像を取得しようとした場合に、ソラカメ対応カメラの電源が入っていない。
              - リアルタイム映像を取得しようとした場合に、ソラカメ対応カメラでクラウド録画が開始されていない。
              - 録画映像を取得しようとした場合に、指定した `from` から `to` の間に録画映像が存在しない。
          type: string
      type: object
    SoraCamStreamingVideo:
      properties:
        playList:
          description: |
            ストリーミング映像 (リアルタイム映像 / 録画映像) のプレイリストエントリーの配列

            - リアルタイム映像の場合は、返却される動画ファイルは常にひとつです。また、`from` および `to` は省略されます。
            - 録画映像の場合は、録画の状態によって動画ファイルが分割されていることがあります。
          items:
            $ref: '#/components/schemas/SoraCamPlayListEntry'
          type: array
      type: object
    SoraCamVideoExportInfo:
      properties:
        deviceId:
          description: ソラカメ対応カメラのデバイス ID
          type: string
        expiryTime:
          description: URL の有効期限 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        exportId:
          description: |
            エクスポート ID。[`SoraCam:exportSoraCamDeviceRecordedVideo API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedVideo) で取得したエクスポート ID を、[`SoraCam:getSoraCamDeviceExportedVideo API`](/ja-jp/tools/api/reference/#/SoraCam/getSoraCamDeviceExportedVideo) で指定すると、mp4 ファイルを zip 形式で圧縮したファイルをダウンロードするための URL を取得できます。
          type: string
        operatorId:
          description: |
            [`SoraCam:exportSoraCamDeviceRecordedVideo API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedVideo) を呼び出したオペレーターの ID
          type: string
        requestedTime:
          description: |
            [`SoraCam:exportSoraCamDeviceRecordedVideo API`](/ja-jp/tools/api/reference/#/SoraCam/exportSoraCamDeviceRecordedVideo) によるエクスポートのリクエストを SORACOM プラットフォームが受け付けた日時 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        status:
          description: |
            エクスポート処理の現在の状況。

            - `initializing`: 初期状態
            - `processing`: 処理中
            - `completed`: エクスポート完了
            - `failed`: エクスポート失敗
            - `expired`: URL の有効期限切れ
          enum:
          - initializing
          - processing
          - completed
          - failed
          - expired
          type: string
        url:
          description: |
            mp4 ファイルを zip 形式で圧縮したファイルをダウンロードするための URL。`status` が `completed` の場合のみ含まれます。

            - ダウンロードした zip 形式のファイルを展開すると、mp4 ファイルを取得できます。
          type: string
      type: object
    SoraCamVideoExportSpecification:
      properties:
        from:
          description: エクスポート対象の開始時刻 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        to:
          description: |
            エクスポート対象の終了時刻 (UNIX 時間 (ミリ秒))

            - 一回の API 呼び出しでエクスポートできる時間は最大 300 秒 (5 分) です。`from` と `to` の差が、300 秒を超えないようにしてください。
          format: int64
          type: integer
      required:
      - from
      - to
      type: object
    SoraCamVideoExportUsage:
      properties:
        remainingSeconds:
          description: 今月中にエクスポート可能な録画映像の残りの秒数
          type: integer
        usedSeconds:
          description: 今月消費した動画の視聴可能時間をすべて録画映像でエクスポートしたと仮定した場合の、エクスポート可能な秒数
          type: integer
      type: object
    SoracomBeamStats:
      properties:
        count:
          format: int64
          type: integer
      type: object
    SoracomFunkStats:
      properties:
        count:
          format: int64
          type: integer
      type: object
    SoracomFunnelStats:
      properties:
        count:
          format: int64
          type: integer
      type: object
    SoracomHarvestStats:
      properties:
        count:
          format: int64
          type: integer
      type: object
    Soralet:
      properties:
        createdTime:
          format: int64
          type: integer
        description:
          type: string
        operatorId:
          type: string
        soraletId:
          type: string
        updatedTime:
          format: int64
          type: integer
      type: object
    SoraletDataSource:
      properties:
        resourceId:
          type: string
        resourceType:
          type: string
      required:
      - resourceType
      - resourceId
      type: object
    SoraletLog:
      properties:
        createdTime:
          format: int64
          type: integer
        message:
          type: string
        operatorId:
          type: string
        soraletId:
          type: string
        version:
          format: int64
          type: integer
      type: object
    SoraletVersion:
      properties:
        createdTime:
          format: int64
          type: integer
        hash:
          type: string
        operatorId:
          type: string
        size:
          format: int64
          type: integer
        soraletId:
          type: string
        srn:
          type: string
        version:
          format: int64
          type: integer
      type: object
    Subscriber:
      properties:
        apn:
          description: この SIM で使用可能な APN（アクセスポイント名）
          type: string
        bundles:
          items:
            type: string
          type: array
        createdAt:
          description: この SIM が作成された日時のタイムスタンプ
          format: int64
          type: integer
        expiredAt:
          description: この SIM の有効期限が切れた日時のタイムスタンプ
          format: int64
          type: integer
        expiredTime:
          description: この SIM の有効期限が切れた日時のタイムスタンプ
          format: int64
          type: integer
        expiryAction:
          enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
          - (null value)
          type: string
        groupId:
          description: この SIM が所属しているグループの ID
          type: string
        iccid:
          description: この SIM の ICCID
          type: string
        imeiLock:
          $ref: '#/components/schemas/ImeiLock'
        imsi:
          description: この SIM の IMSI
          type: string
        ipAddress:
          type: string
        lastModifiedAt:
          description: この SIM の情報が変更された日時のタイムスタンプ
          format: int64
          type: integer
        lastPortMappingCreatedTime:
          description: この SIM で Napter オンデマンドリモートアクセスサービスが利用された日時のタイムスタンプ（ミリ秒単位の Unix
            時間）。 この SIM で一度も Napter を利用したことがなければ null となります。
          format: int64
          type: integer
        locationRegistrationStatus:
          $ref: '#/components/schemas/LocationRegistrationStatus'
          description: 各ネットワークへのネットワーク登録状況
        moduleType:
          description: 物理的な SIM の形状（フォームファクタ）。取りうる値は、標準 (2FF) サイズの "mini"、 3FF サイズの
            "micro"、4FF サイズの "nano"、切り取りかた次第で 2FF/3FF/4FF いずれのサイズにもできる "trio"、MFF2
            とも呼ばれる組込み型 (eSIM) の "embedded" です。
          type: string
        msisdn:
          description: この SIM の MSISDN
          type: string
        operatorId:
          description: この SIM を所有しているオペレーターのオペレーター ID
          type: string
        plan:
          description: SMS 機能を有しているかどうか。0 なら SMS 未対応、1 なら SMS 対応。
          type: integer
        previousSession:
          $ref: '#/components/schemas/PreviousSessionStatus'
        registeredTime:
          description: この SIM が手動でオペレーターに登録された日時を表すタイムスタンプ（ミリ秒単位の Unix 時刻） ユーザーコンソールから
            SIM を購入し、自動的に登録された場合はこのフィールドは存在しません。
          format: int64
          type: integer
        serialNumber:
          description: この SIM のシリアル番号
          type: string
        sessionStatus:
          $ref: '#/components/schemas/SessionStatus'
        simId:
          description: この SIM の SIM ID
          type: string
        speedClass:
          description: この SIM の速度クラス
          type: string
        status:
          description: この SIM の契約状態。取りうる値は "ready"、"active"、"inactive"、"standby"、
            "suspended" もしくは "terminated"
          type: string
        subscription:
          description: この SIM のサブスクリプションの名前
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
        terminationEnabled:
          type: boolean
        type:
          description: この SIM の速度クラス
          type: string
      type: object
    SubscriptionContainer:
      properties:
        containerId:
          format: int64
          type: integer
        downloaded:
          type: boolean
        subscriber:
          additionalProperties:
            $ref: '#/components/schemas/Subscriber'
          type: object
      type: object
    SubscriptionContainerStatus:
      properties:
        containers:
          items:
            $ref: '#/components/schemas/SubscriptionContainer'
          type: array
        countryMapping:
          additionalProperties:
            properties:
              mappingRecord:
                properties:
                  containerId:
                    format: int64
                    type: integer
                  subscription:
                    type: string
                type: object
              plmnCode:
                type: string
            type: object
          type: object
      type: object
    SupportTokenResponse:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    SystemNotificationsModel:
      properties:
        emailIdList:
          items:
            type: string
          type: array
        type:
          description: 通知種別
          enum:
          - primary
          - recovery
          - billing
          - support
          type: string
        updateDateTime:
          format: int64
          type: integer
      type: object
    TagSet:
      additionalProperties:
        type: string
      description: An object which always contains at least one property "name" with
        a string value. If you give a subscriber/SIM a name, the name will be returned
        as the value of the "name" property. If the subscriber/SIM does not have a
        name, an empty string "" is returned. In addition, if you create any custom
        tags for the subscriber/SIM, each custom tag will appear as additional properties
        in the object.
      example:
        tagName1: tagValue1
        tagName2: tagValue2...
      type: object
    TagUpdateRequest:
      properties:
        tagName:
          type: string
        tagValue:
          type: string
      required:
      - tagName
      - tagValue
      type: object
    TrafficVolumeRanking:
      properties:
        imsi:
          type: string
        trafficVolume:
          format: int64
          type: integer
      type: object
    UpdateDefaultPermissionsRequest:
      properties:
        permissions:
          description: 権限の JSON 文字列
          type: string
      required:
      - permissions
      type: object
    UpdateEventHandlerRequest:
      $ref: '#/components/schemas/CreateEventHandlerRequest'
    UpdatePasswordRequest:
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
      required:
      - currentPassword
      - newPassword
      type: object
    UpdatePermissionRequest:
      properties:
        operatorId:
          type: string
      type: object
    UpdateSpeedClassRequest:
      properties:
        speedClass:
          description: |
            速度クラス。以下のいずれかを指定します。ただし、サブスクリプションにあわせた速度クラスを指定してください。
            - plan01s、plan01s - Low Data Volume、planP1、planX3 X3-5MB、plan-D の場合:
                - `s1.minimum`
                - `s1.slow`
                - `s1.standard`
                - `s1.fast`
                - `s1.4xfast`
            - plan-KM1 の場合:
                - `t1.standard`
            - plan-DU の場合:
                - `u1.standard`
                - `u1.slow`
            - バーチャル SIM/Subscriber の場合:
                - `arc.standard`
          enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
          - s1.4xfast
          - t1.standard
          - u1.standard
          - u1.slow
          - arc.standard
          type: string
      required:
      - speedClass
      type: object
    UpdateUserRequest:
      properties:
        description:
          type: string
      type: object
    UserDetailResponse:
      properties:
        authKeyList:
          items:
            $ref: '#/components/schemas/AuthKeyResponse'
          type: array
        createDateTime:
          format: int64
          type: integer
        description:
          type: string
        hasPassword:
          type: boolean
        permission:
          type: string
        roleList:
          items:
            $ref: '#/components/schemas/ListRolesResponse'
          type: array
        updateDateTime:
          format: int64
          type: integer
        userName:
          type: string
      type: object
    VerifyAddEmailTokenRequest:
      properties:
        token:
          description: メールで送信されたトークン
          type: string
      required:
      - token
      type: object
    VerifyOperatorsRequest:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    VerifyPasswordResetTokenRequest:
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
      type: object
    VerifySubscriberTransferTokenRequest:
      properties:
        token:
          description: トークン
          type: string
      required:
      - token
      type: object
    VerifySubscriberTransferTokenResponse:
      properties:
        transferredImsi:
          description: 移管された IMSI リスト
          items:
            type: string
          type: array
      required:
      - transferredImsi
      type: object
    VirtualPrivateGateway:
      properties:
        allowedOperators:
          type: object
        createdTime:
          format: int64
          type: integer
        deviceSubnetCidrRange:
          description: デバイスサブネット IP アドレスレンジ
          type: string
        fixedIpAddressesEnabled:
          description: |
            固定グローバル IP アドレスオプション

            - `true`: 有効
            - `false`: 無効
          type: boolean
        gateVxlanId:
          type: number
        implicitTerminationProtected:
          type: boolean
        junctionEnabled:
          type: boolean
        lastModifiedTime:
          format: int64
          type: integer
        operatorId:
          type: string
        placement:
          $ref: '#/components/schemas/Placement'
        size:
          type: string
        status:
          enum:
          - running
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
        type:
          description: |
            VPG のタイプ

            - `14` : Type-E
            - `15` : Type-F
          enum:
          - 12
          - 13
          - 14
          - 15
          type: integer
        ueSubnetCidrRange:
          description: デバイスサブネット IP アドレスレンジ
          type: string
        useInternetGateway:
          description: |
            インターネットゲートウェイ

            - `true`: 有効
            - `false`: 無効
          type: boolean
        virtualInterfaces:
          $ref: '#/components/schemas/Map'
        vpcPeeringConnections:
          $ref: '#/components/schemas/Map'
        vpgId:
          description: ID
          type: string
      type: object
    VolumeDiscountModel:
      description: Long term discount
      properties:
        contractTermMonth:
          default: 12
          description: 契約月数
          format: int32
          type: integer
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        endDate:
          description: 適用終了日
          example: yyyyMMdd
          type: string
        initialCost:
          description: 初期費用
          format: double
          type: number
        quantity:
          description: 数量
          format: int32
          type: integer
        startDate:
          description: 適用開始日
          example: yyyyMMdd
          type: string
        taxIncludedInitialCost:
          description: 税込初期費用
          format: double
          type: number
        taxIncludedUnitPrice:
          description: 税込単価
          format: double
          type: number
        unitPrice:
          description: 単価
          format: double
          type: number
        volumeDiscountPaymentType:
          description: お支払い方法
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: 料金計算方法
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      type: object
    VpcPeeringConnection:
      properties:
        destinationCidrBlock:
          type: string
        id:
          type: string
        peerOwnerId:
          type: string
        peerVpcId:
          type: string
      type: object
  securitySchemes:
    api_key:
      in: header
      name: X-Soracom-API-Key
      type: apiKey
    api_token:
      in: header
      name: X-Soracom-Token
      type: apiKey
tags:
- description: '[監査ログ](/ja-jp/docs/api-audit-logs/)'
  name: AuditLog
- description: |
    [API 呼び出しにおける認証](/ja-jp/tools/api/key-and-token/)
    - API キーおよび API トークンの発行
    - パスワードリセットトークンの発行および検証
  name: Auth
- description: '[利用料金 (支払明細)](/ja-jp/guides/accounting/check-usage/)'
  name: Billing
- description: '[基地局の位置情報](/ja-jp/docs/air/get-location-info/#基地局の位置情報を取得する)'
  name: CellLocation
- description: |
    - [クーポンコード](/ja-jp/guides/accounting/payment/register-coupon/)
    - [利用料金 (支払明細)](/ja-jp/guides/accounting/check-usage/)
    - [お支払い方法](/ja-jp/guides/accounting/payment/)
    - [長期利用割引](/ja-jp/docs/air/volume-discount/)
  name: Payment
- description: |
    - [クーポンコード](/ja-jp/guides/accounting/payment/register-coupon/)
    - [長期利用割引](/ja-jp/docs/air/volume-discount/)
    - 発注
    - 商品一覧
  name: Order
- description: |
    [認証情報ストア](/ja-jp/docs/credentials-store/)
    認証情報の作成、更新、削除
  name: Credential
- description: '[SORACOM Harvest Data](/ja-jp/docs/harvest/)'
  name: DataEntry
- description: '[SORACOM Inventory オブジェクトモデル](/ja-jp/docs/inventory/define-custom-object/)'
  name: DeviceObjectModel
- description: '[SORACOM Inventory デバイス](/ja-jp/docs/inventory/)'
  name: Device
- description: '[診断機能](/ja-jp/docs/diagnostic/)'
  name: Diagnostic
- description: '[イベントハンドラー](/ja-jp/docs/event-handler/)'
  name: EventHandler
- description: '[SORACOM Harvest Files](/ja-jp/docs/harvest/)'
  name: FileEntry
- description: |
    以下の API でエクスポートされたファイルのダウンロード
    - [Billing](/ja-jp/tools/api/reference/#/Billing)
    - [Payment: exportPaymentStatement](/ja-jp/tools/api/reference/#/Payment/exportPaymentStatement)
    - [Stats](/ja-jp/tools/api/reference/#/Stats)
    - [Subscriber:exportSubscribers](/ja-jp/tools/api/reference/#/Subscriber/exportSubscribers)
  name: Files
- description: '[SORACOM LTE-M Button powered by AWS](/ja-jp/guides/soracom-lte-m-button-series/lte-m-button-aws/)'
  name: Gadget
- description: '[グループ設定](/ja-jp/docs/group-configuration/)'
  name: Group
- description: |
    [SORACOM Lagoon](/ja-jp/docs/lagoon-v2/)
    ユーザーやプランの制御
  name: Lagoon
- description: エラーログ
  name: Log
- description: '[SORACOM Air for LoRaWAN](/ja-jp/docs/air-for-lorawan/) デバイス'
  name: LoraDevice
- description: '[SORACOM Air for LoRaWAN](/ja-jp/docs/air-for-lorawan/) ゲートウェイ'
  name: LoraGateway
- description: '[SORACOM Air for LoRaWAN](/ja-jp/docs/air-for-lorawan/) ネットワークセット'
  name: LoraNetworkSet
- description: |
    - オペレータ
    - 登録情報の更新
    - パスワード変更
    - [多要素認証](/ja-jp/docs/mfa/)
  name: Operator
- description: '[メールアドレス](/ja-jp/docs/email/)'
  name: Email
- description: '[アクセス管理 (SORACOM Access Management)](/ja-jp/docs/sam/)'
  name: Role
- description: 直販での発送先住所に関する操作
  name: ShippingAddress
- description: '[Soracom Cloud Camera Services](/ja-jp/guides/soracom-cloud-camera-services/)'
  name: SoraCam
- description: '[メールアドレス](/ja-jp/docs/email/)'
  name: SystemNotification
- description: |
    - [アクセス管理 (SORACOM Access Management)](/ja-jp/docs/sam/)
    - パスワード変更
    - [多要素認証](/ja-jp/docs/mfa/)
  name: User
- description: '[SORACOM Napter](/ja-jp/docs/napter/)'
  name: PortMapping
- description: SIM、SORACOM Inventory デバイス、Sigfox デバイスの検索
  name: Query
- description: '[SORACOM Air for Sigfox](/ja-jp/docs/air-for-sigfox/) デバイス'
  name: SigfoxDevice
- description: |
    [SORACOM Air for セルラー](/ja-jp/docs/air/) の SIM の情報取得、操作、解約

    (Subscriber と同等だがサブスクリプションコンテナに対応した新しい API)
  name: Sim
- description: '[SORACOM Orbit](/ja-jp/docs/orbit/) Soralet'
  name: Soralet
- description: '[通信量履歴](/ja-jp/docs/air/view-data-usage/) の取得'
  name: Stats
- description: '[SORACOM Air for セルラー](/ja-jp/docs/air/) の SIM の情報取得、操作、解約'
  name: Subscriber
- description: |
    - [Virtual Private Gateway (VPG)](/ja-jp/docs/vpg/) (Canal / Direct / Door / Gate)
    - [SORACOM Junction](/ja-jp/docs/junction/)
    - [SORACOM Peek](/ja-jp/docs/peek/)
  name: VirtualPrivateGateway
